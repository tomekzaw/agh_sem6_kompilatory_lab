Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions
Rule 2     instructions -> instructions instruction
Rule 3     instructions -> <empty>
Rule 4     instruction -> { instructions }
Rule 5     instruction -> IF ( condition ) instruction
Rule 6     instruction -> IF ( condition ) instruction ELSE instruction
Rule 7     instruction -> FOR variable = range instruction
Rule 8     instruction -> WHILE ( condition ) instruction
Rule 9     condition -> expression EQ expression
Rule 10    condition -> expression NEQ expression
Rule 11    condition -> expression LTE expression
Rule 12    condition -> expression GTE expression
Rule 13    condition -> expression < expression
Rule 14    condition -> expression > expression
Rule 15    variable -> ID
Rule 16    range -> expression : expression
Rule 17    instruction -> statement ;
Rule 18    statement -> BREAK
Rule 19    statement -> CONTINUE
Rule 20    statement -> RETURN
Rule 21    statement -> RETURN expression
Rule 22    statement -> PRINT expression_list
Rule 23    statement -> lvalue = expression
Rule 24    statement -> lvalue ADDASSIGN expression
Rule 25    statement -> lvalue SUBASSIGN expression
Rule 26    statement -> lvalue MULASSIGN expression
Rule 27    statement -> lvalue DIVASSIGN expression
Rule 28    lvalue -> variable
Rule 29    lvalue -> variable [ expression_list ]
Rule 30    expression -> expression + expression
Rule 31    expression -> expression - expression
Rule 32    expression -> expression * expression
Rule 33    expression -> expression / expression
Rule 34    expression -> expression DOTADD expression
Rule 35    expression -> expression DOTSUB expression
Rule 36    expression -> expression DOTMUL expression
Rule 37    expression -> expression DOTDIV expression
Rule 38    expression -> - expression
Rule 39    expression -> expression '
Rule 40    expression -> ( expression )
Rule 41    expression -> lvalue
Rule 42    expression -> INTNUM
Rule 43    expression -> FLOATNUM
Rule 44    expression -> STRING
Rule 45    expression_list -> expression_list , expression
Rule 46    expression_list -> expression
Rule 47    expression_list -> <empty>
Rule 48    expression -> [ expression_list ]
Rule 49    expression -> [ matrix_rows ]
Rule 50    matrix_rows -> matrix_rows ; expression_list
Rule 51    matrix_rows -> expression_list
Rule 52    expression -> EYE ( expression )
Rule 53    expression -> EYE ( expression , expression )
Rule 54    expression -> ZEROS ( expression )
Rule 55    expression -> ZEROS ( expression , expression )
Rule 56    expression -> ONES ( expression )
Rule 57    expression -> ONES ( expression , expression )

Terminals, with rules where they appear

'                    : 39
(                    : 5 6 8 40 52 53 54 55 56 57
)                    : 5 6 8 40 52 53 54 55 56 57
*                    : 32
+                    : 30
,                    : 45 53 55 57
-                    : 31 38
/                    : 33
:                    : 16
;                    : 17 50
<                    : 13
=                    : 7 23
>                    : 14
ADDASSIGN            : 24
BREAK                : 18
CONTINUE             : 19
DIVASSIGN            : 27
DOTADD               : 34
DOTDIV               : 37
DOTMUL               : 36
DOTSUB               : 35
ELSE                 : 6
EQ                   : 9
EYE                  : 52 53
FLOATNUM             : 43
FOR                  : 7
GTE                  : 12
ID                   : 15
IF                   : 5 6
INTNUM               : 42
LTE                  : 11
MULASSIGN            : 26
NEQ                  : 10
ONES                 : 56 57
PRINT                : 22
RETURN               : 20 21
STRING               : 44
SUBASSIGN            : 25
WHILE                : 8
ZEROS                : 54 55
[                    : 29 48 49
]                    : 29 48 49
error                : 
{                    : 4
}                    : 4

Nonterminals, with rules where they appear

condition            : 5 6 8
expression           : 9 9 10 10 11 11 12 12 13 13 14 14 16 16 21 23 24 25 26 27 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 39 40 45 46 52 53 53 54 55 55 56 57 57
expression_list      : 22 29 45 48 50 51
instruction          : 2 5 6 6 7 8
instructions         : 1 2 4
lvalue               : 23 24 25 26 27 41
matrix_rows          : 49 50
program              : 0
range                : 7
statement            : 17
variable             : 7 28 29

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions
    (2) instructions -> . instructions instruction
    (3) instructions -> .

    {               reduce using rule 3 (instructions -> .)
    IF              reduce using rule 3 (instructions -> .)
    FOR             reduce using rule 3 (instructions -> .)
    WHILE           reduce using rule 3 (instructions -> .)
    BREAK           reduce using rule 3 (instructions -> .)
    CONTINUE        reduce using rule 3 (instructions -> .)
    RETURN          reduce using rule 3 (instructions -> .)
    PRINT           reduce using rule 3 (instructions -> .)
    ID              reduce using rule 3 (instructions -> .)
    $end            reduce using rule 3 (instructions -> .)

    program                        shift and go to state 1
    instructions                   shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions .
    (2) instructions -> instructions . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . IF ( condition ) instruction
    (6) instruction -> . IF ( condition ) instruction ELSE instruction
    (7) instruction -> . FOR variable = range instruction
    (8) instruction -> . WHILE ( condition ) instruction
    (17) instruction -> . statement ;
    (18) statement -> . BREAK
    (19) statement -> . CONTINUE
    (20) statement -> . RETURN
    (21) statement -> . RETURN expression
    (22) statement -> . PRINT expression_list
    (23) statement -> . lvalue = expression
    (24) statement -> . lvalue ADDASSIGN expression
    (25) statement -> . lvalue SUBASSIGN expression
    (26) statement -> . lvalue MULASSIGN expression
    (27) statement -> . lvalue DIVASSIGN expression
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    $end            reduce using rule 1 (program -> instructions .)
    {               shift and go to state 4
    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 15

    instruction                    shift and go to state 3
    variable                       shift and go to state 7
    statement                      shift and go to state 9
    lvalue                         shift and go to state 14

state 3

    (2) instructions -> instructions instruction .

    {               reduce using rule 2 (instructions -> instructions instruction .)
    IF              reduce using rule 2 (instructions -> instructions instruction .)
    FOR             reduce using rule 2 (instructions -> instructions instruction .)
    WHILE           reduce using rule 2 (instructions -> instructions instruction .)
    BREAK           reduce using rule 2 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 2 (instructions -> instructions instruction .)
    RETURN          reduce using rule 2 (instructions -> instructions instruction .)
    PRINT           reduce using rule 2 (instructions -> instructions instruction .)
    ID              reduce using rule 2 (instructions -> instructions instruction .)
    $end            reduce using rule 2 (instructions -> instructions instruction .)
    }               reduce using rule 2 (instructions -> instructions instruction .)


state 4

    (4) instruction -> { . instructions }
    (2) instructions -> . instructions instruction
    (3) instructions -> .

    }               reduce using rule 3 (instructions -> .)
    {               reduce using rule 3 (instructions -> .)
    IF              reduce using rule 3 (instructions -> .)
    FOR             reduce using rule 3 (instructions -> .)
    WHILE           reduce using rule 3 (instructions -> .)
    BREAK           reduce using rule 3 (instructions -> .)
    CONTINUE        reduce using rule 3 (instructions -> .)
    RETURN          reduce using rule 3 (instructions -> .)
    PRINT           reduce using rule 3 (instructions -> .)
    ID              reduce using rule 3 (instructions -> .)

    instructions                   shift and go to state 16

state 5

    (5) instruction -> IF . ( condition ) instruction
    (6) instruction -> IF . ( condition ) instruction ELSE instruction

    (               shift and go to state 17


state 6

    (7) instruction -> FOR . variable = range instruction
    (15) variable -> . ID

    ID              shift and go to state 15

    variable                       shift and go to state 18

state 7

    (28) lvalue -> variable .
    (29) lvalue -> variable . [ expression_list ]

    =               reduce using rule 28 (lvalue -> variable .)
    ADDASSIGN       reduce using rule 28 (lvalue -> variable .)
    SUBASSIGN       reduce using rule 28 (lvalue -> variable .)
    MULASSIGN       reduce using rule 28 (lvalue -> variable .)
    DIVASSIGN       reduce using rule 28 (lvalue -> variable .)
    +               reduce using rule 28 (lvalue -> variable .)
    -               reduce using rule 28 (lvalue -> variable .)
    *               reduce using rule 28 (lvalue -> variable .)
    /               reduce using rule 28 (lvalue -> variable .)
    DOTADD          reduce using rule 28 (lvalue -> variable .)
    DOTSUB          reduce using rule 28 (lvalue -> variable .)
    DOTMUL          reduce using rule 28 (lvalue -> variable .)
    DOTDIV          reduce using rule 28 (lvalue -> variable .)
    '               reduce using rule 28 (lvalue -> variable .)
    ;               reduce using rule 28 (lvalue -> variable .)
    ,               reduce using rule 28 (lvalue -> variable .)
    EQ              reduce using rule 28 (lvalue -> variable .)
    NEQ             reduce using rule 28 (lvalue -> variable .)
    LTE             reduce using rule 28 (lvalue -> variable .)
    GTE             reduce using rule 28 (lvalue -> variable .)
    <               reduce using rule 28 (lvalue -> variable .)
    >               reduce using rule 28 (lvalue -> variable .)
    ]               reduce using rule 28 (lvalue -> variable .)
    )               reduce using rule 28 (lvalue -> variable .)
    :               reduce using rule 28 (lvalue -> variable .)
    {               reduce using rule 28 (lvalue -> variable .)
    IF              reduce using rule 28 (lvalue -> variable .)
    FOR             reduce using rule 28 (lvalue -> variable .)
    WHILE           reduce using rule 28 (lvalue -> variable .)
    BREAK           reduce using rule 28 (lvalue -> variable .)
    CONTINUE        reduce using rule 28 (lvalue -> variable .)
    RETURN          reduce using rule 28 (lvalue -> variable .)
    PRINT           reduce using rule 28 (lvalue -> variable .)
    ID              reduce using rule 28 (lvalue -> variable .)
    [               shift and go to state 19


state 8

    (8) instruction -> WHILE . ( condition ) instruction

    (               shift and go to state 20


state 9

    (17) instruction -> statement . ;

    ;               shift and go to state 21


state 10

    (18) statement -> BREAK .

    ;               reduce using rule 18 (statement -> BREAK .)


state 11

    (19) statement -> CONTINUE .

    ;               reduce using rule 19 (statement -> CONTINUE .)


state 12

    (20) statement -> RETURN .
    (21) statement -> RETURN . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    ;               reduce using rule 20 (statement -> RETURN .)
    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 22
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 13

    (22) statement -> PRINT . expression_list
    (45) expression_list -> . expression_list , expression
    (46) expression_list -> . expression
    (47) expression_list -> .
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    ,               reduce using rule 47 (expression_list -> .)
    ;               reduce using rule 47 (expression_list -> .)
    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression_list                shift and go to state 33
    expression                     shift and go to state 34
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 14

    (23) statement -> lvalue . = expression
    (24) statement -> lvalue . ADDASSIGN expression
    (25) statement -> lvalue . SUBASSIGN expression
    (26) statement -> lvalue . MULASSIGN expression
    (27) statement -> lvalue . DIVASSIGN expression

    =               shift and go to state 35
    ADDASSIGN       shift and go to state 36
    SUBASSIGN       shift and go to state 37
    MULASSIGN       shift and go to state 38
    DIVASSIGN       shift and go to state 39


state 15

    (15) variable -> ID .

    [               reduce using rule 15 (variable -> ID .)
    =               reduce using rule 15 (variable -> ID .)
    ADDASSIGN       reduce using rule 15 (variable -> ID .)
    SUBASSIGN       reduce using rule 15 (variable -> ID .)
    MULASSIGN       reduce using rule 15 (variable -> ID .)
    DIVASSIGN       reduce using rule 15 (variable -> ID .)
    +               reduce using rule 15 (variable -> ID .)
    -               reduce using rule 15 (variable -> ID .)
    *               reduce using rule 15 (variable -> ID .)
    /               reduce using rule 15 (variable -> ID .)
    DOTADD          reduce using rule 15 (variable -> ID .)
    DOTSUB          reduce using rule 15 (variable -> ID .)
    DOTMUL          reduce using rule 15 (variable -> ID .)
    DOTDIV          reduce using rule 15 (variable -> ID .)
    '               reduce using rule 15 (variable -> ID .)
    ;               reduce using rule 15 (variable -> ID .)
    ,               reduce using rule 15 (variable -> ID .)
    EQ              reduce using rule 15 (variable -> ID .)
    NEQ             reduce using rule 15 (variable -> ID .)
    LTE             reduce using rule 15 (variable -> ID .)
    GTE             reduce using rule 15 (variable -> ID .)
    <               reduce using rule 15 (variable -> ID .)
    >               reduce using rule 15 (variable -> ID .)
    ]               reduce using rule 15 (variable -> ID .)
    )               reduce using rule 15 (variable -> ID .)
    :               reduce using rule 15 (variable -> ID .)
    {               reduce using rule 15 (variable -> ID .)
    IF              reduce using rule 15 (variable -> ID .)
    FOR             reduce using rule 15 (variable -> ID .)
    WHILE           reduce using rule 15 (variable -> ID .)
    BREAK           reduce using rule 15 (variable -> ID .)
    CONTINUE        reduce using rule 15 (variable -> ID .)
    RETURN          reduce using rule 15 (variable -> ID .)
    PRINT           reduce using rule 15 (variable -> ID .)
    ID              reduce using rule 15 (variable -> ID .)


state 16

    (4) instruction -> { instructions . }
    (2) instructions -> instructions . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . IF ( condition ) instruction
    (6) instruction -> . IF ( condition ) instruction ELSE instruction
    (7) instruction -> . FOR variable = range instruction
    (8) instruction -> . WHILE ( condition ) instruction
    (17) instruction -> . statement ;
    (18) statement -> . BREAK
    (19) statement -> . CONTINUE
    (20) statement -> . RETURN
    (21) statement -> . RETURN expression
    (22) statement -> . PRINT expression_list
    (23) statement -> . lvalue = expression
    (24) statement -> . lvalue ADDASSIGN expression
    (25) statement -> . lvalue SUBASSIGN expression
    (26) statement -> . lvalue MULASSIGN expression
    (27) statement -> . lvalue DIVASSIGN expression
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    }               shift and go to state 40
    {               shift and go to state 4
    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 15

    instruction                    shift and go to state 3
    variable                       shift and go to state 7
    statement                      shift and go to state 9
    lvalue                         shift and go to state 14

state 17

    (5) instruction -> IF ( . condition ) instruction
    (6) instruction -> IF ( . condition ) instruction ELSE instruction
    (9) condition -> . expression EQ expression
    (10) condition -> . expression NEQ expression
    (11) condition -> . expression LTE expression
    (12) condition -> . expression GTE expression
    (13) condition -> . expression < expression
    (14) condition -> . expression > expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    condition                      shift and go to state 41
    expression                     shift and go to state 42
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 18

    (7) instruction -> FOR variable . = range instruction

    =               shift and go to state 43


state 19

    (29) lvalue -> variable [ . expression_list ]
    (45) expression_list -> . expression_list , expression
    (46) expression_list -> . expression
    (47) expression_list -> .
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    ]               reduce using rule 47 (expression_list -> .)
    ,               reduce using rule 47 (expression_list -> .)
    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    variable                       shift and go to state 7
    expression_list                shift and go to state 44
    expression                     shift and go to state 34
    lvalue                         shift and go to state 25

state 20

    (8) instruction -> WHILE ( . condition ) instruction
    (9) condition -> . expression EQ expression
    (10) condition -> . expression NEQ expression
    (11) condition -> . expression LTE expression
    (12) condition -> . expression GTE expression
    (13) condition -> . expression < expression
    (14) condition -> . expression > expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    condition                      shift and go to state 45
    expression                     shift and go to state 42
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 21

    (17) instruction -> statement ; .

    {               reduce using rule 17 (instruction -> statement ; .)
    IF              reduce using rule 17 (instruction -> statement ; .)
    FOR             reduce using rule 17 (instruction -> statement ; .)
    WHILE           reduce using rule 17 (instruction -> statement ; .)
    BREAK           reduce using rule 17 (instruction -> statement ; .)
    CONTINUE        reduce using rule 17 (instruction -> statement ; .)
    RETURN          reduce using rule 17 (instruction -> statement ; .)
    PRINT           reduce using rule 17 (instruction -> statement ; .)
    ID              reduce using rule 17 (instruction -> statement ; .)
    $end            reduce using rule 17 (instruction -> statement ; .)
    }               reduce using rule 17 (instruction -> statement ; .)
    ELSE            reduce using rule 17 (instruction -> statement ; .)


state 22

    (21) statement -> RETURN expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    ;               reduce using rule 21 (statement -> RETURN expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 23

    (38) expression -> - . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 55
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 24

    (40) expression -> ( . expression )
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 56
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 25

    (41) expression -> lvalue .

    +               reduce using rule 41 (expression -> lvalue .)
    -               reduce using rule 41 (expression -> lvalue .)
    *               reduce using rule 41 (expression -> lvalue .)
    /               reduce using rule 41 (expression -> lvalue .)
    DOTADD          reduce using rule 41 (expression -> lvalue .)
    DOTSUB          reduce using rule 41 (expression -> lvalue .)
    DOTMUL          reduce using rule 41 (expression -> lvalue .)
    DOTDIV          reduce using rule 41 (expression -> lvalue .)
    '               reduce using rule 41 (expression -> lvalue .)
    ;               reduce using rule 41 (expression -> lvalue .)
    ,               reduce using rule 41 (expression -> lvalue .)
    EQ              reduce using rule 41 (expression -> lvalue .)
    NEQ             reduce using rule 41 (expression -> lvalue .)
    LTE             reduce using rule 41 (expression -> lvalue .)
    GTE             reduce using rule 41 (expression -> lvalue .)
    <               reduce using rule 41 (expression -> lvalue .)
    >               reduce using rule 41 (expression -> lvalue .)
    ]               reduce using rule 41 (expression -> lvalue .)
    )               reduce using rule 41 (expression -> lvalue .)
    :               reduce using rule 41 (expression -> lvalue .)
    {               reduce using rule 41 (expression -> lvalue .)
    IF              reduce using rule 41 (expression -> lvalue .)
    FOR             reduce using rule 41 (expression -> lvalue .)
    WHILE           reduce using rule 41 (expression -> lvalue .)
    BREAK           reduce using rule 41 (expression -> lvalue .)
    CONTINUE        reduce using rule 41 (expression -> lvalue .)
    RETURN          reduce using rule 41 (expression -> lvalue .)
    PRINT           reduce using rule 41 (expression -> lvalue .)
    ID              reduce using rule 41 (expression -> lvalue .)


state 26

    (42) expression -> INTNUM .

    +               reduce using rule 42 (expression -> INTNUM .)
    -               reduce using rule 42 (expression -> INTNUM .)
    *               reduce using rule 42 (expression -> INTNUM .)
    /               reduce using rule 42 (expression -> INTNUM .)
    DOTADD          reduce using rule 42 (expression -> INTNUM .)
    DOTSUB          reduce using rule 42 (expression -> INTNUM .)
    DOTMUL          reduce using rule 42 (expression -> INTNUM .)
    DOTDIV          reduce using rule 42 (expression -> INTNUM .)
    '               reduce using rule 42 (expression -> INTNUM .)
    ;               reduce using rule 42 (expression -> INTNUM .)
    ,               reduce using rule 42 (expression -> INTNUM .)
    EQ              reduce using rule 42 (expression -> INTNUM .)
    NEQ             reduce using rule 42 (expression -> INTNUM .)
    LTE             reduce using rule 42 (expression -> INTNUM .)
    GTE             reduce using rule 42 (expression -> INTNUM .)
    <               reduce using rule 42 (expression -> INTNUM .)
    >               reduce using rule 42 (expression -> INTNUM .)
    ]               reduce using rule 42 (expression -> INTNUM .)
    )               reduce using rule 42 (expression -> INTNUM .)
    :               reduce using rule 42 (expression -> INTNUM .)
    {               reduce using rule 42 (expression -> INTNUM .)
    IF              reduce using rule 42 (expression -> INTNUM .)
    FOR             reduce using rule 42 (expression -> INTNUM .)
    WHILE           reduce using rule 42 (expression -> INTNUM .)
    BREAK           reduce using rule 42 (expression -> INTNUM .)
    CONTINUE        reduce using rule 42 (expression -> INTNUM .)
    RETURN          reduce using rule 42 (expression -> INTNUM .)
    PRINT           reduce using rule 42 (expression -> INTNUM .)
    ID              reduce using rule 42 (expression -> INTNUM .)


state 27

    (43) expression -> FLOATNUM .

    +               reduce using rule 43 (expression -> FLOATNUM .)
    -               reduce using rule 43 (expression -> FLOATNUM .)
    *               reduce using rule 43 (expression -> FLOATNUM .)
    /               reduce using rule 43 (expression -> FLOATNUM .)
    DOTADD          reduce using rule 43 (expression -> FLOATNUM .)
    DOTSUB          reduce using rule 43 (expression -> FLOATNUM .)
    DOTMUL          reduce using rule 43 (expression -> FLOATNUM .)
    DOTDIV          reduce using rule 43 (expression -> FLOATNUM .)
    '               reduce using rule 43 (expression -> FLOATNUM .)
    ;               reduce using rule 43 (expression -> FLOATNUM .)
    ,               reduce using rule 43 (expression -> FLOATNUM .)
    EQ              reduce using rule 43 (expression -> FLOATNUM .)
    NEQ             reduce using rule 43 (expression -> FLOATNUM .)
    LTE             reduce using rule 43 (expression -> FLOATNUM .)
    GTE             reduce using rule 43 (expression -> FLOATNUM .)
    <               reduce using rule 43 (expression -> FLOATNUM .)
    >               reduce using rule 43 (expression -> FLOATNUM .)
    ]               reduce using rule 43 (expression -> FLOATNUM .)
    )               reduce using rule 43 (expression -> FLOATNUM .)
    :               reduce using rule 43 (expression -> FLOATNUM .)
    {               reduce using rule 43 (expression -> FLOATNUM .)
    IF              reduce using rule 43 (expression -> FLOATNUM .)
    FOR             reduce using rule 43 (expression -> FLOATNUM .)
    WHILE           reduce using rule 43 (expression -> FLOATNUM .)
    BREAK           reduce using rule 43 (expression -> FLOATNUM .)
    CONTINUE        reduce using rule 43 (expression -> FLOATNUM .)
    RETURN          reduce using rule 43 (expression -> FLOATNUM .)
    PRINT           reduce using rule 43 (expression -> FLOATNUM .)
    ID              reduce using rule 43 (expression -> FLOATNUM .)


state 28

    (44) expression -> STRING .

    +               reduce using rule 44 (expression -> STRING .)
    -               reduce using rule 44 (expression -> STRING .)
    *               reduce using rule 44 (expression -> STRING .)
    /               reduce using rule 44 (expression -> STRING .)
    DOTADD          reduce using rule 44 (expression -> STRING .)
    DOTSUB          reduce using rule 44 (expression -> STRING .)
    DOTMUL          reduce using rule 44 (expression -> STRING .)
    DOTDIV          reduce using rule 44 (expression -> STRING .)
    '               reduce using rule 44 (expression -> STRING .)
    ;               reduce using rule 44 (expression -> STRING .)
    ,               reduce using rule 44 (expression -> STRING .)
    EQ              reduce using rule 44 (expression -> STRING .)
    NEQ             reduce using rule 44 (expression -> STRING .)
    LTE             reduce using rule 44 (expression -> STRING .)
    GTE             reduce using rule 44 (expression -> STRING .)
    <               reduce using rule 44 (expression -> STRING .)
    >               reduce using rule 44 (expression -> STRING .)
    ]               reduce using rule 44 (expression -> STRING .)
    )               reduce using rule 44 (expression -> STRING .)
    :               reduce using rule 44 (expression -> STRING .)
    {               reduce using rule 44 (expression -> STRING .)
    IF              reduce using rule 44 (expression -> STRING .)
    FOR             reduce using rule 44 (expression -> STRING .)
    WHILE           reduce using rule 44 (expression -> STRING .)
    BREAK           reduce using rule 44 (expression -> STRING .)
    CONTINUE        reduce using rule 44 (expression -> STRING .)
    RETURN          reduce using rule 44 (expression -> STRING .)
    PRINT           reduce using rule 44 (expression -> STRING .)
    ID              reduce using rule 44 (expression -> STRING .)


state 29

    (48) expression -> [ . expression_list ]
    (49) expression -> [ . matrix_rows ]
    (45) expression_list -> . expression_list , expression
    (46) expression_list -> . expression
    (47) expression_list -> .
    (50) matrix_rows -> . matrix_rows ; expression_list
    (51) matrix_rows -> . expression_list
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    ]               reduce using rule 47 (expression_list -> .)
    ,               reduce using rule 47 (expression_list -> .)
    ;               reduce using rule 47 (expression_list -> .)
    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression_list                shift and go to state 57
    matrix_rows                    shift and go to state 58
    expression                     shift and go to state 34
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 30

    (52) expression -> EYE . ( expression )
    (53) expression -> EYE . ( expression , expression )

    (               shift and go to state 59


state 31

    (54) expression -> ZEROS . ( expression )
    (55) expression -> ZEROS . ( expression , expression )

    (               shift and go to state 60


state 32

    (56) expression -> ONES . ( expression )
    (57) expression -> ONES . ( expression , expression )

    (               shift and go to state 61


state 33

    (22) statement -> PRINT expression_list .
    (45) expression_list -> expression_list . , expression

    ;               reduce using rule 22 (statement -> PRINT expression_list .)
    ,               shift and go to state 62


state 34

    (46) expression_list -> expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    ,               reduce using rule 46 (expression_list -> expression .)
    ;               reduce using rule 46 (expression_list -> expression .)
    ]               reduce using rule 46 (expression_list -> expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 35

    (23) statement -> lvalue = . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    lvalue                         shift and go to state 25
    expression                     shift and go to state 63
    variable                       shift and go to state 7

state 36

    (24) statement -> lvalue ADDASSIGN . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    lvalue                         shift and go to state 25
    expression                     shift and go to state 64
    variable                       shift and go to state 7

state 37

    (25) statement -> lvalue SUBASSIGN . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    lvalue                         shift and go to state 25
    expression                     shift and go to state 65
    variable                       shift and go to state 7

state 38

    (26) statement -> lvalue MULASSIGN . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    lvalue                         shift and go to state 25
    expression                     shift and go to state 66
    variable                       shift and go to state 7

state 39

    (27) statement -> lvalue DIVASSIGN . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    lvalue                         shift and go to state 25
    expression                     shift and go to state 67
    variable                       shift and go to state 7

state 40

    (4) instruction -> { instructions } .

    {               reduce using rule 4 (instruction -> { instructions } .)
    IF              reduce using rule 4 (instruction -> { instructions } .)
    FOR             reduce using rule 4 (instruction -> { instructions } .)
    WHILE           reduce using rule 4 (instruction -> { instructions } .)
    BREAK           reduce using rule 4 (instruction -> { instructions } .)
    CONTINUE        reduce using rule 4 (instruction -> { instructions } .)
    RETURN          reduce using rule 4 (instruction -> { instructions } .)
    PRINT           reduce using rule 4 (instruction -> { instructions } .)
    ID              reduce using rule 4 (instruction -> { instructions } .)
    $end            reduce using rule 4 (instruction -> { instructions } .)
    }               reduce using rule 4 (instruction -> { instructions } .)
    ELSE            reduce using rule 4 (instruction -> { instructions } .)


state 41

    (5) instruction -> IF ( condition . ) instruction
    (6) instruction -> IF ( condition . ) instruction ELSE instruction

    )               shift and go to state 68


state 42

    (9) condition -> expression . EQ expression
    (10) condition -> expression . NEQ expression
    (11) condition -> expression . LTE expression
    (12) condition -> expression . GTE expression
    (13) condition -> expression . < expression
    (14) condition -> expression . > expression
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    EQ              shift and go to state 69
    NEQ             shift and go to state 70
    LTE             shift and go to state 71
    GTE             shift and go to state 72
    <               shift and go to state 73
    >               shift and go to state 74
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 43

    (7) instruction -> FOR variable = . range instruction
    (16) range -> . expression : expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    variable                       shift and go to state 7
    range                          shift and go to state 75
    expression                     shift and go to state 76
    lvalue                         shift and go to state 25

state 44

    (29) lvalue -> variable [ expression_list . ]
    (45) expression_list -> expression_list . , expression

    ]               shift and go to state 77
    ,               shift and go to state 62


state 45

    (8) instruction -> WHILE ( condition . ) instruction

    )               shift and go to state 78


state 46

    (30) expression -> expression + . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 79
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 47

    (31) expression -> expression - . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 80
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 48

    (32) expression -> expression * . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 81
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 49

    (33) expression -> expression / . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 82
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 50

    (34) expression -> expression DOTADD . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 83
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 51

    (35) expression -> expression DOTSUB . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 84
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 52

    (36) expression -> expression DOTMUL . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 85
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 53

    (37) expression -> expression DOTDIV . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 86
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 54

    (39) expression -> expression ' .

    +               reduce using rule 39 (expression -> expression ' .)
    -               reduce using rule 39 (expression -> expression ' .)
    *               reduce using rule 39 (expression -> expression ' .)
    /               reduce using rule 39 (expression -> expression ' .)
    DOTADD          reduce using rule 39 (expression -> expression ' .)
    DOTSUB          reduce using rule 39 (expression -> expression ' .)
    DOTMUL          reduce using rule 39 (expression -> expression ' .)
    DOTDIV          reduce using rule 39 (expression -> expression ' .)
    '               reduce using rule 39 (expression -> expression ' .)
    ;               reduce using rule 39 (expression -> expression ' .)
    ,               reduce using rule 39 (expression -> expression ' .)
    EQ              reduce using rule 39 (expression -> expression ' .)
    NEQ             reduce using rule 39 (expression -> expression ' .)
    LTE             reduce using rule 39 (expression -> expression ' .)
    GTE             reduce using rule 39 (expression -> expression ' .)
    <               reduce using rule 39 (expression -> expression ' .)
    >               reduce using rule 39 (expression -> expression ' .)
    ]               reduce using rule 39 (expression -> expression ' .)
    )               reduce using rule 39 (expression -> expression ' .)
    :               reduce using rule 39 (expression -> expression ' .)
    {               reduce using rule 39 (expression -> expression ' .)
    IF              reduce using rule 39 (expression -> expression ' .)
    FOR             reduce using rule 39 (expression -> expression ' .)
    WHILE           reduce using rule 39 (expression -> expression ' .)
    BREAK           reduce using rule 39 (expression -> expression ' .)
    CONTINUE        reduce using rule 39 (expression -> expression ' .)
    RETURN          reduce using rule 39 (expression -> expression ' .)
    PRINT           reduce using rule 39 (expression -> expression ' .)
    ID              reduce using rule 39 (expression -> expression ' .)


state 55

    (38) expression -> - expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    +               reduce using rule 38 (expression -> - expression .)
    -               reduce using rule 38 (expression -> - expression .)
    *               reduce using rule 38 (expression -> - expression .)
    /               reduce using rule 38 (expression -> - expression .)
    DOTADD          reduce using rule 38 (expression -> - expression .)
    DOTSUB          reduce using rule 38 (expression -> - expression .)
    DOTMUL          reduce using rule 38 (expression -> - expression .)
    DOTDIV          reduce using rule 38 (expression -> - expression .)
    ;               reduce using rule 38 (expression -> - expression .)
    ,               reduce using rule 38 (expression -> - expression .)
    EQ              reduce using rule 38 (expression -> - expression .)
    NEQ             reduce using rule 38 (expression -> - expression .)
    LTE             reduce using rule 38 (expression -> - expression .)
    GTE             reduce using rule 38 (expression -> - expression .)
    <               reduce using rule 38 (expression -> - expression .)
    >               reduce using rule 38 (expression -> - expression .)
    ]               reduce using rule 38 (expression -> - expression .)
    )               reduce using rule 38 (expression -> - expression .)
    :               reduce using rule 38 (expression -> - expression .)
    {               reduce using rule 38 (expression -> - expression .)
    IF              reduce using rule 38 (expression -> - expression .)
    FOR             reduce using rule 38 (expression -> - expression .)
    WHILE           reduce using rule 38 (expression -> - expression .)
    BREAK           reduce using rule 38 (expression -> - expression .)
    CONTINUE        reduce using rule 38 (expression -> - expression .)
    RETURN          reduce using rule 38 (expression -> - expression .)
    PRINT           reduce using rule 38 (expression -> - expression .)
    ID              reduce using rule 38 (expression -> - expression .)
    '               shift and go to state 54

  ! '               [ reduce using rule 38 (expression -> - expression .) ]
  ! +               [ shift and go to state 46 ]
  ! -               [ shift and go to state 47 ]
  ! *               [ shift and go to state 48 ]
  ! /               [ shift and go to state 49 ]
  ! DOTADD          [ shift and go to state 50 ]
  ! DOTSUB          [ shift and go to state 51 ]
  ! DOTMUL          [ shift and go to state 52 ]
  ! DOTDIV          [ shift and go to state 53 ]


state 56

    (40) expression -> ( expression . )
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    )               shift and go to state 87
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 57

    (48) expression -> [ expression_list . ]
    (45) expression_list -> expression_list . , expression
    (51) matrix_rows -> expression_list .

  ! shift/reduce conflict for ] resolved as shift
    ]               shift and go to state 88
    ,               shift and go to state 62
    ;               reduce using rule 51 (matrix_rows -> expression_list .)

  ! ]               [ reduce using rule 51 (matrix_rows -> expression_list .) ]


state 58

    (49) expression -> [ matrix_rows . ]
    (50) matrix_rows -> matrix_rows . ; expression_list

    ]               shift and go to state 89
    ;               shift and go to state 90


state 59

    (52) expression -> EYE ( . expression )
    (53) expression -> EYE ( . expression , expression )
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 91
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 60

    (54) expression -> ZEROS ( . expression )
    (55) expression -> ZEROS ( . expression , expression )
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 92
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 61

    (56) expression -> ONES ( . expression )
    (57) expression -> ONES ( . expression , expression )
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 93
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 62

    (45) expression_list -> expression_list , . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 94
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 63

    (23) statement -> lvalue = expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    ;               reduce using rule 23 (statement -> lvalue = expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 64

    (24) statement -> lvalue ADDASSIGN expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    ;               reduce using rule 24 (statement -> lvalue ADDASSIGN expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 65

    (25) statement -> lvalue SUBASSIGN expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    ;               reduce using rule 25 (statement -> lvalue SUBASSIGN expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 66

    (26) statement -> lvalue MULASSIGN expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    ;               reduce using rule 26 (statement -> lvalue MULASSIGN expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 67

    (27) statement -> lvalue DIVASSIGN expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    ;               reduce using rule 27 (statement -> lvalue DIVASSIGN expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 68

    (5) instruction -> IF ( condition ) . instruction
    (6) instruction -> IF ( condition ) . instruction ELSE instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . IF ( condition ) instruction
    (6) instruction -> . IF ( condition ) instruction ELSE instruction
    (7) instruction -> . FOR variable = range instruction
    (8) instruction -> . WHILE ( condition ) instruction
    (17) instruction -> . statement ;
    (18) statement -> . BREAK
    (19) statement -> . CONTINUE
    (20) statement -> . RETURN
    (21) statement -> . RETURN expression
    (22) statement -> . PRINT expression_list
    (23) statement -> . lvalue = expression
    (24) statement -> . lvalue ADDASSIGN expression
    (25) statement -> . lvalue SUBASSIGN expression
    (26) statement -> . lvalue MULASSIGN expression
    (27) statement -> . lvalue DIVASSIGN expression
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    {               shift and go to state 4
    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 15

    instruction                    shift and go to state 95
    variable                       shift and go to state 7
    statement                      shift and go to state 9
    lvalue                         shift and go to state 14

state 69

    (9) condition -> expression EQ . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 96
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 70

    (10) condition -> expression NEQ . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 97
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 71

    (11) condition -> expression LTE . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 98
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 72

    (12) condition -> expression GTE . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 99
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 73

    (13) condition -> expression < . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 100
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 74

    (14) condition -> expression > . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 101
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 75

    (7) instruction -> FOR variable = range . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . IF ( condition ) instruction
    (6) instruction -> . IF ( condition ) instruction ELSE instruction
    (7) instruction -> . FOR variable = range instruction
    (8) instruction -> . WHILE ( condition ) instruction
    (17) instruction -> . statement ;
    (18) statement -> . BREAK
    (19) statement -> . CONTINUE
    (20) statement -> . RETURN
    (21) statement -> . RETURN expression
    (22) statement -> . PRINT expression_list
    (23) statement -> . lvalue = expression
    (24) statement -> . lvalue ADDASSIGN expression
    (25) statement -> . lvalue SUBASSIGN expression
    (26) statement -> . lvalue MULASSIGN expression
    (27) statement -> . lvalue DIVASSIGN expression
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    {               shift and go to state 4
    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 15

    variable                       shift and go to state 7
    instruction                    shift and go to state 102
    statement                      shift and go to state 9
    lvalue                         shift and go to state 14

state 76

    (16) range -> expression . : expression
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    :               shift and go to state 103
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 77

    (29) lvalue -> variable [ expression_list ] .

    =               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    ADDASSIGN       reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    SUBASSIGN       reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    MULASSIGN       reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    DIVASSIGN       reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    +               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    -               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    *               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    /               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    DOTADD          reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    DOTSUB          reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    DOTMUL          reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    DOTDIV          reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    '               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    ;               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    ,               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    EQ              reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    NEQ             reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    LTE             reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    GTE             reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    <               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    >               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    ]               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    )               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    :               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    {               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    IF              reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    FOR             reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    WHILE           reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    BREAK           reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    CONTINUE        reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    RETURN          reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    PRINT           reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    ID              reduce using rule 29 (lvalue -> variable [ expression_list ] .)


state 78

    (8) instruction -> WHILE ( condition ) . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . IF ( condition ) instruction
    (6) instruction -> . IF ( condition ) instruction ELSE instruction
    (7) instruction -> . FOR variable = range instruction
    (8) instruction -> . WHILE ( condition ) instruction
    (17) instruction -> . statement ;
    (18) statement -> . BREAK
    (19) statement -> . CONTINUE
    (20) statement -> . RETURN
    (21) statement -> . RETURN expression
    (22) statement -> . PRINT expression_list
    (23) statement -> . lvalue = expression
    (24) statement -> . lvalue ADDASSIGN expression
    (25) statement -> . lvalue SUBASSIGN expression
    (26) statement -> . lvalue MULASSIGN expression
    (27) statement -> . lvalue DIVASSIGN expression
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    {               shift and go to state 4
    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 15

    instruction                    shift and go to state 104
    variable                       shift and go to state 7
    statement                      shift and go to state 9
    lvalue                         shift and go to state 14

state 79

    (30) expression -> expression + expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    +               reduce using rule 30 (expression -> expression + expression .)
    -               reduce using rule 30 (expression -> expression + expression .)
    DOTADD          reduce using rule 30 (expression -> expression + expression .)
    DOTSUB          reduce using rule 30 (expression -> expression + expression .)
    ;               reduce using rule 30 (expression -> expression + expression .)
    ,               reduce using rule 30 (expression -> expression + expression .)
    EQ              reduce using rule 30 (expression -> expression + expression .)
    NEQ             reduce using rule 30 (expression -> expression + expression .)
    LTE             reduce using rule 30 (expression -> expression + expression .)
    GTE             reduce using rule 30 (expression -> expression + expression .)
    <               reduce using rule 30 (expression -> expression + expression .)
    >               reduce using rule 30 (expression -> expression + expression .)
    ]               reduce using rule 30 (expression -> expression + expression .)
    )               reduce using rule 30 (expression -> expression + expression .)
    :               reduce using rule 30 (expression -> expression + expression .)
    {               reduce using rule 30 (expression -> expression + expression .)
    IF              reduce using rule 30 (expression -> expression + expression .)
    FOR             reduce using rule 30 (expression -> expression + expression .)
    WHILE           reduce using rule 30 (expression -> expression + expression .)
    BREAK           reduce using rule 30 (expression -> expression + expression .)
    CONTINUE        reduce using rule 30 (expression -> expression + expression .)
    RETURN          reduce using rule 30 (expression -> expression + expression .)
    PRINT           reduce using rule 30 (expression -> expression + expression .)
    ID              reduce using rule 30 (expression -> expression + expression .)
    *               shift and go to state 48
    /               shift and go to state 49
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54

  ! *               [ reduce using rule 30 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 30 (expression -> expression + expression .) ]
  ! DOTMUL          [ reduce using rule 30 (expression -> expression + expression .) ]
  ! DOTDIV          [ reduce using rule 30 (expression -> expression + expression .) ]
  ! '               [ reduce using rule 30 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 46 ]
  ! -               [ shift and go to state 47 ]
  ! DOTADD          [ shift and go to state 50 ]
  ! DOTSUB          [ shift and go to state 51 ]


state 80

    (31) expression -> expression - expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    +               reduce using rule 31 (expression -> expression - expression .)
    -               reduce using rule 31 (expression -> expression - expression .)
    DOTADD          reduce using rule 31 (expression -> expression - expression .)
    DOTSUB          reduce using rule 31 (expression -> expression - expression .)
    ;               reduce using rule 31 (expression -> expression - expression .)
    ,               reduce using rule 31 (expression -> expression - expression .)
    EQ              reduce using rule 31 (expression -> expression - expression .)
    NEQ             reduce using rule 31 (expression -> expression - expression .)
    LTE             reduce using rule 31 (expression -> expression - expression .)
    GTE             reduce using rule 31 (expression -> expression - expression .)
    <               reduce using rule 31 (expression -> expression - expression .)
    >               reduce using rule 31 (expression -> expression - expression .)
    ]               reduce using rule 31 (expression -> expression - expression .)
    )               reduce using rule 31 (expression -> expression - expression .)
    :               reduce using rule 31 (expression -> expression - expression .)
    {               reduce using rule 31 (expression -> expression - expression .)
    IF              reduce using rule 31 (expression -> expression - expression .)
    FOR             reduce using rule 31 (expression -> expression - expression .)
    WHILE           reduce using rule 31 (expression -> expression - expression .)
    BREAK           reduce using rule 31 (expression -> expression - expression .)
    CONTINUE        reduce using rule 31 (expression -> expression - expression .)
    RETURN          reduce using rule 31 (expression -> expression - expression .)
    PRINT           reduce using rule 31 (expression -> expression - expression .)
    ID              reduce using rule 31 (expression -> expression - expression .)
    *               shift and go to state 48
    /               shift and go to state 49
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54

  ! *               [ reduce using rule 31 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 31 (expression -> expression - expression .) ]
  ! DOTMUL          [ reduce using rule 31 (expression -> expression - expression .) ]
  ! DOTDIV          [ reduce using rule 31 (expression -> expression - expression .) ]
  ! '               [ reduce using rule 31 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 46 ]
  ! -               [ shift and go to state 47 ]
  ! DOTADD          [ shift and go to state 50 ]
  ! DOTSUB          [ shift and go to state 51 ]


state 81

    (32) expression -> expression * expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    +               reduce using rule 32 (expression -> expression * expression .)
    -               reduce using rule 32 (expression -> expression * expression .)
    *               reduce using rule 32 (expression -> expression * expression .)
    /               reduce using rule 32 (expression -> expression * expression .)
    DOTADD          reduce using rule 32 (expression -> expression * expression .)
    DOTSUB          reduce using rule 32 (expression -> expression * expression .)
    DOTMUL          reduce using rule 32 (expression -> expression * expression .)
    DOTDIV          reduce using rule 32 (expression -> expression * expression .)
    ;               reduce using rule 32 (expression -> expression * expression .)
    ,               reduce using rule 32 (expression -> expression * expression .)
    EQ              reduce using rule 32 (expression -> expression * expression .)
    NEQ             reduce using rule 32 (expression -> expression * expression .)
    LTE             reduce using rule 32 (expression -> expression * expression .)
    GTE             reduce using rule 32 (expression -> expression * expression .)
    <               reduce using rule 32 (expression -> expression * expression .)
    >               reduce using rule 32 (expression -> expression * expression .)
    ]               reduce using rule 32 (expression -> expression * expression .)
    )               reduce using rule 32 (expression -> expression * expression .)
    :               reduce using rule 32 (expression -> expression * expression .)
    {               reduce using rule 32 (expression -> expression * expression .)
    IF              reduce using rule 32 (expression -> expression * expression .)
    FOR             reduce using rule 32 (expression -> expression * expression .)
    WHILE           reduce using rule 32 (expression -> expression * expression .)
    BREAK           reduce using rule 32 (expression -> expression * expression .)
    CONTINUE        reduce using rule 32 (expression -> expression * expression .)
    RETURN          reduce using rule 32 (expression -> expression * expression .)
    PRINT           reduce using rule 32 (expression -> expression * expression .)
    ID              reduce using rule 32 (expression -> expression * expression .)
    '               shift and go to state 54

  ! '               [ reduce using rule 32 (expression -> expression * expression .) ]
  ! +               [ shift and go to state 46 ]
  ! -               [ shift and go to state 47 ]
  ! *               [ shift and go to state 48 ]
  ! /               [ shift and go to state 49 ]
  ! DOTADD          [ shift and go to state 50 ]
  ! DOTSUB          [ shift and go to state 51 ]
  ! DOTMUL          [ shift and go to state 52 ]
  ! DOTDIV          [ shift and go to state 53 ]


state 82

    (33) expression -> expression / expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    +               reduce using rule 33 (expression -> expression / expression .)
    -               reduce using rule 33 (expression -> expression / expression .)
    *               reduce using rule 33 (expression -> expression / expression .)
    /               reduce using rule 33 (expression -> expression / expression .)
    DOTADD          reduce using rule 33 (expression -> expression / expression .)
    DOTSUB          reduce using rule 33 (expression -> expression / expression .)
    DOTMUL          reduce using rule 33 (expression -> expression / expression .)
    DOTDIV          reduce using rule 33 (expression -> expression / expression .)
    ;               reduce using rule 33 (expression -> expression / expression .)
    ,               reduce using rule 33 (expression -> expression / expression .)
    EQ              reduce using rule 33 (expression -> expression / expression .)
    NEQ             reduce using rule 33 (expression -> expression / expression .)
    LTE             reduce using rule 33 (expression -> expression / expression .)
    GTE             reduce using rule 33 (expression -> expression / expression .)
    <               reduce using rule 33 (expression -> expression / expression .)
    >               reduce using rule 33 (expression -> expression / expression .)
    ]               reduce using rule 33 (expression -> expression / expression .)
    )               reduce using rule 33 (expression -> expression / expression .)
    :               reduce using rule 33 (expression -> expression / expression .)
    {               reduce using rule 33 (expression -> expression / expression .)
    IF              reduce using rule 33 (expression -> expression / expression .)
    FOR             reduce using rule 33 (expression -> expression / expression .)
    WHILE           reduce using rule 33 (expression -> expression / expression .)
    BREAK           reduce using rule 33 (expression -> expression / expression .)
    CONTINUE        reduce using rule 33 (expression -> expression / expression .)
    RETURN          reduce using rule 33 (expression -> expression / expression .)
    PRINT           reduce using rule 33 (expression -> expression / expression .)
    ID              reduce using rule 33 (expression -> expression / expression .)
    '               shift and go to state 54

  ! '               [ reduce using rule 33 (expression -> expression / expression .) ]
  ! +               [ shift and go to state 46 ]
  ! -               [ shift and go to state 47 ]
  ! *               [ shift and go to state 48 ]
  ! /               [ shift and go to state 49 ]
  ! DOTADD          [ shift and go to state 50 ]
  ! DOTSUB          [ shift and go to state 51 ]
  ! DOTMUL          [ shift and go to state 52 ]
  ! DOTDIV          [ shift and go to state 53 ]


state 83

    (34) expression -> expression DOTADD expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    +               reduce using rule 34 (expression -> expression DOTADD expression .)
    -               reduce using rule 34 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 34 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 34 (expression -> expression DOTADD expression .)
    ;               reduce using rule 34 (expression -> expression DOTADD expression .)
    ,               reduce using rule 34 (expression -> expression DOTADD expression .)
    EQ              reduce using rule 34 (expression -> expression DOTADD expression .)
    NEQ             reduce using rule 34 (expression -> expression DOTADD expression .)
    LTE             reduce using rule 34 (expression -> expression DOTADD expression .)
    GTE             reduce using rule 34 (expression -> expression DOTADD expression .)
    <               reduce using rule 34 (expression -> expression DOTADD expression .)
    >               reduce using rule 34 (expression -> expression DOTADD expression .)
    ]               reduce using rule 34 (expression -> expression DOTADD expression .)
    )               reduce using rule 34 (expression -> expression DOTADD expression .)
    :               reduce using rule 34 (expression -> expression DOTADD expression .)
    {               reduce using rule 34 (expression -> expression DOTADD expression .)
    IF              reduce using rule 34 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 34 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 34 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 34 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 34 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 34 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 34 (expression -> expression DOTADD expression .)
    ID              reduce using rule 34 (expression -> expression DOTADD expression .)
    *               shift and go to state 48
    /               shift and go to state 49
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54

  ! *               [ reduce using rule 34 (expression -> expression DOTADD expression .) ]
  ! /               [ reduce using rule 34 (expression -> expression DOTADD expression .) ]
  ! DOTMUL          [ reduce using rule 34 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 34 (expression -> expression DOTADD expression .) ]
  ! '               [ reduce using rule 34 (expression -> expression DOTADD expression .) ]
  ! +               [ shift and go to state 46 ]
  ! -               [ shift and go to state 47 ]
  ! DOTADD          [ shift and go to state 50 ]
  ! DOTSUB          [ shift and go to state 51 ]


state 84

    (35) expression -> expression DOTSUB expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    +               reduce using rule 35 (expression -> expression DOTSUB expression .)
    -               reduce using rule 35 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 35 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 35 (expression -> expression DOTSUB expression .)
    ;               reduce using rule 35 (expression -> expression DOTSUB expression .)
    ,               reduce using rule 35 (expression -> expression DOTSUB expression .)
    EQ              reduce using rule 35 (expression -> expression DOTSUB expression .)
    NEQ             reduce using rule 35 (expression -> expression DOTSUB expression .)
    LTE             reduce using rule 35 (expression -> expression DOTSUB expression .)
    GTE             reduce using rule 35 (expression -> expression DOTSUB expression .)
    <               reduce using rule 35 (expression -> expression DOTSUB expression .)
    >               reduce using rule 35 (expression -> expression DOTSUB expression .)
    ]               reduce using rule 35 (expression -> expression DOTSUB expression .)
    )               reduce using rule 35 (expression -> expression DOTSUB expression .)
    :               reduce using rule 35 (expression -> expression DOTSUB expression .)
    {               reduce using rule 35 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 35 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 35 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 35 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 35 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 35 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 35 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 35 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 35 (expression -> expression DOTSUB expression .)
    *               shift and go to state 48
    /               shift and go to state 49
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54

  ! *               [ reduce using rule 35 (expression -> expression DOTSUB expression .) ]
  ! /               [ reduce using rule 35 (expression -> expression DOTSUB expression .) ]
  ! DOTMUL          [ reduce using rule 35 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 35 (expression -> expression DOTSUB expression .) ]
  ! '               [ reduce using rule 35 (expression -> expression DOTSUB expression .) ]
  ! +               [ shift and go to state 46 ]
  ! -               [ shift and go to state 47 ]
  ! DOTADD          [ shift and go to state 50 ]
  ! DOTSUB          [ shift and go to state 51 ]


state 85

    (36) expression -> expression DOTMUL expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    +               reduce using rule 36 (expression -> expression DOTMUL expression .)
    -               reduce using rule 36 (expression -> expression DOTMUL expression .)
    *               reduce using rule 36 (expression -> expression DOTMUL expression .)
    /               reduce using rule 36 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 36 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 36 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 36 (expression -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 36 (expression -> expression DOTMUL expression .)
    ;               reduce using rule 36 (expression -> expression DOTMUL expression .)
    ,               reduce using rule 36 (expression -> expression DOTMUL expression .)
    EQ              reduce using rule 36 (expression -> expression DOTMUL expression .)
    NEQ             reduce using rule 36 (expression -> expression DOTMUL expression .)
    LTE             reduce using rule 36 (expression -> expression DOTMUL expression .)
    GTE             reduce using rule 36 (expression -> expression DOTMUL expression .)
    <               reduce using rule 36 (expression -> expression DOTMUL expression .)
    >               reduce using rule 36 (expression -> expression DOTMUL expression .)
    ]               reduce using rule 36 (expression -> expression DOTMUL expression .)
    )               reduce using rule 36 (expression -> expression DOTMUL expression .)
    :               reduce using rule 36 (expression -> expression DOTMUL expression .)
    {               reduce using rule 36 (expression -> expression DOTMUL expression .)
    IF              reduce using rule 36 (expression -> expression DOTMUL expression .)
    FOR             reduce using rule 36 (expression -> expression DOTMUL expression .)
    WHILE           reduce using rule 36 (expression -> expression DOTMUL expression .)
    BREAK           reduce using rule 36 (expression -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 36 (expression -> expression DOTMUL expression .)
    RETURN          reduce using rule 36 (expression -> expression DOTMUL expression .)
    PRINT           reduce using rule 36 (expression -> expression DOTMUL expression .)
    ID              reduce using rule 36 (expression -> expression DOTMUL expression .)
    '               shift and go to state 54

  ! '               [ reduce using rule 36 (expression -> expression DOTMUL expression .) ]
  ! +               [ shift and go to state 46 ]
  ! -               [ shift and go to state 47 ]
  ! *               [ shift and go to state 48 ]
  ! /               [ shift and go to state 49 ]
  ! DOTADD          [ shift and go to state 50 ]
  ! DOTSUB          [ shift and go to state 51 ]
  ! DOTMUL          [ shift and go to state 52 ]
  ! DOTDIV          [ shift and go to state 53 ]


state 86

    (37) expression -> expression DOTDIV expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    +               reduce using rule 37 (expression -> expression DOTDIV expression .)
    -               reduce using rule 37 (expression -> expression DOTDIV expression .)
    *               reduce using rule 37 (expression -> expression DOTDIV expression .)
    /               reduce using rule 37 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 37 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 37 (expression -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 37 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 37 (expression -> expression DOTDIV expression .)
    ;               reduce using rule 37 (expression -> expression DOTDIV expression .)
    ,               reduce using rule 37 (expression -> expression DOTDIV expression .)
    EQ              reduce using rule 37 (expression -> expression DOTDIV expression .)
    NEQ             reduce using rule 37 (expression -> expression DOTDIV expression .)
    LTE             reduce using rule 37 (expression -> expression DOTDIV expression .)
    GTE             reduce using rule 37 (expression -> expression DOTDIV expression .)
    <               reduce using rule 37 (expression -> expression DOTDIV expression .)
    >               reduce using rule 37 (expression -> expression DOTDIV expression .)
    ]               reduce using rule 37 (expression -> expression DOTDIV expression .)
    )               reduce using rule 37 (expression -> expression DOTDIV expression .)
    :               reduce using rule 37 (expression -> expression DOTDIV expression .)
    {               reduce using rule 37 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 37 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 37 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 37 (expression -> expression DOTDIV expression .)
    BREAK           reduce using rule 37 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 37 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 37 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 37 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 37 (expression -> expression DOTDIV expression .)
    '               shift and go to state 54

  ! '               [ reduce using rule 37 (expression -> expression DOTDIV expression .) ]
  ! +               [ shift and go to state 46 ]
  ! -               [ shift and go to state 47 ]
  ! *               [ shift and go to state 48 ]
  ! /               [ shift and go to state 49 ]
  ! DOTADD          [ shift and go to state 50 ]
  ! DOTSUB          [ shift and go to state 51 ]
  ! DOTMUL          [ shift and go to state 52 ]
  ! DOTDIV          [ shift and go to state 53 ]


state 87

    (40) expression -> ( expression ) .

    +               reduce using rule 40 (expression -> ( expression ) .)
    -               reduce using rule 40 (expression -> ( expression ) .)
    *               reduce using rule 40 (expression -> ( expression ) .)
    /               reduce using rule 40 (expression -> ( expression ) .)
    DOTADD          reduce using rule 40 (expression -> ( expression ) .)
    DOTSUB          reduce using rule 40 (expression -> ( expression ) .)
    DOTMUL          reduce using rule 40 (expression -> ( expression ) .)
    DOTDIV          reduce using rule 40 (expression -> ( expression ) .)
    '               reduce using rule 40 (expression -> ( expression ) .)
    ;               reduce using rule 40 (expression -> ( expression ) .)
    ,               reduce using rule 40 (expression -> ( expression ) .)
    EQ              reduce using rule 40 (expression -> ( expression ) .)
    NEQ             reduce using rule 40 (expression -> ( expression ) .)
    LTE             reduce using rule 40 (expression -> ( expression ) .)
    GTE             reduce using rule 40 (expression -> ( expression ) .)
    <               reduce using rule 40 (expression -> ( expression ) .)
    >               reduce using rule 40 (expression -> ( expression ) .)
    ]               reduce using rule 40 (expression -> ( expression ) .)
    )               reduce using rule 40 (expression -> ( expression ) .)
    :               reduce using rule 40 (expression -> ( expression ) .)
    {               reduce using rule 40 (expression -> ( expression ) .)
    IF              reduce using rule 40 (expression -> ( expression ) .)
    FOR             reduce using rule 40 (expression -> ( expression ) .)
    WHILE           reduce using rule 40 (expression -> ( expression ) .)
    BREAK           reduce using rule 40 (expression -> ( expression ) .)
    CONTINUE        reduce using rule 40 (expression -> ( expression ) .)
    RETURN          reduce using rule 40 (expression -> ( expression ) .)
    PRINT           reduce using rule 40 (expression -> ( expression ) .)
    ID              reduce using rule 40 (expression -> ( expression ) .)


state 88

    (48) expression -> [ expression_list ] .

    +               reduce using rule 48 (expression -> [ expression_list ] .)
    -               reduce using rule 48 (expression -> [ expression_list ] .)
    *               reduce using rule 48 (expression -> [ expression_list ] .)
    /               reduce using rule 48 (expression -> [ expression_list ] .)
    DOTADD          reduce using rule 48 (expression -> [ expression_list ] .)
    DOTSUB          reduce using rule 48 (expression -> [ expression_list ] .)
    DOTMUL          reduce using rule 48 (expression -> [ expression_list ] .)
    DOTDIV          reduce using rule 48 (expression -> [ expression_list ] .)
    '               reduce using rule 48 (expression -> [ expression_list ] .)
    ;               reduce using rule 48 (expression -> [ expression_list ] .)
    ,               reduce using rule 48 (expression -> [ expression_list ] .)
    EQ              reduce using rule 48 (expression -> [ expression_list ] .)
    NEQ             reduce using rule 48 (expression -> [ expression_list ] .)
    LTE             reduce using rule 48 (expression -> [ expression_list ] .)
    GTE             reduce using rule 48 (expression -> [ expression_list ] .)
    <               reduce using rule 48 (expression -> [ expression_list ] .)
    >               reduce using rule 48 (expression -> [ expression_list ] .)
    ]               reduce using rule 48 (expression -> [ expression_list ] .)
    )               reduce using rule 48 (expression -> [ expression_list ] .)
    :               reduce using rule 48 (expression -> [ expression_list ] .)
    {               reduce using rule 48 (expression -> [ expression_list ] .)
    IF              reduce using rule 48 (expression -> [ expression_list ] .)
    FOR             reduce using rule 48 (expression -> [ expression_list ] .)
    WHILE           reduce using rule 48 (expression -> [ expression_list ] .)
    BREAK           reduce using rule 48 (expression -> [ expression_list ] .)
    CONTINUE        reduce using rule 48 (expression -> [ expression_list ] .)
    RETURN          reduce using rule 48 (expression -> [ expression_list ] .)
    PRINT           reduce using rule 48 (expression -> [ expression_list ] .)
    ID              reduce using rule 48 (expression -> [ expression_list ] .)


state 89

    (49) expression -> [ matrix_rows ] .

    +               reduce using rule 49 (expression -> [ matrix_rows ] .)
    -               reduce using rule 49 (expression -> [ matrix_rows ] .)
    *               reduce using rule 49 (expression -> [ matrix_rows ] .)
    /               reduce using rule 49 (expression -> [ matrix_rows ] .)
    DOTADD          reduce using rule 49 (expression -> [ matrix_rows ] .)
    DOTSUB          reduce using rule 49 (expression -> [ matrix_rows ] .)
    DOTMUL          reduce using rule 49 (expression -> [ matrix_rows ] .)
    DOTDIV          reduce using rule 49 (expression -> [ matrix_rows ] .)
    '               reduce using rule 49 (expression -> [ matrix_rows ] .)
    ;               reduce using rule 49 (expression -> [ matrix_rows ] .)
    ,               reduce using rule 49 (expression -> [ matrix_rows ] .)
    EQ              reduce using rule 49 (expression -> [ matrix_rows ] .)
    NEQ             reduce using rule 49 (expression -> [ matrix_rows ] .)
    LTE             reduce using rule 49 (expression -> [ matrix_rows ] .)
    GTE             reduce using rule 49 (expression -> [ matrix_rows ] .)
    <               reduce using rule 49 (expression -> [ matrix_rows ] .)
    >               reduce using rule 49 (expression -> [ matrix_rows ] .)
    ]               reduce using rule 49 (expression -> [ matrix_rows ] .)
    )               reduce using rule 49 (expression -> [ matrix_rows ] .)
    :               reduce using rule 49 (expression -> [ matrix_rows ] .)
    {               reduce using rule 49 (expression -> [ matrix_rows ] .)
    IF              reduce using rule 49 (expression -> [ matrix_rows ] .)
    FOR             reduce using rule 49 (expression -> [ matrix_rows ] .)
    WHILE           reduce using rule 49 (expression -> [ matrix_rows ] .)
    BREAK           reduce using rule 49 (expression -> [ matrix_rows ] .)
    CONTINUE        reduce using rule 49 (expression -> [ matrix_rows ] .)
    RETURN          reduce using rule 49 (expression -> [ matrix_rows ] .)
    PRINT           reduce using rule 49 (expression -> [ matrix_rows ] .)
    ID              reduce using rule 49 (expression -> [ matrix_rows ] .)


state 90

    (50) matrix_rows -> matrix_rows ; . expression_list
    (45) expression_list -> . expression_list , expression
    (46) expression_list -> . expression
    (47) expression_list -> .
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    ,               reduce using rule 47 (expression_list -> .)
    ]               reduce using rule 47 (expression_list -> .)
    ;               reduce using rule 47 (expression_list -> .)
    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression_list                shift and go to state 105
    expression                     shift and go to state 34
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 91

    (52) expression -> EYE ( expression . )
    (53) expression -> EYE ( expression . , expression )
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    )               shift and go to state 106
    ,               shift and go to state 107
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 92

    (54) expression -> ZEROS ( expression . )
    (55) expression -> ZEROS ( expression . , expression )
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    )               shift and go to state 108
    ,               shift and go to state 109
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 93

    (56) expression -> ONES ( expression . )
    (57) expression -> ONES ( expression . , expression )
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    )               shift and go to state 110
    ,               shift and go to state 111
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 94

    (45) expression_list -> expression_list , expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    ,               reduce using rule 45 (expression_list -> expression_list , expression .)
    ;               reduce using rule 45 (expression_list -> expression_list , expression .)
    ]               reduce using rule 45 (expression_list -> expression_list , expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 95

    (5) instruction -> IF ( condition ) instruction .
    (6) instruction -> IF ( condition ) instruction . ELSE instruction

    {               reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    IF              reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    FOR             reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    WHILE           reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    BREAK           reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    CONTINUE        reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    RETURN          reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    PRINT           reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    ID              reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    $end            reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    }               reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    ELSE            shift and go to state 112

  ! ELSE            [ reduce using rule 5 (instruction -> IF ( condition ) instruction .) ]


state 96

    (9) condition -> expression EQ expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    )               reduce using rule 9 (condition -> expression EQ expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 97

    (10) condition -> expression NEQ expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    )               reduce using rule 10 (condition -> expression NEQ expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 98

    (11) condition -> expression LTE expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    )               reduce using rule 11 (condition -> expression LTE expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 99

    (12) condition -> expression GTE expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    )               reduce using rule 12 (condition -> expression GTE expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 100

    (13) condition -> expression < expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    )               reduce using rule 13 (condition -> expression < expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 101

    (14) condition -> expression > expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    )               reduce using rule 14 (condition -> expression > expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 102

    (7) instruction -> FOR variable = range instruction .

    {               reduce using rule 7 (instruction -> FOR variable = range instruction .)
    IF              reduce using rule 7 (instruction -> FOR variable = range instruction .)
    FOR             reduce using rule 7 (instruction -> FOR variable = range instruction .)
    WHILE           reduce using rule 7 (instruction -> FOR variable = range instruction .)
    BREAK           reduce using rule 7 (instruction -> FOR variable = range instruction .)
    CONTINUE        reduce using rule 7 (instruction -> FOR variable = range instruction .)
    RETURN          reduce using rule 7 (instruction -> FOR variable = range instruction .)
    PRINT           reduce using rule 7 (instruction -> FOR variable = range instruction .)
    ID              reduce using rule 7 (instruction -> FOR variable = range instruction .)
    $end            reduce using rule 7 (instruction -> FOR variable = range instruction .)
    }               reduce using rule 7 (instruction -> FOR variable = range instruction .)
    ELSE            reduce using rule 7 (instruction -> FOR variable = range instruction .)


state 103

    (16) range -> expression : . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 113
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 104

    (8) instruction -> WHILE ( condition ) instruction .

    {               reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    IF              reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    FOR             reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    WHILE           reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    BREAK           reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    CONTINUE        reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    RETURN          reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    PRINT           reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    ID              reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    $end            reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    }               reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    ELSE            reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)


state 105

    (50) matrix_rows -> matrix_rows ; expression_list .
    (45) expression_list -> expression_list . , expression

    ]               reduce using rule 50 (matrix_rows -> matrix_rows ; expression_list .)
    ;               reduce using rule 50 (matrix_rows -> matrix_rows ; expression_list .)
    ,               shift and go to state 62


state 106

    (52) expression -> EYE ( expression ) .

    +               reduce using rule 52 (expression -> EYE ( expression ) .)
    -               reduce using rule 52 (expression -> EYE ( expression ) .)
    *               reduce using rule 52 (expression -> EYE ( expression ) .)
    /               reduce using rule 52 (expression -> EYE ( expression ) .)
    DOTADD          reduce using rule 52 (expression -> EYE ( expression ) .)
    DOTSUB          reduce using rule 52 (expression -> EYE ( expression ) .)
    DOTMUL          reduce using rule 52 (expression -> EYE ( expression ) .)
    DOTDIV          reduce using rule 52 (expression -> EYE ( expression ) .)
    '               reduce using rule 52 (expression -> EYE ( expression ) .)
    ;               reduce using rule 52 (expression -> EYE ( expression ) .)
    ,               reduce using rule 52 (expression -> EYE ( expression ) .)
    EQ              reduce using rule 52 (expression -> EYE ( expression ) .)
    NEQ             reduce using rule 52 (expression -> EYE ( expression ) .)
    LTE             reduce using rule 52 (expression -> EYE ( expression ) .)
    GTE             reduce using rule 52 (expression -> EYE ( expression ) .)
    <               reduce using rule 52 (expression -> EYE ( expression ) .)
    >               reduce using rule 52 (expression -> EYE ( expression ) .)
    ]               reduce using rule 52 (expression -> EYE ( expression ) .)
    )               reduce using rule 52 (expression -> EYE ( expression ) .)
    :               reduce using rule 52 (expression -> EYE ( expression ) .)
    {               reduce using rule 52 (expression -> EYE ( expression ) .)
    IF              reduce using rule 52 (expression -> EYE ( expression ) .)
    FOR             reduce using rule 52 (expression -> EYE ( expression ) .)
    WHILE           reduce using rule 52 (expression -> EYE ( expression ) .)
    BREAK           reduce using rule 52 (expression -> EYE ( expression ) .)
    CONTINUE        reduce using rule 52 (expression -> EYE ( expression ) .)
    RETURN          reduce using rule 52 (expression -> EYE ( expression ) .)
    PRINT           reduce using rule 52 (expression -> EYE ( expression ) .)
    ID              reduce using rule 52 (expression -> EYE ( expression ) .)


state 107

    (53) expression -> EYE ( expression , . expression )
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 114
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 108

    (54) expression -> ZEROS ( expression ) .

    +               reduce using rule 54 (expression -> ZEROS ( expression ) .)
    -               reduce using rule 54 (expression -> ZEROS ( expression ) .)
    *               reduce using rule 54 (expression -> ZEROS ( expression ) .)
    /               reduce using rule 54 (expression -> ZEROS ( expression ) .)
    DOTADD          reduce using rule 54 (expression -> ZEROS ( expression ) .)
    DOTSUB          reduce using rule 54 (expression -> ZEROS ( expression ) .)
    DOTMUL          reduce using rule 54 (expression -> ZEROS ( expression ) .)
    DOTDIV          reduce using rule 54 (expression -> ZEROS ( expression ) .)
    '               reduce using rule 54 (expression -> ZEROS ( expression ) .)
    ;               reduce using rule 54 (expression -> ZEROS ( expression ) .)
    ,               reduce using rule 54 (expression -> ZEROS ( expression ) .)
    EQ              reduce using rule 54 (expression -> ZEROS ( expression ) .)
    NEQ             reduce using rule 54 (expression -> ZEROS ( expression ) .)
    LTE             reduce using rule 54 (expression -> ZEROS ( expression ) .)
    GTE             reduce using rule 54 (expression -> ZEROS ( expression ) .)
    <               reduce using rule 54 (expression -> ZEROS ( expression ) .)
    >               reduce using rule 54 (expression -> ZEROS ( expression ) .)
    ]               reduce using rule 54 (expression -> ZEROS ( expression ) .)
    )               reduce using rule 54 (expression -> ZEROS ( expression ) .)
    :               reduce using rule 54 (expression -> ZEROS ( expression ) .)
    {               reduce using rule 54 (expression -> ZEROS ( expression ) .)
    IF              reduce using rule 54 (expression -> ZEROS ( expression ) .)
    FOR             reduce using rule 54 (expression -> ZEROS ( expression ) .)
    WHILE           reduce using rule 54 (expression -> ZEROS ( expression ) .)
    BREAK           reduce using rule 54 (expression -> ZEROS ( expression ) .)
    CONTINUE        reduce using rule 54 (expression -> ZEROS ( expression ) .)
    RETURN          reduce using rule 54 (expression -> ZEROS ( expression ) .)
    PRINT           reduce using rule 54 (expression -> ZEROS ( expression ) .)
    ID              reduce using rule 54 (expression -> ZEROS ( expression ) .)


state 109

    (55) expression -> ZEROS ( expression , . expression )
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 115
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 110

    (56) expression -> ONES ( expression ) .

    +               reduce using rule 56 (expression -> ONES ( expression ) .)
    -               reduce using rule 56 (expression -> ONES ( expression ) .)
    *               reduce using rule 56 (expression -> ONES ( expression ) .)
    /               reduce using rule 56 (expression -> ONES ( expression ) .)
    DOTADD          reduce using rule 56 (expression -> ONES ( expression ) .)
    DOTSUB          reduce using rule 56 (expression -> ONES ( expression ) .)
    DOTMUL          reduce using rule 56 (expression -> ONES ( expression ) .)
    DOTDIV          reduce using rule 56 (expression -> ONES ( expression ) .)
    '               reduce using rule 56 (expression -> ONES ( expression ) .)
    ;               reduce using rule 56 (expression -> ONES ( expression ) .)
    ,               reduce using rule 56 (expression -> ONES ( expression ) .)
    EQ              reduce using rule 56 (expression -> ONES ( expression ) .)
    NEQ             reduce using rule 56 (expression -> ONES ( expression ) .)
    LTE             reduce using rule 56 (expression -> ONES ( expression ) .)
    GTE             reduce using rule 56 (expression -> ONES ( expression ) .)
    <               reduce using rule 56 (expression -> ONES ( expression ) .)
    >               reduce using rule 56 (expression -> ONES ( expression ) .)
    ]               reduce using rule 56 (expression -> ONES ( expression ) .)
    )               reduce using rule 56 (expression -> ONES ( expression ) .)
    :               reduce using rule 56 (expression -> ONES ( expression ) .)
    {               reduce using rule 56 (expression -> ONES ( expression ) .)
    IF              reduce using rule 56 (expression -> ONES ( expression ) .)
    FOR             reduce using rule 56 (expression -> ONES ( expression ) .)
    WHILE           reduce using rule 56 (expression -> ONES ( expression ) .)
    BREAK           reduce using rule 56 (expression -> ONES ( expression ) .)
    CONTINUE        reduce using rule 56 (expression -> ONES ( expression ) .)
    RETURN          reduce using rule 56 (expression -> ONES ( expression ) .)
    PRINT           reduce using rule 56 (expression -> ONES ( expression ) .)
    ID              reduce using rule 56 (expression -> ONES ( expression ) .)


state 111

    (57) expression -> ONES ( expression , . expression )
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . INTNUM
    (43) expression -> . FLOATNUM
    (44) expression -> . STRING
    (48) expression -> . [ expression_list ]
    (49) expression -> . [ matrix_rows ]
    (52) expression -> . EYE ( expression )
    (53) expression -> . EYE ( expression , expression )
    (54) expression -> . ZEROS ( expression )
    (55) expression -> . ZEROS ( expression , expression )
    (56) expression -> . ONES ( expression )
    (57) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 116
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 112

    (6) instruction -> IF ( condition ) instruction ELSE . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . IF ( condition ) instruction
    (6) instruction -> . IF ( condition ) instruction ELSE instruction
    (7) instruction -> . FOR variable = range instruction
    (8) instruction -> . WHILE ( condition ) instruction
    (17) instruction -> . statement ;
    (18) statement -> . BREAK
    (19) statement -> . CONTINUE
    (20) statement -> . RETURN
    (21) statement -> . RETURN expression
    (22) statement -> . PRINT expression_list
    (23) statement -> . lvalue = expression
    (24) statement -> . lvalue ADDASSIGN expression
    (25) statement -> . lvalue SUBASSIGN expression
    (26) statement -> . lvalue MULASSIGN expression
    (27) statement -> . lvalue DIVASSIGN expression
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    {               shift and go to state 4
    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 15

    instruction                    shift and go to state 117
    variable                       shift and go to state 7
    statement                      shift and go to state 9
    lvalue                         shift and go to state 14

state 113

    (16) range -> expression : expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    {               reduce using rule 16 (range -> expression : expression .)
    IF              reduce using rule 16 (range -> expression : expression .)
    FOR             reduce using rule 16 (range -> expression : expression .)
    WHILE           reduce using rule 16 (range -> expression : expression .)
    BREAK           reduce using rule 16 (range -> expression : expression .)
    CONTINUE        reduce using rule 16 (range -> expression : expression .)
    RETURN          reduce using rule 16 (range -> expression : expression .)
    PRINT           reduce using rule 16 (range -> expression : expression .)
    ID              reduce using rule 16 (range -> expression : expression .)
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 114

    (53) expression -> EYE ( expression , expression . )
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    )               shift and go to state 118
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 115

    (55) expression -> ZEROS ( expression , expression . )
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    )               shift and go to state 119
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 116

    (57) expression -> ONES ( expression , expression . )
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    )               shift and go to state 120
    +               shift and go to state 46
    -               shift and go to state 47
    *               shift and go to state 48
    /               shift and go to state 49
    DOTADD          shift and go to state 50
    DOTSUB          shift and go to state 51
    DOTMUL          shift and go to state 52
    DOTDIV          shift and go to state 53
    '               shift and go to state 54


state 117

    (6) instruction -> IF ( condition ) instruction ELSE instruction .

    {               reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    IF              reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    FOR             reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    WHILE           reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    BREAK           reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    CONTINUE        reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    RETURN          reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    PRINT           reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    ID              reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    $end            reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    }               reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    ELSE            reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)


state 118

    (53) expression -> EYE ( expression , expression ) .

    +               reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    -               reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    *               reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    /               reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    DOTADD          reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    DOTSUB          reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    DOTMUL          reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    DOTDIV          reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    '               reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    ;               reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    ,               reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    EQ              reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    NEQ             reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    LTE             reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    GTE             reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    <               reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    >               reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    ]               reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    )               reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    :               reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    {               reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    IF              reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    FOR             reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    WHILE           reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    BREAK           reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    CONTINUE        reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    RETURN          reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    PRINT           reduce using rule 53 (expression -> EYE ( expression , expression ) .)
    ID              reduce using rule 53 (expression -> EYE ( expression , expression ) .)


state 119

    (55) expression -> ZEROS ( expression , expression ) .

    +               reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    -               reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    *               reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    /               reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    DOTADD          reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    DOTSUB          reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    DOTMUL          reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    DOTDIV          reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    '               reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    ;               reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    ,               reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    EQ              reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    NEQ             reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    LTE             reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    GTE             reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    <               reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    >               reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    ]               reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    )               reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    :               reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    {               reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    IF              reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    FOR             reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    WHILE           reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    BREAK           reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    CONTINUE        reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    RETURN          reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    PRINT           reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)
    ID              reduce using rule 55 (expression -> ZEROS ( expression , expression ) .)


state 120

    (57) expression -> ONES ( expression , expression ) .

    +               reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    -               reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    *               reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    /               reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    DOTADD          reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    DOTSUB          reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    DOTMUL          reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    DOTDIV          reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    '               reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    ;               reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    ,               reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    EQ              reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    NEQ             reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    LTE             reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    GTE             reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    <               reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    >               reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    ]               reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    )               reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    :               reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    {               reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    IF              reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    FOR             reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    WHILE           reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    BREAK           reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    CONTINUE        reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    RETURN          reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    PRINT           reduce using rule 57 (expression -> ONES ( expression , expression ) .)
    ID              reduce using rule 57 (expression -> ONES ( expression , expression ) .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ] in state 57 resolved as shift
