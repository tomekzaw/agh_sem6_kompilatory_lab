Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions
Rule 2     instructions -> instructions instruction
Rule 3     instructions -> <empty>
Rule 4     instruction -> { instructions }
Rule 5     instruction -> IF ( condition ) instruction
Rule 6     instruction -> IF ( condition ) instruction ELSE instruction
Rule 7     instruction -> FOR variable = range instruction
Rule 8     instruction -> WHILE ( condition ) instruction
Rule 9     condition -> expression comparision_operator expression
Rule 10    comparision_operator -> EQ
Rule 11    comparision_operator -> NEQ
Rule 12    comparision_operator -> LTE
Rule 13    comparision_operator -> GTE
Rule 14    comparision_operator -> <
Rule 15    comparision_operator -> >
Rule 16    variable -> ID
Rule 17    range -> expression : expression
Rule 18    instruction -> statement ;
Rule 19    statement -> BREAK
Rule 20    statement -> CONTINUE
Rule 21    statement -> RETURN
Rule 22    statement -> RETURN expression
Rule 23    statement -> PRINT expression_list
Rule 24    statement -> lvalue assignment_operator expression
Rule 25    lvalue -> variable
Rule 26    lvalue -> variable [ expression , expression ]
Rule 27    assignment_operator -> =
Rule 28    assignment_operator -> ADDASSIGN
Rule 29    assignment_operator -> SUBASSIGN
Rule 30    assignment_operator -> MULASSIGN
Rule 31    assignment_operator -> DIVASSIGN
Rule 32    expression -> expression + expression
Rule 33    expression -> expression - expression
Rule 34    expression -> expression * expression
Rule 35    expression -> expression / expression
Rule 36    expression -> expression DOTADD expression
Rule 37    expression -> expression DOTSUB expression
Rule 38    expression -> expression DOTMUL expression
Rule 39    expression -> expression DOTDIV expression
Rule 40    expression -> - expression
Rule 41    expression -> expression '
Rule 42    expression -> ( expression )
Rule 43    expression -> lvalue
Rule 44    expression -> INTNUM
Rule 45    expression -> FLOATNUM
Rule 46    expression -> STRING
Rule 47    expression_list -> expression_list , expression
Rule 48    expression_list -> expression
Rule 49    expression_list -> <empty>
Rule 50    expression -> [ matrix_rows ]
Rule 51    matrix_rows -> matrix_rows ; expression_list
Rule 52    matrix_rows -> expression_list
Rule 53    expression -> EYE ( expression )
Rule 54    expression -> EYE ( expression , expression )
Rule 55    expression -> ZEROS ( expression )
Rule 56    expression -> ZEROS ( expression , expression )
Rule 57    expression -> ONES ( expression )
Rule 58    expression -> ONES ( expression , expression )

Terminals, with rules where they appear

'                    : 41
(                    : 5 6 8 42 53 54 55 56 57 58
)                    : 5 6 8 42 53 54 55 56 57 58
*                    : 34
+                    : 32
,                    : 26 47 54 56 58
-                    : 33 40
/                    : 35
:                    : 17
;                    : 18 51
<                    : 14
=                    : 7 27
>                    : 15
ADDASSIGN            : 28
BREAK                : 19
CONTINUE             : 20
DIVASSIGN            : 31
DOTADD               : 36
DOTDIV               : 39
DOTMUL               : 38
DOTSUB               : 37
ELSE                 : 6
EQ                   : 10
EYE                  : 53 54
FLOATNUM             : 45
FOR                  : 7
GTE                  : 13
ID                   : 16
IF                   : 5 6
INTNUM               : 44
LTE                  : 12
MULASSIGN            : 30
NEQ                  : 11
ONES                 : 57 58
PRINT                : 23
RETURN               : 21 22
STRING               : 46
SUBASSIGN            : 29
WHILE                : 8
ZEROS                : 55 56
[                    : 26 50
]                    : 26 50
error                : 
{                    : 4
}                    : 4

Nonterminals, with rules where they appear

assignment_operator  : 24
comparision_operator : 9
condition            : 5 6 8
expression           : 9 9 17 17 22 24 26 26 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 41 42 47 48 53 54 54 55 56 56 57 58 58
expression_list      : 23 47 51 52
instruction          : 2 5 6 6 7 8
instructions         : 1 2 4
lvalue               : 24 43
matrix_rows          : 50 51
program              : 0
range                : 7
statement            : 18
variable             : 7 25 26

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions
    (2) instructions -> . instructions instruction
    (3) instructions -> .

    {               reduce using rule 3 (instructions -> .)
    IF              reduce using rule 3 (instructions -> .)
    FOR             reduce using rule 3 (instructions -> .)
    WHILE           reduce using rule 3 (instructions -> .)
    BREAK           reduce using rule 3 (instructions -> .)
    CONTINUE        reduce using rule 3 (instructions -> .)
    RETURN          reduce using rule 3 (instructions -> .)
    PRINT           reduce using rule 3 (instructions -> .)
    ID              reduce using rule 3 (instructions -> .)
    $end            reduce using rule 3 (instructions -> .)

    program                        shift and go to state 1
    instructions                   shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions .
    (2) instructions -> instructions . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . IF ( condition ) instruction
    (6) instruction -> . IF ( condition ) instruction ELSE instruction
    (7) instruction -> . FOR variable = range instruction
    (8) instruction -> . WHILE ( condition ) instruction
    (18) instruction -> . statement ;
    (19) statement -> . BREAK
    (20) statement -> . CONTINUE
    (21) statement -> . RETURN
    (22) statement -> . RETURN expression
    (23) statement -> . PRINT expression_list
    (24) statement -> . lvalue assignment_operator expression
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    $end            reduce using rule 1 (program -> instructions .)
    {               shift and go to state 4
    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 15

    instruction                    shift and go to state 3
    variable                       shift and go to state 7
    statement                      shift and go to state 9
    lvalue                         shift and go to state 14

state 3

    (2) instructions -> instructions instruction .

    {               reduce using rule 2 (instructions -> instructions instruction .)
    IF              reduce using rule 2 (instructions -> instructions instruction .)
    FOR             reduce using rule 2 (instructions -> instructions instruction .)
    WHILE           reduce using rule 2 (instructions -> instructions instruction .)
    BREAK           reduce using rule 2 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 2 (instructions -> instructions instruction .)
    RETURN          reduce using rule 2 (instructions -> instructions instruction .)
    PRINT           reduce using rule 2 (instructions -> instructions instruction .)
    ID              reduce using rule 2 (instructions -> instructions instruction .)
    $end            reduce using rule 2 (instructions -> instructions instruction .)
    }               reduce using rule 2 (instructions -> instructions instruction .)


state 4

    (4) instruction -> { . instructions }
    (2) instructions -> . instructions instruction
    (3) instructions -> .

    }               reduce using rule 3 (instructions -> .)
    {               reduce using rule 3 (instructions -> .)
    IF              reduce using rule 3 (instructions -> .)
    FOR             reduce using rule 3 (instructions -> .)
    WHILE           reduce using rule 3 (instructions -> .)
    BREAK           reduce using rule 3 (instructions -> .)
    CONTINUE        reduce using rule 3 (instructions -> .)
    RETURN          reduce using rule 3 (instructions -> .)
    PRINT           reduce using rule 3 (instructions -> .)
    ID              reduce using rule 3 (instructions -> .)

    instructions                   shift and go to state 16

state 5

    (5) instruction -> IF . ( condition ) instruction
    (6) instruction -> IF . ( condition ) instruction ELSE instruction

    (               shift and go to state 17


state 6

    (7) instruction -> FOR . variable = range instruction
    (16) variable -> . ID

    ID              shift and go to state 15

    variable                       shift and go to state 18

state 7

    (25) lvalue -> variable .
    (26) lvalue -> variable . [ expression , expression ]

    =               reduce using rule 25 (lvalue -> variable .)
    ADDASSIGN       reduce using rule 25 (lvalue -> variable .)
    SUBASSIGN       reduce using rule 25 (lvalue -> variable .)
    MULASSIGN       reduce using rule 25 (lvalue -> variable .)
    DIVASSIGN       reduce using rule 25 (lvalue -> variable .)
    +               reduce using rule 25 (lvalue -> variable .)
    -               reduce using rule 25 (lvalue -> variable .)
    *               reduce using rule 25 (lvalue -> variable .)
    /               reduce using rule 25 (lvalue -> variable .)
    DOTADD          reduce using rule 25 (lvalue -> variable .)
    DOTSUB          reduce using rule 25 (lvalue -> variable .)
    DOTMUL          reduce using rule 25 (lvalue -> variable .)
    DOTDIV          reduce using rule 25 (lvalue -> variable .)
    '               reduce using rule 25 (lvalue -> variable .)
    ;               reduce using rule 25 (lvalue -> variable .)
    ,               reduce using rule 25 (lvalue -> variable .)
    EQ              reduce using rule 25 (lvalue -> variable .)
    NEQ             reduce using rule 25 (lvalue -> variable .)
    LTE             reduce using rule 25 (lvalue -> variable .)
    GTE             reduce using rule 25 (lvalue -> variable .)
    <               reduce using rule 25 (lvalue -> variable .)
    >               reduce using rule 25 (lvalue -> variable .)
    )               reduce using rule 25 (lvalue -> variable .)
    ]               reduce using rule 25 (lvalue -> variable .)
    :               reduce using rule 25 (lvalue -> variable .)
    {               reduce using rule 25 (lvalue -> variable .)
    IF              reduce using rule 25 (lvalue -> variable .)
    FOR             reduce using rule 25 (lvalue -> variable .)
    WHILE           reduce using rule 25 (lvalue -> variable .)
    BREAK           reduce using rule 25 (lvalue -> variable .)
    CONTINUE        reduce using rule 25 (lvalue -> variable .)
    RETURN          reduce using rule 25 (lvalue -> variable .)
    PRINT           reduce using rule 25 (lvalue -> variable .)
    ID              reduce using rule 25 (lvalue -> variable .)
    [               shift and go to state 19


state 8

    (8) instruction -> WHILE . ( condition ) instruction

    (               shift and go to state 20


state 9

    (18) instruction -> statement . ;

    ;               shift and go to state 21


state 10

    (19) statement -> BREAK .

    ;               reduce using rule 19 (statement -> BREAK .)


state 11

    (20) statement -> CONTINUE .

    ;               reduce using rule 20 (statement -> CONTINUE .)


state 12

    (21) statement -> RETURN .
    (22) statement -> RETURN . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    ;               reduce using rule 21 (statement -> RETURN .)
    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 22
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 13

    (23) statement -> PRINT . expression_list
    (47) expression_list -> . expression_list , expression
    (48) expression_list -> . expression
    (49) expression_list -> .
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    ,               reduce using rule 49 (expression_list -> .)
    ;               reduce using rule 49 (expression_list -> .)
    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression_list                shift and go to state 33
    expression                     shift and go to state 34
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 14

    (24) statement -> lvalue . assignment_operator expression
    (27) assignment_operator -> . =
    (28) assignment_operator -> . ADDASSIGN
    (29) assignment_operator -> . SUBASSIGN
    (30) assignment_operator -> . MULASSIGN
    (31) assignment_operator -> . DIVASSIGN

    =               shift and go to state 36
    ADDASSIGN       shift and go to state 37
    SUBASSIGN       shift and go to state 38
    MULASSIGN       shift and go to state 39
    DIVASSIGN       shift and go to state 40

    assignment_operator            shift and go to state 35

state 15

    (16) variable -> ID .

    [               reduce using rule 16 (variable -> ID .)
    =               reduce using rule 16 (variable -> ID .)
    ADDASSIGN       reduce using rule 16 (variable -> ID .)
    SUBASSIGN       reduce using rule 16 (variable -> ID .)
    MULASSIGN       reduce using rule 16 (variable -> ID .)
    DIVASSIGN       reduce using rule 16 (variable -> ID .)
    +               reduce using rule 16 (variable -> ID .)
    -               reduce using rule 16 (variable -> ID .)
    *               reduce using rule 16 (variable -> ID .)
    /               reduce using rule 16 (variable -> ID .)
    DOTADD          reduce using rule 16 (variable -> ID .)
    DOTSUB          reduce using rule 16 (variable -> ID .)
    DOTMUL          reduce using rule 16 (variable -> ID .)
    DOTDIV          reduce using rule 16 (variable -> ID .)
    '               reduce using rule 16 (variable -> ID .)
    ;               reduce using rule 16 (variable -> ID .)
    ,               reduce using rule 16 (variable -> ID .)
    EQ              reduce using rule 16 (variable -> ID .)
    NEQ             reduce using rule 16 (variable -> ID .)
    LTE             reduce using rule 16 (variable -> ID .)
    GTE             reduce using rule 16 (variable -> ID .)
    <               reduce using rule 16 (variable -> ID .)
    >               reduce using rule 16 (variable -> ID .)
    )               reduce using rule 16 (variable -> ID .)
    ]               reduce using rule 16 (variable -> ID .)
    :               reduce using rule 16 (variable -> ID .)
    {               reduce using rule 16 (variable -> ID .)
    IF              reduce using rule 16 (variable -> ID .)
    FOR             reduce using rule 16 (variable -> ID .)
    WHILE           reduce using rule 16 (variable -> ID .)
    BREAK           reduce using rule 16 (variable -> ID .)
    CONTINUE        reduce using rule 16 (variable -> ID .)
    RETURN          reduce using rule 16 (variable -> ID .)
    PRINT           reduce using rule 16 (variable -> ID .)
    ID              reduce using rule 16 (variable -> ID .)


state 16

    (4) instruction -> { instructions . }
    (2) instructions -> instructions . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . IF ( condition ) instruction
    (6) instruction -> . IF ( condition ) instruction ELSE instruction
    (7) instruction -> . FOR variable = range instruction
    (8) instruction -> . WHILE ( condition ) instruction
    (18) instruction -> . statement ;
    (19) statement -> . BREAK
    (20) statement -> . CONTINUE
    (21) statement -> . RETURN
    (22) statement -> . RETURN expression
    (23) statement -> . PRINT expression_list
    (24) statement -> . lvalue assignment_operator expression
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    }               shift and go to state 41
    {               shift and go to state 4
    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 15

    instruction                    shift and go to state 3
    variable                       shift and go to state 7
    statement                      shift and go to state 9
    lvalue                         shift and go to state 14

state 17

    (5) instruction -> IF ( . condition ) instruction
    (6) instruction -> IF ( . condition ) instruction ELSE instruction
    (9) condition -> . expression comparision_operator expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    condition                      shift and go to state 42
    expression                     shift and go to state 43
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 18

    (7) instruction -> FOR variable . = range instruction

    =               shift and go to state 44


state 19

    (26) lvalue -> variable [ . expression , expression ]
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    variable                       shift and go to state 7
    expression                     shift and go to state 45
    lvalue                         shift and go to state 25

state 20

    (8) instruction -> WHILE ( . condition ) instruction
    (9) condition -> . expression comparision_operator expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    condition                      shift and go to state 46
    expression                     shift and go to state 43
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 21

    (18) instruction -> statement ; .

    {               reduce using rule 18 (instruction -> statement ; .)
    IF              reduce using rule 18 (instruction -> statement ; .)
    FOR             reduce using rule 18 (instruction -> statement ; .)
    WHILE           reduce using rule 18 (instruction -> statement ; .)
    BREAK           reduce using rule 18 (instruction -> statement ; .)
    CONTINUE        reduce using rule 18 (instruction -> statement ; .)
    RETURN          reduce using rule 18 (instruction -> statement ; .)
    PRINT           reduce using rule 18 (instruction -> statement ; .)
    ID              reduce using rule 18 (instruction -> statement ; .)
    $end            reduce using rule 18 (instruction -> statement ; .)
    }               reduce using rule 18 (instruction -> statement ; .)
    ELSE            reduce using rule 18 (instruction -> statement ; .)


state 22

    (22) statement -> RETURN expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    ;               reduce using rule 22 (statement -> RETURN expression .)
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55


state 23

    (40) expression -> - . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 56
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 24

    (42) expression -> ( . expression )
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 57
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 25

    (43) expression -> lvalue .

    +               reduce using rule 43 (expression -> lvalue .)
    -               reduce using rule 43 (expression -> lvalue .)
    *               reduce using rule 43 (expression -> lvalue .)
    /               reduce using rule 43 (expression -> lvalue .)
    DOTADD          reduce using rule 43 (expression -> lvalue .)
    DOTSUB          reduce using rule 43 (expression -> lvalue .)
    DOTMUL          reduce using rule 43 (expression -> lvalue .)
    DOTDIV          reduce using rule 43 (expression -> lvalue .)
    '               reduce using rule 43 (expression -> lvalue .)
    ;               reduce using rule 43 (expression -> lvalue .)
    ,               reduce using rule 43 (expression -> lvalue .)
    EQ              reduce using rule 43 (expression -> lvalue .)
    NEQ             reduce using rule 43 (expression -> lvalue .)
    LTE             reduce using rule 43 (expression -> lvalue .)
    GTE             reduce using rule 43 (expression -> lvalue .)
    <               reduce using rule 43 (expression -> lvalue .)
    >               reduce using rule 43 (expression -> lvalue .)
    )               reduce using rule 43 (expression -> lvalue .)
    ]               reduce using rule 43 (expression -> lvalue .)
    :               reduce using rule 43 (expression -> lvalue .)
    {               reduce using rule 43 (expression -> lvalue .)
    IF              reduce using rule 43 (expression -> lvalue .)
    FOR             reduce using rule 43 (expression -> lvalue .)
    WHILE           reduce using rule 43 (expression -> lvalue .)
    BREAK           reduce using rule 43 (expression -> lvalue .)
    CONTINUE        reduce using rule 43 (expression -> lvalue .)
    RETURN          reduce using rule 43 (expression -> lvalue .)
    PRINT           reduce using rule 43 (expression -> lvalue .)
    ID              reduce using rule 43 (expression -> lvalue .)


state 26

    (44) expression -> INTNUM .

    +               reduce using rule 44 (expression -> INTNUM .)
    -               reduce using rule 44 (expression -> INTNUM .)
    *               reduce using rule 44 (expression -> INTNUM .)
    /               reduce using rule 44 (expression -> INTNUM .)
    DOTADD          reduce using rule 44 (expression -> INTNUM .)
    DOTSUB          reduce using rule 44 (expression -> INTNUM .)
    DOTMUL          reduce using rule 44 (expression -> INTNUM .)
    DOTDIV          reduce using rule 44 (expression -> INTNUM .)
    '               reduce using rule 44 (expression -> INTNUM .)
    ;               reduce using rule 44 (expression -> INTNUM .)
    ,               reduce using rule 44 (expression -> INTNUM .)
    EQ              reduce using rule 44 (expression -> INTNUM .)
    NEQ             reduce using rule 44 (expression -> INTNUM .)
    LTE             reduce using rule 44 (expression -> INTNUM .)
    GTE             reduce using rule 44 (expression -> INTNUM .)
    <               reduce using rule 44 (expression -> INTNUM .)
    >               reduce using rule 44 (expression -> INTNUM .)
    )               reduce using rule 44 (expression -> INTNUM .)
    ]               reduce using rule 44 (expression -> INTNUM .)
    :               reduce using rule 44 (expression -> INTNUM .)
    {               reduce using rule 44 (expression -> INTNUM .)
    IF              reduce using rule 44 (expression -> INTNUM .)
    FOR             reduce using rule 44 (expression -> INTNUM .)
    WHILE           reduce using rule 44 (expression -> INTNUM .)
    BREAK           reduce using rule 44 (expression -> INTNUM .)
    CONTINUE        reduce using rule 44 (expression -> INTNUM .)
    RETURN          reduce using rule 44 (expression -> INTNUM .)
    PRINT           reduce using rule 44 (expression -> INTNUM .)
    ID              reduce using rule 44 (expression -> INTNUM .)


state 27

    (45) expression -> FLOATNUM .

    +               reduce using rule 45 (expression -> FLOATNUM .)
    -               reduce using rule 45 (expression -> FLOATNUM .)
    *               reduce using rule 45 (expression -> FLOATNUM .)
    /               reduce using rule 45 (expression -> FLOATNUM .)
    DOTADD          reduce using rule 45 (expression -> FLOATNUM .)
    DOTSUB          reduce using rule 45 (expression -> FLOATNUM .)
    DOTMUL          reduce using rule 45 (expression -> FLOATNUM .)
    DOTDIV          reduce using rule 45 (expression -> FLOATNUM .)
    '               reduce using rule 45 (expression -> FLOATNUM .)
    ;               reduce using rule 45 (expression -> FLOATNUM .)
    ,               reduce using rule 45 (expression -> FLOATNUM .)
    EQ              reduce using rule 45 (expression -> FLOATNUM .)
    NEQ             reduce using rule 45 (expression -> FLOATNUM .)
    LTE             reduce using rule 45 (expression -> FLOATNUM .)
    GTE             reduce using rule 45 (expression -> FLOATNUM .)
    <               reduce using rule 45 (expression -> FLOATNUM .)
    >               reduce using rule 45 (expression -> FLOATNUM .)
    )               reduce using rule 45 (expression -> FLOATNUM .)
    ]               reduce using rule 45 (expression -> FLOATNUM .)
    :               reduce using rule 45 (expression -> FLOATNUM .)
    {               reduce using rule 45 (expression -> FLOATNUM .)
    IF              reduce using rule 45 (expression -> FLOATNUM .)
    FOR             reduce using rule 45 (expression -> FLOATNUM .)
    WHILE           reduce using rule 45 (expression -> FLOATNUM .)
    BREAK           reduce using rule 45 (expression -> FLOATNUM .)
    CONTINUE        reduce using rule 45 (expression -> FLOATNUM .)
    RETURN          reduce using rule 45 (expression -> FLOATNUM .)
    PRINT           reduce using rule 45 (expression -> FLOATNUM .)
    ID              reduce using rule 45 (expression -> FLOATNUM .)


state 28

    (46) expression -> STRING .

    +               reduce using rule 46 (expression -> STRING .)
    -               reduce using rule 46 (expression -> STRING .)
    *               reduce using rule 46 (expression -> STRING .)
    /               reduce using rule 46 (expression -> STRING .)
    DOTADD          reduce using rule 46 (expression -> STRING .)
    DOTSUB          reduce using rule 46 (expression -> STRING .)
    DOTMUL          reduce using rule 46 (expression -> STRING .)
    DOTDIV          reduce using rule 46 (expression -> STRING .)
    '               reduce using rule 46 (expression -> STRING .)
    ;               reduce using rule 46 (expression -> STRING .)
    ,               reduce using rule 46 (expression -> STRING .)
    EQ              reduce using rule 46 (expression -> STRING .)
    NEQ             reduce using rule 46 (expression -> STRING .)
    LTE             reduce using rule 46 (expression -> STRING .)
    GTE             reduce using rule 46 (expression -> STRING .)
    <               reduce using rule 46 (expression -> STRING .)
    >               reduce using rule 46 (expression -> STRING .)
    )               reduce using rule 46 (expression -> STRING .)
    ]               reduce using rule 46 (expression -> STRING .)
    :               reduce using rule 46 (expression -> STRING .)
    {               reduce using rule 46 (expression -> STRING .)
    IF              reduce using rule 46 (expression -> STRING .)
    FOR             reduce using rule 46 (expression -> STRING .)
    WHILE           reduce using rule 46 (expression -> STRING .)
    BREAK           reduce using rule 46 (expression -> STRING .)
    CONTINUE        reduce using rule 46 (expression -> STRING .)
    RETURN          reduce using rule 46 (expression -> STRING .)
    PRINT           reduce using rule 46 (expression -> STRING .)
    ID              reduce using rule 46 (expression -> STRING .)


state 29

    (50) expression -> [ . matrix_rows ]
    (51) matrix_rows -> . matrix_rows ; expression_list
    (52) matrix_rows -> . expression_list
    (47) expression_list -> . expression_list , expression
    (48) expression_list -> . expression
    (49) expression_list -> .
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    ,               reduce using rule 49 (expression_list -> .)
    ]               reduce using rule 49 (expression_list -> .)
    ;               reduce using rule 49 (expression_list -> .)
    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    matrix_rows                    shift and go to state 58
    expression_list                shift and go to state 59
    expression                     shift and go to state 34
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 30

    (53) expression -> EYE . ( expression )
    (54) expression -> EYE . ( expression , expression )

    (               shift and go to state 60


state 31

    (55) expression -> ZEROS . ( expression )
    (56) expression -> ZEROS . ( expression , expression )

    (               shift and go to state 61


state 32

    (57) expression -> ONES . ( expression )
    (58) expression -> ONES . ( expression , expression )

    (               shift and go to state 62


state 33

    (23) statement -> PRINT expression_list .
    (47) expression_list -> expression_list . , expression

    ;               reduce using rule 23 (statement -> PRINT expression_list .)
    ,               shift and go to state 63


state 34

    (48) expression_list -> expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    ,               reduce using rule 48 (expression_list -> expression .)
    ;               reduce using rule 48 (expression_list -> expression .)
    ]               reduce using rule 48 (expression_list -> expression .)
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55


state 35

    (24) statement -> lvalue assignment_operator . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    lvalue                         shift and go to state 25
    expression                     shift and go to state 64
    variable                       shift and go to state 7

state 36

    (27) assignment_operator -> = .

    -               reduce using rule 27 (assignment_operator -> = .)
    (               reduce using rule 27 (assignment_operator -> = .)
    INTNUM          reduce using rule 27 (assignment_operator -> = .)
    FLOATNUM        reduce using rule 27 (assignment_operator -> = .)
    STRING          reduce using rule 27 (assignment_operator -> = .)
    [               reduce using rule 27 (assignment_operator -> = .)
    EYE             reduce using rule 27 (assignment_operator -> = .)
    ZEROS           reduce using rule 27 (assignment_operator -> = .)
    ONES            reduce using rule 27 (assignment_operator -> = .)
    ID              reduce using rule 27 (assignment_operator -> = .)


state 37

    (28) assignment_operator -> ADDASSIGN .

    -               reduce using rule 28 (assignment_operator -> ADDASSIGN .)
    (               reduce using rule 28 (assignment_operator -> ADDASSIGN .)
    INTNUM          reduce using rule 28 (assignment_operator -> ADDASSIGN .)
    FLOATNUM        reduce using rule 28 (assignment_operator -> ADDASSIGN .)
    STRING          reduce using rule 28 (assignment_operator -> ADDASSIGN .)
    [               reduce using rule 28 (assignment_operator -> ADDASSIGN .)
    EYE             reduce using rule 28 (assignment_operator -> ADDASSIGN .)
    ZEROS           reduce using rule 28 (assignment_operator -> ADDASSIGN .)
    ONES            reduce using rule 28 (assignment_operator -> ADDASSIGN .)
    ID              reduce using rule 28 (assignment_operator -> ADDASSIGN .)


state 38

    (29) assignment_operator -> SUBASSIGN .

    -               reduce using rule 29 (assignment_operator -> SUBASSIGN .)
    (               reduce using rule 29 (assignment_operator -> SUBASSIGN .)
    INTNUM          reduce using rule 29 (assignment_operator -> SUBASSIGN .)
    FLOATNUM        reduce using rule 29 (assignment_operator -> SUBASSIGN .)
    STRING          reduce using rule 29 (assignment_operator -> SUBASSIGN .)
    [               reduce using rule 29 (assignment_operator -> SUBASSIGN .)
    EYE             reduce using rule 29 (assignment_operator -> SUBASSIGN .)
    ZEROS           reduce using rule 29 (assignment_operator -> SUBASSIGN .)
    ONES            reduce using rule 29 (assignment_operator -> SUBASSIGN .)
    ID              reduce using rule 29 (assignment_operator -> SUBASSIGN .)


state 39

    (30) assignment_operator -> MULASSIGN .

    -               reduce using rule 30 (assignment_operator -> MULASSIGN .)
    (               reduce using rule 30 (assignment_operator -> MULASSIGN .)
    INTNUM          reduce using rule 30 (assignment_operator -> MULASSIGN .)
    FLOATNUM        reduce using rule 30 (assignment_operator -> MULASSIGN .)
    STRING          reduce using rule 30 (assignment_operator -> MULASSIGN .)
    [               reduce using rule 30 (assignment_operator -> MULASSIGN .)
    EYE             reduce using rule 30 (assignment_operator -> MULASSIGN .)
    ZEROS           reduce using rule 30 (assignment_operator -> MULASSIGN .)
    ONES            reduce using rule 30 (assignment_operator -> MULASSIGN .)
    ID              reduce using rule 30 (assignment_operator -> MULASSIGN .)


state 40

    (31) assignment_operator -> DIVASSIGN .

    -               reduce using rule 31 (assignment_operator -> DIVASSIGN .)
    (               reduce using rule 31 (assignment_operator -> DIVASSIGN .)
    INTNUM          reduce using rule 31 (assignment_operator -> DIVASSIGN .)
    FLOATNUM        reduce using rule 31 (assignment_operator -> DIVASSIGN .)
    STRING          reduce using rule 31 (assignment_operator -> DIVASSIGN .)
    [               reduce using rule 31 (assignment_operator -> DIVASSIGN .)
    EYE             reduce using rule 31 (assignment_operator -> DIVASSIGN .)
    ZEROS           reduce using rule 31 (assignment_operator -> DIVASSIGN .)
    ONES            reduce using rule 31 (assignment_operator -> DIVASSIGN .)
    ID              reduce using rule 31 (assignment_operator -> DIVASSIGN .)


state 41

    (4) instruction -> { instructions } .

    {               reduce using rule 4 (instruction -> { instructions } .)
    IF              reduce using rule 4 (instruction -> { instructions } .)
    FOR             reduce using rule 4 (instruction -> { instructions } .)
    WHILE           reduce using rule 4 (instruction -> { instructions } .)
    BREAK           reduce using rule 4 (instruction -> { instructions } .)
    CONTINUE        reduce using rule 4 (instruction -> { instructions } .)
    RETURN          reduce using rule 4 (instruction -> { instructions } .)
    PRINT           reduce using rule 4 (instruction -> { instructions } .)
    ID              reduce using rule 4 (instruction -> { instructions } .)
    $end            reduce using rule 4 (instruction -> { instructions } .)
    }               reduce using rule 4 (instruction -> { instructions } .)
    ELSE            reduce using rule 4 (instruction -> { instructions } .)


state 42

    (5) instruction -> IF ( condition . ) instruction
    (6) instruction -> IF ( condition . ) instruction ELSE instruction

    )               shift and go to state 65


state 43

    (9) condition -> expression . comparision_operator expression
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '
    (10) comparision_operator -> . EQ
    (11) comparision_operator -> . NEQ
    (12) comparision_operator -> . LTE
    (13) comparision_operator -> . GTE
    (14) comparision_operator -> . <
    (15) comparision_operator -> . >

    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55
    EQ              shift and go to state 67
    NEQ             shift and go to state 68
    LTE             shift and go to state 69
    GTE             shift and go to state 70
    <               shift and go to state 71
    >               shift and go to state 72

    comparision_operator           shift and go to state 66

state 44

    (7) instruction -> FOR variable = . range instruction
    (17) range -> . expression : expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    variable                       shift and go to state 7
    range                          shift and go to state 73
    expression                     shift and go to state 74
    lvalue                         shift and go to state 25

state 45

    (26) lvalue -> variable [ expression . , expression ]
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    ,               shift and go to state 75
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55


state 46

    (8) instruction -> WHILE ( condition . ) instruction

    )               shift and go to state 76


state 47

    (32) expression -> expression + . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 77
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 48

    (33) expression -> expression - . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 78
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 49

    (34) expression -> expression * . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 79
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 50

    (35) expression -> expression / . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 80
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 51

    (36) expression -> expression DOTADD . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 81
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 52

    (37) expression -> expression DOTSUB . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 82
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 53

    (38) expression -> expression DOTMUL . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 83
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 54

    (39) expression -> expression DOTDIV . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 84
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 55

    (41) expression -> expression ' .

    +               reduce using rule 41 (expression -> expression ' .)
    -               reduce using rule 41 (expression -> expression ' .)
    *               reduce using rule 41 (expression -> expression ' .)
    /               reduce using rule 41 (expression -> expression ' .)
    DOTADD          reduce using rule 41 (expression -> expression ' .)
    DOTSUB          reduce using rule 41 (expression -> expression ' .)
    DOTMUL          reduce using rule 41 (expression -> expression ' .)
    DOTDIV          reduce using rule 41 (expression -> expression ' .)
    '               reduce using rule 41 (expression -> expression ' .)
    ;               reduce using rule 41 (expression -> expression ' .)
    ,               reduce using rule 41 (expression -> expression ' .)
    EQ              reduce using rule 41 (expression -> expression ' .)
    NEQ             reduce using rule 41 (expression -> expression ' .)
    LTE             reduce using rule 41 (expression -> expression ' .)
    GTE             reduce using rule 41 (expression -> expression ' .)
    <               reduce using rule 41 (expression -> expression ' .)
    >               reduce using rule 41 (expression -> expression ' .)
    )               reduce using rule 41 (expression -> expression ' .)
    ]               reduce using rule 41 (expression -> expression ' .)
    :               reduce using rule 41 (expression -> expression ' .)
    {               reduce using rule 41 (expression -> expression ' .)
    IF              reduce using rule 41 (expression -> expression ' .)
    FOR             reduce using rule 41 (expression -> expression ' .)
    WHILE           reduce using rule 41 (expression -> expression ' .)
    BREAK           reduce using rule 41 (expression -> expression ' .)
    CONTINUE        reduce using rule 41 (expression -> expression ' .)
    RETURN          reduce using rule 41 (expression -> expression ' .)
    PRINT           reduce using rule 41 (expression -> expression ' .)
    ID              reduce using rule 41 (expression -> expression ' .)


state 56

    (40) expression -> - expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    +               reduce using rule 40 (expression -> - expression .)
    -               reduce using rule 40 (expression -> - expression .)
    *               reduce using rule 40 (expression -> - expression .)
    /               reduce using rule 40 (expression -> - expression .)
    DOTADD          reduce using rule 40 (expression -> - expression .)
    DOTSUB          reduce using rule 40 (expression -> - expression .)
    DOTMUL          reduce using rule 40 (expression -> - expression .)
    DOTDIV          reduce using rule 40 (expression -> - expression .)
    ;               reduce using rule 40 (expression -> - expression .)
    ,               reduce using rule 40 (expression -> - expression .)
    EQ              reduce using rule 40 (expression -> - expression .)
    NEQ             reduce using rule 40 (expression -> - expression .)
    LTE             reduce using rule 40 (expression -> - expression .)
    GTE             reduce using rule 40 (expression -> - expression .)
    <               reduce using rule 40 (expression -> - expression .)
    >               reduce using rule 40 (expression -> - expression .)
    )               reduce using rule 40 (expression -> - expression .)
    ]               reduce using rule 40 (expression -> - expression .)
    :               reduce using rule 40 (expression -> - expression .)
    {               reduce using rule 40 (expression -> - expression .)
    IF              reduce using rule 40 (expression -> - expression .)
    FOR             reduce using rule 40 (expression -> - expression .)
    WHILE           reduce using rule 40 (expression -> - expression .)
    BREAK           reduce using rule 40 (expression -> - expression .)
    CONTINUE        reduce using rule 40 (expression -> - expression .)
    RETURN          reduce using rule 40 (expression -> - expression .)
    PRINT           reduce using rule 40 (expression -> - expression .)
    ID              reduce using rule 40 (expression -> - expression .)
    '               shift and go to state 55

  ! '               [ reduce using rule 40 (expression -> - expression .) ]
  ! +               [ shift and go to state 47 ]
  ! -               [ shift and go to state 48 ]
  ! *               [ shift and go to state 49 ]
  ! /               [ shift and go to state 50 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! DOTMUL          [ shift and go to state 53 ]
  ! DOTDIV          [ shift and go to state 54 ]


state 57

    (42) expression -> ( expression . )
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    )               shift and go to state 85
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55


state 58

    (50) expression -> [ matrix_rows . ]
    (51) matrix_rows -> matrix_rows . ; expression_list

    ]               shift and go to state 86
    ;               shift and go to state 87


state 59

    (52) matrix_rows -> expression_list .
    (47) expression_list -> expression_list . , expression

    ]               reduce using rule 52 (matrix_rows -> expression_list .)
    ;               reduce using rule 52 (matrix_rows -> expression_list .)
    ,               shift and go to state 63


state 60

    (53) expression -> EYE ( . expression )
    (54) expression -> EYE ( . expression , expression )
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 88
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 61

    (55) expression -> ZEROS ( . expression )
    (56) expression -> ZEROS ( . expression , expression )
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 89
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 62

    (57) expression -> ONES ( . expression )
    (58) expression -> ONES ( . expression , expression )
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 90
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 63

    (47) expression_list -> expression_list , . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 91
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 64

    (24) statement -> lvalue assignment_operator expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    ;               reduce using rule 24 (statement -> lvalue assignment_operator expression .)
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55


state 65

    (5) instruction -> IF ( condition ) . instruction
    (6) instruction -> IF ( condition ) . instruction ELSE instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . IF ( condition ) instruction
    (6) instruction -> . IF ( condition ) instruction ELSE instruction
    (7) instruction -> . FOR variable = range instruction
    (8) instruction -> . WHILE ( condition ) instruction
    (18) instruction -> . statement ;
    (19) statement -> . BREAK
    (20) statement -> . CONTINUE
    (21) statement -> . RETURN
    (22) statement -> . RETURN expression
    (23) statement -> . PRINT expression_list
    (24) statement -> . lvalue assignment_operator expression
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    {               shift and go to state 4
    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 15

    instruction                    shift and go to state 92
    variable                       shift and go to state 7
    statement                      shift and go to state 9
    lvalue                         shift and go to state 14

state 66

    (9) condition -> expression comparision_operator . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 93
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 67

    (10) comparision_operator -> EQ .

    -               reduce using rule 10 (comparision_operator -> EQ .)
    (               reduce using rule 10 (comparision_operator -> EQ .)
    INTNUM          reduce using rule 10 (comparision_operator -> EQ .)
    FLOATNUM        reduce using rule 10 (comparision_operator -> EQ .)
    STRING          reduce using rule 10 (comparision_operator -> EQ .)
    [               reduce using rule 10 (comparision_operator -> EQ .)
    EYE             reduce using rule 10 (comparision_operator -> EQ .)
    ZEROS           reduce using rule 10 (comparision_operator -> EQ .)
    ONES            reduce using rule 10 (comparision_operator -> EQ .)
    ID              reduce using rule 10 (comparision_operator -> EQ .)


state 68

    (11) comparision_operator -> NEQ .

    -               reduce using rule 11 (comparision_operator -> NEQ .)
    (               reduce using rule 11 (comparision_operator -> NEQ .)
    INTNUM          reduce using rule 11 (comparision_operator -> NEQ .)
    FLOATNUM        reduce using rule 11 (comparision_operator -> NEQ .)
    STRING          reduce using rule 11 (comparision_operator -> NEQ .)
    [               reduce using rule 11 (comparision_operator -> NEQ .)
    EYE             reduce using rule 11 (comparision_operator -> NEQ .)
    ZEROS           reduce using rule 11 (comparision_operator -> NEQ .)
    ONES            reduce using rule 11 (comparision_operator -> NEQ .)
    ID              reduce using rule 11 (comparision_operator -> NEQ .)


state 69

    (12) comparision_operator -> LTE .

    -               reduce using rule 12 (comparision_operator -> LTE .)
    (               reduce using rule 12 (comparision_operator -> LTE .)
    INTNUM          reduce using rule 12 (comparision_operator -> LTE .)
    FLOATNUM        reduce using rule 12 (comparision_operator -> LTE .)
    STRING          reduce using rule 12 (comparision_operator -> LTE .)
    [               reduce using rule 12 (comparision_operator -> LTE .)
    EYE             reduce using rule 12 (comparision_operator -> LTE .)
    ZEROS           reduce using rule 12 (comparision_operator -> LTE .)
    ONES            reduce using rule 12 (comparision_operator -> LTE .)
    ID              reduce using rule 12 (comparision_operator -> LTE .)


state 70

    (13) comparision_operator -> GTE .

    -               reduce using rule 13 (comparision_operator -> GTE .)
    (               reduce using rule 13 (comparision_operator -> GTE .)
    INTNUM          reduce using rule 13 (comparision_operator -> GTE .)
    FLOATNUM        reduce using rule 13 (comparision_operator -> GTE .)
    STRING          reduce using rule 13 (comparision_operator -> GTE .)
    [               reduce using rule 13 (comparision_operator -> GTE .)
    EYE             reduce using rule 13 (comparision_operator -> GTE .)
    ZEROS           reduce using rule 13 (comparision_operator -> GTE .)
    ONES            reduce using rule 13 (comparision_operator -> GTE .)
    ID              reduce using rule 13 (comparision_operator -> GTE .)


state 71

    (14) comparision_operator -> < .

    -               reduce using rule 14 (comparision_operator -> < .)
    (               reduce using rule 14 (comparision_operator -> < .)
    INTNUM          reduce using rule 14 (comparision_operator -> < .)
    FLOATNUM        reduce using rule 14 (comparision_operator -> < .)
    STRING          reduce using rule 14 (comparision_operator -> < .)
    [               reduce using rule 14 (comparision_operator -> < .)
    EYE             reduce using rule 14 (comparision_operator -> < .)
    ZEROS           reduce using rule 14 (comparision_operator -> < .)
    ONES            reduce using rule 14 (comparision_operator -> < .)
    ID              reduce using rule 14 (comparision_operator -> < .)


state 72

    (15) comparision_operator -> > .

    -               reduce using rule 15 (comparision_operator -> > .)
    (               reduce using rule 15 (comparision_operator -> > .)
    INTNUM          reduce using rule 15 (comparision_operator -> > .)
    FLOATNUM        reduce using rule 15 (comparision_operator -> > .)
    STRING          reduce using rule 15 (comparision_operator -> > .)
    [               reduce using rule 15 (comparision_operator -> > .)
    EYE             reduce using rule 15 (comparision_operator -> > .)
    ZEROS           reduce using rule 15 (comparision_operator -> > .)
    ONES            reduce using rule 15 (comparision_operator -> > .)
    ID              reduce using rule 15 (comparision_operator -> > .)


state 73

    (7) instruction -> FOR variable = range . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . IF ( condition ) instruction
    (6) instruction -> . IF ( condition ) instruction ELSE instruction
    (7) instruction -> . FOR variable = range instruction
    (8) instruction -> . WHILE ( condition ) instruction
    (18) instruction -> . statement ;
    (19) statement -> . BREAK
    (20) statement -> . CONTINUE
    (21) statement -> . RETURN
    (22) statement -> . RETURN expression
    (23) statement -> . PRINT expression_list
    (24) statement -> . lvalue assignment_operator expression
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    {               shift and go to state 4
    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 15

    variable                       shift and go to state 7
    instruction                    shift and go to state 94
    statement                      shift and go to state 9
    lvalue                         shift and go to state 14

state 74

    (17) range -> expression . : expression
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    :               shift and go to state 95
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55


state 75

    (26) lvalue -> variable [ expression , . expression ]
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    variable                       shift and go to state 7
    expression                     shift and go to state 96
    lvalue                         shift and go to state 25

state 76

    (8) instruction -> WHILE ( condition ) . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . IF ( condition ) instruction
    (6) instruction -> . IF ( condition ) instruction ELSE instruction
    (7) instruction -> . FOR variable = range instruction
    (8) instruction -> . WHILE ( condition ) instruction
    (18) instruction -> . statement ;
    (19) statement -> . BREAK
    (20) statement -> . CONTINUE
    (21) statement -> . RETURN
    (22) statement -> . RETURN expression
    (23) statement -> . PRINT expression_list
    (24) statement -> . lvalue assignment_operator expression
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    {               shift and go to state 4
    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 15

    instruction                    shift and go to state 97
    variable                       shift and go to state 7
    statement                      shift and go to state 9
    lvalue                         shift and go to state 14

state 77

    (32) expression -> expression + expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    +               reduce using rule 32 (expression -> expression + expression .)
    -               reduce using rule 32 (expression -> expression + expression .)
    DOTADD          reduce using rule 32 (expression -> expression + expression .)
    DOTSUB          reduce using rule 32 (expression -> expression + expression .)
    ;               reduce using rule 32 (expression -> expression + expression .)
    ,               reduce using rule 32 (expression -> expression + expression .)
    EQ              reduce using rule 32 (expression -> expression + expression .)
    NEQ             reduce using rule 32 (expression -> expression + expression .)
    LTE             reduce using rule 32 (expression -> expression + expression .)
    GTE             reduce using rule 32 (expression -> expression + expression .)
    <               reduce using rule 32 (expression -> expression + expression .)
    >               reduce using rule 32 (expression -> expression + expression .)
    )               reduce using rule 32 (expression -> expression + expression .)
    ]               reduce using rule 32 (expression -> expression + expression .)
    :               reduce using rule 32 (expression -> expression + expression .)
    {               reduce using rule 32 (expression -> expression + expression .)
    IF              reduce using rule 32 (expression -> expression + expression .)
    FOR             reduce using rule 32 (expression -> expression + expression .)
    WHILE           reduce using rule 32 (expression -> expression + expression .)
    BREAK           reduce using rule 32 (expression -> expression + expression .)
    CONTINUE        reduce using rule 32 (expression -> expression + expression .)
    RETURN          reduce using rule 32 (expression -> expression + expression .)
    PRINT           reduce using rule 32 (expression -> expression + expression .)
    ID              reduce using rule 32 (expression -> expression + expression .)
    *               shift and go to state 49
    /               shift and go to state 50
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55

  ! *               [ reduce using rule 32 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 32 (expression -> expression + expression .) ]
  ! DOTMUL          [ reduce using rule 32 (expression -> expression + expression .) ]
  ! DOTDIV          [ reduce using rule 32 (expression -> expression + expression .) ]
  ! '               [ reduce using rule 32 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 47 ]
  ! -               [ shift and go to state 48 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]


state 78

    (33) expression -> expression - expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    +               reduce using rule 33 (expression -> expression - expression .)
    -               reduce using rule 33 (expression -> expression - expression .)
    DOTADD          reduce using rule 33 (expression -> expression - expression .)
    DOTSUB          reduce using rule 33 (expression -> expression - expression .)
    ;               reduce using rule 33 (expression -> expression - expression .)
    ,               reduce using rule 33 (expression -> expression - expression .)
    EQ              reduce using rule 33 (expression -> expression - expression .)
    NEQ             reduce using rule 33 (expression -> expression - expression .)
    LTE             reduce using rule 33 (expression -> expression - expression .)
    GTE             reduce using rule 33 (expression -> expression - expression .)
    <               reduce using rule 33 (expression -> expression - expression .)
    >               reduce using rule 33 (expression -> expression - expression .)
    )               reduce using rule 33 (expression -> expression - expression .)
    ]               reduce using rule 33 (expression -> expression - expression .)
    :               reduce using rule 33 (expression -> expression - expression .)
    {               reduce using rule 33 (expression -> expression - expression .)
    IF              reduce using rule 33 (expression -> expression - expression .)
    FOR             reduce using rule 33 (expression -> expression - expression .)
    WHILE           reduce using rule 33 (expression -> expression - expression .)
    BREAK           reduce using rule 33 (expression -> expression - expression .)
    CONTINUE        reduce using rule 33 (expression -> expression - expression .)
    RETURN          reduce using rule 33 (expression -> expression - expression .)
    PRINT           reduce using rule 33 (expression -> expression - expression .)
    ID              reduce using rule 33 (expression -> expression - expression .)
    *               shift and go to state 49
    /               shift and go to state 50
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55

  ! *               [ reduce using rule 33 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 33 (expression -> expression - expression .) ]
  ! DOTMUL          [ reduce using rule 33 (expression -> expression - expression .) ]
  ! DOTDIV          [ reduce using rule 33 (expression -> expression - expression .) ]
  ! '               [ reduce using rule 33 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 47 ]
  ! -               [ shift and go to state 48 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]


state 79

    (34) expression -> expression * expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    +               reduce using rule 34 (expression -> expression * expression .)
    -               reduce using rule 34 (expression -> expression * expression .)
    *               reduce using rule 34 (expression -> expression * expression .)
    /               reduce using rule 34 (expression -> expression * expression .)
    DOTADD          reduce using rule 34 (expression -> expression * expression .)
    DOTSUB          reduce using rule 34 (expression -> expression * expression .)
    DOTMUL          reduce using rule 34 (expression -> expression * expression .)
    DOTDIV          reduce using rule 34 (expression -> expression * expression .)
    ;               reduce using rule 34 (expression -> expression * expression .)
    ,               reduce using rule 34 (expression -> expression * expression .)
    EQ              reduce using rule 34 (expression -> expression * expression .)
    NEQ             reduce using rule 34 (expression -> expression * expression .)
    LTE             reduce using rule 34 (expression -> expression * expression .)
    GTE             reduce using rule 34 (expression -> expression * expression .)
    <               reduce using rule 34 (expression -> expression * expression .)
    >               reduce using rule 34 (expression -> expression * expression .)
    )               reduce using rule 34 (expression -> expression * expression .)
    ]               reduce using rule 34 (expression -> expression * expression .)
    :               reduce using rule 34 (expression -> expression * expression .)
    {               reduce using rule 34 (expression -> expression * expression .)
    IF              reduce using rule 34 (expression -> expression * expression .)
    FOR             reduce using rule 34 (expression -> expression * expression .)
    WHILE           reduce using rule 34 (expression -> expression * expression .)
    BREAK           reduce using rule 34 (expression -> expression * expression .)
    CONTINUE        reduce using rule 34 (expression -> expression * expression .)
    RETURN          reduce using rule 34 (expression -> expression * expression .)
    PRINT           reduce using rule 34 (expression -> expression * expression .)
    ID              reduce using rule 34 (expression -> expression * expression .)
    '               shift and go to state 55

  ! '               [ reduce using rule 34 (expression -> expression * expression .) ]
  ! +               [ shift and go to state 47 ]
  ! -               [ shift and go to state 48 ]
  ! *               [ shift and go to state 49 ]
  ! /               [ shift and go to state 50 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! DOTMUL          [ shift and go to state 53 ]
  ! DOTDIV          [ shift and go to state 54 ]


state 80

    (35) expression -> expression / expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    +               reduce using rule 35 (expression -> expression / expression .)
    -               reduce using rule 35 (expression -> expression / expression .)
    *               reduce using rule 35 (expression -> expression / expression .)
    /               reduce using rule 35 (expression -> expression / expression .)
    DOTADD          reduce using rule 35 (expression -> expression / expression .)
    DOTSUB          reduce using rule 35 (expression -> expression / expression .)
    DOTMUL          reduce using rule 35 (expression -> expression / expression .)
    DOTDIV          reduce using rule 35 (expression -> expression / expression .)
    ;               reduce using rule 35 (expression -> expression / expression .)
    ,               reduce using rule 35 (expression -> expression / expression .)
    EQ              reduce using rule 35 (expression -> expression / expression .)
    NEQ             reduce using rule 35 (expression -> expression / expression .)
    LTE             reduce using rule 35 (expression -> expression / expression .)
    GTE             reduce using rule 35 (expression -> expression / expression .)
    <               reduce using rule 35 (expression -> expression / expression .)
    >               reduce using rule 35 (expression -> expression / expression .)
    )               reduce using rule 35 (expression -> expression / expression .)
    ]               reduce using rule 35 (expression -> expression / expression .)
    :               reduce using rule 35 (expression -> expression / expression .)
    {               reduce using rule 35 (expression -> expression / expression .)
    IF              reduce using rule 35 (expression -> expression / expression .)
    FOR             reduce using rule 35 (expression -> expression / expression .)
    WHILE           reduce using rule 35 (expression -> expression / expression .)
    BREAK           reduce using rule 35 (expression -> expression / expression .)
    CONTINUE        reduce using rule 35 (expression -> expression / expression .)
    RETURN          reduce using rule 35 (expression -> expression / expression .)
    PRINT           reduce using rule 35 (expression -> expression / expression .)
    ID              reduce using rule 35 (expression -> expression / expression .)
    '               shift and go to state 55

  ! '               [ reduce using rule 35 (expression -> expression / expression .) ]
  ! +               [ shift and go to state 47 ]
  ! -               [ shift and go to state 48 ]
  ! *               [ shift and go to state 49 ]
  ! /               [ shift and go to state 50 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! DOTMUL          [ shift and go to state 53 ]
  ! DOTDIV          [ shift and go to state 54 ]


state 81

    (36) expression -> expression DOTADD expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    +               reduce using rule 36 (expression -> expression DOTADD expression .)
    -               reduce using rule 36 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 36 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 36 (expression -> expression DOTADD expression .)
    ;               reduce using rule 36 (expression -> expression DOTADD expression .)
    ,               reduce using rule 36 (expression -> expression DOTADD expression .)
    EQ              reduce using rule 36 (expression -> expression DOTADD expression .)
    NEQ             reduce using rule 36 (expression -> expression DOTADD expression .)
    LTE             reduce using rule 36 (expression -> expression DOTADD expression .)
    GTE             reduce using rule 36 (expression -> expression DOTADD expression .)
    <               reduce using rule 36 (expression -> expression DOTADD expression .)
    >               reduce using rule 36 (expression -> expression DOTADD expression .)
    )               reduce using rule 36 (expression -> expression DOTADD expression .)
    ]               reduce using rule 36 (expression -> expression DOTADD expression .)
    :               reduce using rule 36 (expression -> expression DOTADD expression .)
    {               reduce using rule 36 (expression -> expression DOTADD expression .)
    IF              reduce using rule 36 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 36 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 36 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 36 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 36 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 36 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 36 (expression -> expression DOTADD expression .)
    ID              reduce using rule 36 (expression -> expression DOTADD expression .)
    *               shift and go to state 49
    /               shift and go to state 50
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55

  ! *               [ reduce using rule 36 (expression -> expression DOTADD expression .) ]
  ! /               [ reduce using rule 36 (expression -> expression DOTADD expression .) ]
  ! DOTMUL          [ reduce using rule 36 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 36 (expression -> expression DOTADD expression .) ]
  ! '               [ reduce using rule 36 (expression -> expression DOTADD expression .) ]
  ! +               [ shift and go to state 47 ]
  ! -               [ shift and go to state 48 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]


state 82

    (37) expression -> expression DOTSUB expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    +               reduce using rule 37 (expression -> expression DOTSUB expression .)
    -               reduce using rule 37 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 37 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 37 (expression -> expression DOTSUB expression .)
    ;               reduce using rule 37 (expression -> expression DOTSUB expression .)
    ,               reduce using rule 37 (expression -> expression DOTSUB expression .)
    EQ              reduce using rule 37 (expression -> expression DOTSUB expression .)
    NEQ             reduce using rule 37 (expression -> expression DOTSUB expression .)
    LTE             reduce using rule 37 (expression -> expression DOTSUB expression .)
    GTE             reduce using rule 37 (expression -> expression DOTSUB expression .)
    <               reduce using rule 37 (expression -> expression DOTSUB expression .)
    >               reduce using rule 37 (expression -> expression DOTSUB expression .)
    )               reduce using rule 37 (expression -> expression DOTSUB expression .)
    ]               reduce using rule 37 (expression -> expression DOTSUB expression .)
    :               reduce using rule 37 (expression -> expression DOTSUB expression .)
    {               reduce using rule 37 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 37 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 37 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 37 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 37 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 37 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 37 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 37 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 37 (expression -> expression DOTSUB expression .)
    *               shift and go to state 49
    /               shift and go to state 50
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55

  ! *               [ reduce using rule 37 (expression -> expression DOTSUB expression .) ]
  ! /               [ reduce using rule 37 (expression -> expression DOTSUB expression .) ]
  ! DOTMUL          [ reduce using rule 37 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 37 (expression -> expression DOTSUB expression .) ]
  ! '               [ reduce using rule 37 (expression -> expression DOTSUB expression .) ]
  ! +               [ shift and go to state 47 ]
  ! -               [ shift and go to state 48 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]


state 83

    (38) expression -> expression DOTMUL expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    +               reduce using rule 38 (expression -> expression DOTMUL expression .)
    -               reduce using rule 38 (expression -> expression DOTMUL expression .)
    *               reduce using rule 38 (expression -> expression DOTMUL expression .)
    /               reduce using rule 38 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 38 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 38 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 38 (expression -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 38 (expression -> expression DOTMUL expression .)
    ;               reduce using rule 38 (expression -> expression DOTMUL expression .)
    ,               reduce using rule 38 (expression -> expression DOTMUL expression .)
    EQ              reduce using rule 38 (expression -> expression DOTMUL expression .)
    NEQ             reduce using rule 38 (expression -> expression DOTMUL expression .)
    LTE             reduce using rule 38 (expression -> expression DOTMUL expression .)
    GTE             reduce using rule 38 (expression -> expression DOTMUL expression .)
    <               reduce using rule 38 (expression -> expression DOTMUL expression .)
    >               reduce using rule 38 (expression -> expression DOTMUL expression .)
    )               reduce using rule 38 (expression -> expression DOTMUL expression .)
    ]               reduce using rule 38 (expression -> expression DOTMUL expression .)
    :               reduce using rule 38 (expression -> expression DOTMUL expression .)
    {               reduce using rule 38 (expression -> expression DOTMUL expression .)
    IF              reduce using rule 38 (expression -> expression DOTMUL expression .)
    FOR             reduce using rule 38 (expression -> expression DOTMUL expression .)
    WHILE           reduce using rule 38 (expression -> expression DOTMUL expression .)
    BREAK           reduce using rule 38 (expression -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 38 (expression -> expression DOTMUL expression .)
    RETURN          reduce using rule 38 (expression -> expression DOTMUL expression .)
    PRINT           reduce using rule 38 (expression -> expression DOTMUL expression .)
    ID              reduce using rule 38 (expression -> expression DOTMUL expression .)
    '               shift and go to state 55

  ! '               [ reduce using rule 38 (expression -> expression DOTMUL expression .) ]
  ! +               [ shift and go to state 47 ]
  ! -               [ shift and go to state 48 ]
  ! *               [ shift and go to state 49 ]
  ! /               [ shift and go to state 50 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! DOTMUL          [ shift and go to state 53 ]
  ! DOTDIV          [ shift and go to state 54 ]


state 84

    (39) expression -> expression DOTDIV expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    +               reduce using rule 39 (expression -> expression DOTDIV expression .)
    -               reduce using rule 39 (expression -> expression DOTDIV expression .)
    *               reduce using rule 39 (expression -> expression DOTDIV expression .)
    /               reduce using rule 39 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 39 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 39 (expression -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 39 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 39 (expression -> expression DOTDIV expression .)
    ;               reduce using rule 39 (expression -> expression DOTDIV expression .)
    ,               reduce using rule 39 (expression -> expression DOTDIV expression .)
    EQ              reduce using rule 39 (expression -> expression DOTDIV expression .)
    NEQ             reduce using rule 39 (expression -> expression DOTDIV expression .)
    LTE             reduce using rule 39 (expression -> expression DOTDIV expression .)
    GTE             reduce using rule 39 (expression -> expression DOTDIV expression .)
    <               reduce using rule 39 (expression -> expression DOTDIV expression .)
    >               reduce using rule 39 (expression -> expression DOTDIV expression .)
    )               reduce using rule 39 (expression -> expression DOTDIV expression .)
    ]               reduce using rule 39 (expression -> expression DOTDIV expression .)
    :               reduce using rule 39 (expression -> expression DOTDIV expression .)
    {               reduce using rule 39 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 39 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 39 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 39 (expression -> expression DOTDIV expression .)
    BREAK           reduce using rule 39 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 39 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 39 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 39 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 39 (expression -> expression DOTDIV expression .)
    '               shift and go to state 55

  ! '               [ reduce using rule 39 (expression -> expression DOTDIV expression .) ]
  ! +               [ shift and go to state 47 ]
  ! -               [ shift and go to state 48 ]
  ! *               [ shift and go to state 49 ]
  ! /               [ shift and go to state 50 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! DOTMUL          [ shift and go to state 53 ]
  ! DOTDIV          [ shift and go to state 54 ]


state 85

    (42) expression -> ( expression ) .

    +               reduce using rule 42 (expression -> ( expression ) .)
    -               reduce using rule 42 (expression -> ( expression ) .)
    *               reduce using rule 42 (expression -> ( expression ) .)
    /               reduce using rule 42 (expression -> ( expression ) .)
    DOTADD          reduce using rule 42 (expression -> ( expression ) .)
    DOTSUB          reduce using rule 42 (expression -> ( expression ) .)
    DOTMUL          reduce using rule 42 (expression -> ( expression ) .)
    DOTDIV          reduce using rule 42 (expression -> ( expression ) .)
    '               reduce using rule 42 (expression -> ( expression ) .)
    ;               reduce using rule 42 (expression -> ( expression ) .)
    ,               reduce using rule 42 (expression -> ( expression ) .)
    EQ              reduce using rule 42 (expression -> ( expression ) .)
    NEQ             reduce using rule 42 (expression -> ( expression ) .)
    LTE             reduce using rule 42 (expression -> ( expression ) .)
    GTE             reduce using rule 42 (expression -> ( expression ) .)
    <               reduce using rule 42 (expression -> ( expression ) .)
    >               reduce using rule 42 (expression -> ( expression ) .)
    )               reduce using rule 42 (expression -> ( expression ) .)
    ]               reduce using rule 42 (expression -> ( expression ) .)
    :               reduce using rule 42 (expression -> ( expression ) .)
    {               reduce using rule 42 (expression -> ( expression ) .)
    IF              reduce using rule 42 (expression -> ( expression ) .)
    FOR             reduce using rule 42 (expression -> ( expression ) .)
    WHILE           reduce using rule 42 (expression -> ( expression ) .)
    BREAK           reduce using rule 42 (expression -> ( expression ) .)
    CONTINUE        reduce using rule 42 (expression -> ( expression ) .)
    RETURN          reduce using rule 42 (expression -> ( expression ) .)
    PRINT           reduce using rule 42 (expression -> ( expression ) .)
    ID              reduce using rule 42 (expression -> ( expression ) .)


state 86

    (50) expression -> [ matrix_rows ] .

    +               reduce using rule 50 (expression -> [ matrix_rows ] .)
    -               reduce using rule 50 (expression -> [ matrix_rows ] .)
    *               reduce using rule 50 (expression -> [ matrix_rows ] .)
    /               reduce using rule 50 (expression -> [ matrix_rows ] .)
    DOTADD          reduce using rule 50 (expression -> [ matrix_rows ] .)
    DOTSUB          reduce using rule 50 (expression -> [ matrix_rows ] .)
    DOTMUL          reduce using rule 50 (expression -> [ matrix_rows ] .)
    DOTDIV          reduce using rule 50 (expression -> [ matrix_rows ] .)
    '               reduce using rule 50 (expression -> [ matrix_rows ] .)
    ;               reduce using rule 50 (expression -> [ matrix_rows ] .)
    ,               reduce using rule 50 (expression -> [ matrix_rows ] .)
    EQ              reduce using rule 50 (expression -> [ matrix_rows ] .)
    NEQ             reduce using rule 50 (expression -> [ matrix_rows ] .)
    LTE             reduce using rule 50 (expression -> [ matrix_rows ] .)
    GTE             reduce using rule 50 (expression -> [ matrix_rows ] .)
    <               reduce using rule 50 (expression -> [ matrix_rows ] .)
    >               reduce using rule 50 (expression -> [ matrix_rows ] .)
    )               reduce using rule 50 (expression -> [ matrix_rows ] .)
    ]               reduce using rule 50 (expression -> [ matrix_rows ] .)
    :               reduce using rule 50 (expression -> [ matrix_rows ] .)
    {               reduce using rule 50 (expression -> [ matrix_rows ] .)
    IF              reduce using rule 50 (expression -> [ matrix_rows ] .)
    FOR             reduce using rule 50 (expression -> [ matrix_rows ] .)
    WHILE           reduce using rule 50 (expression -> [ matrix_rows ] .)
    BREAK           reduce using rule 50 (expression -> [ matrix_rows ] .)
    CONTINUE        reduce using rule 50 (expression -> [ matrix_rows ] .)
    RETURN          reduce using rule 50 (expression -> [ matrix_rows ] .)
    PRINT           reduce using rule 50 (expression -> [ matrix_rows ] .)
    ID              reduce using rule 50 (expression -> [ matrix_rows ] .)


state 87

    (51) matrix_rows -> matrix_rows ; . expression_list
    (47) expression_list -> . expression_list , expression
    (48) expression_list -> . expression
    (49) expression_list -> .
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    ,               reduce using rule 49 (expression_list -> .)
    ]               reduce using rule 49 (expression_list -> .)
    ;               reduce using rule 49 (expression_list -> .)
    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression_list                shift and go to state 98
    expression                     shift and go to state 34
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 88

    (53) expression -> EYE ( expression . )
    (54) expression -> EYE ( expression . , expression )
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    )               shift and go to state 99
    ,               shift and go to state 100
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55


state 89

    (55) expression -> ZEROS ( expression . )
    (56) expression -> ZEROS ( expression . , expression )
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    )               shift and go to state 101
    ,               shift and go to state 102
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55


state 90

    (57) expression -> ONES ( expression . )
    (58) expression -> ONES ( expression . , expression )
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    )               shift and go to state 103
    ,               shift and go to state 104
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55


state 91

    (47) expression_list -> expression_list , expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    ,               reduce using rule 47 (expression_list -> expression_list , expression .)
    ;               reduce using rule 47 (expression_list -> expression_list , expression .)
    ]               reduce using rule 47 (expression_list -> expression_list , expression .)
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55


state 92

    (5) instruction -> IF ( condition ) instruction .
    (6) instruction -> IF ( condition ) instruction . ELSE instruction

    {               reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    IF              reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    FOR             reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    WHILE           reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    BREAK           reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    CONTINUE        reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    RETURN          reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    PRINT           reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    ID              reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    $end            reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    }               reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    ELSE            shift and go to state 105

  ! ELSE            [ reduce using rule 5 (instruction -> IF ( condition ) instruction .) ]


state 93

    (9) condition -> expression comparision_operator expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    )               reduce using rule 9 (condition -> expression comparision_operator expression .)
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55


state 94

    (7) instruction -> FOR variable = range instruction .

    {               reduce using rule 7 (instruction -> FOR variable = range instruction .)
    IF              reduce using rule 7 (instruction -> FOR variable = range instruction .)
    FOR             reduce using rule 7 (instruction -> FOR variable = range instruction .)
    WHILE           reduce using rule 7 (instruction -> FOR variable = range instruction .)
    BREAK           reduce using rule 7 (instruction -> FOR variable = range instruction .)
    CONTINUE        reduce using rule 7 (instruction -> FOR variable = range instruction .)
    RETURN          reduce using rule 7 (instruction -> FOR variable = range instruction .)
    PRINT           reduce using rule 7 (instruction -> FOR variable = range instruction .)
    ID              reduce using rule 7 (instruction -> FOR variable = range instruction .)
    $end            reduce using rule 7 (instruction -> FOR variable = range instruction .)
    }               reduce using rule 7 (instruction -> FOR variable = range instruction .)
    ELSE            reduce using rule 7 (instruction -> FOR variable = range instruction .)


state 95

    (17) range -> expression : . expression
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 106
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 96

    (26) lvalue -> variable [ expression , expression . ]
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    ]               shift and go to state 107
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55


state 97

    (8) instruction -> WHILE ( condition ) instruction .

    {               reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    IF              reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    FOR             reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    WHILE           reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    BREAK           reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    CONTINUE        reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    RETURN          reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    PRINT           reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    ID              reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    $end            reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    }               reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    ELSE            reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)


state 98

    (51) matrix_rows -> matrix_rows ; expression_list .
    (47) expression_list -> expression_list . , expression

    ]               reduce using rule 51 (matrix_rows -> matrix_rows ; expression_list .)
    ;               reduce using rule 51 (matrix_rows -> matrix_rows ; expression_list .)
    ,               shift and go to state 63


state 99

    (53) expression -> EYE ( expression ) .

    +               reduce using rule 53 (expression -> EYE ( expression ) .)
    -               reduce using rule 53 (expression -> EYE ( expression ) .)
    *               reduce using rule 53 (expression -> EYE ( expression ) .)
    /               reduce using rule 53 (expression -> EYE ( expression ) .)
    DOTADD          reduce using rule 53 (expression -> EYE ( expression ) .)
    DOTSUB          reduce using rule 53 (expression -> EYE ( expression ) .)
    DOTMUL          reduce using rule 53 (expression -> EYE ( expression ) .)
    DOTDIV          reduce using rule 53 (expression -> EYE ( expression ) .)
    '               reduce using rule 53 (expression -> EYE ( expression ) .)
    ;               reduce using rule 53 (expression -> EYE ( expression ) .)
    ,               reduce using rule 53 (expression -> EYE ( expression ) .)
    EQ              reduce using rule 53 (expression -> EYE ( expression ) .)
    NEQ             reduce using rule 53 (expression -> EYE ( expression ) .)
    LTE             reduce using rule 53 (expression -> EYE ( expression ) .)
    GTE             reduce using rule 53 (expression -> EYE ( expression ) .)
    <               reduce using rule 53 (expression -> EYE ( expression ) .)
    >               reduce using rule 53 (expression -> EYE ( expression ) .)
    )               reduce using rule 53 (expression -> EYE ( expression ) .)
    ]               reduce using rule 53 (expression -> EYE ( expression ) .)
    :               reduce using rule 53 (expression -> EYE ( expression ) .)
    {               reduce using rule 53 (expression -> EYE ( expression ) .)
    IF              reduce using rule 53 (expression -> EYE ( expression ) .)
    FOR             reduce using rule 53 (expression -> EYE ( expression ) .)
    WHILE           reduce using rule 53 (expression -> EYE ( expression ) .)
    BREAK           reduce using rule 53 (expression -> EYE ( expression ) .)
    CONTINUE        reduce using rule 53 (expression -> EYE ( expression ) .)
    RETURN          reduce using rule 53 (expression -> EYE ( expression ) .)
    PRINT           reduce using rule 53 (expression -> EYE ( expression ) .)
    ID              reduce using rule 53 (expression -> EYE ( expression ) .)


state 100

    (54) expression -> EYE ( expression , . expression )
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 108
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 101

    (55) expression -> ZEROS ( expression ) .

    +               reduce using rule 55 (expression -> ZEROS ( expression ) .)
    -               reduce using rule 55 (expression -> ZEROS ( expression ) .)
    *               reduce using rule 55 (expression -> ZEROS ( expression ) .)
    /               reduce using rule 55 (expression -> ZEROS ( expression ) .)
    DOTADD          reduce using rule 55 (expression -> ZEROS ( expression ) .)
    DOTSUB          reduce using rule 55 (expression -> ZEROS ( expression ) .)
    DOTMUL          reduce using rule 55 (expression -> ZEROS ( expression ) .)
    DOTDIV          reduce using rule 55 (expression -> ZEROS ( expression ) .)
    '               reduce using rule 55 (expression -> ZEROS ( expression ) .)
    ;               reduce using rule 55 (expression -> ZEROS ( expression ) .)
    ,               reduce using rule 55 (expression -> ZEROS ( expression ) .)
    EQ              reduce using rule 55 (expression -> ZEROS ( expression ) .)
    NEQ             reduce using rule 55 (expression -> ZEROS ( expression ) .)
    LTE             reduce using rule 55 (expression -> ZEROS ( expression ) .)
    GTE             reduce using rule 55 (expression -> ZEROS ( expression ) .)
    <               reduce using rule 55 (expression -> ZEROS ( expression ) .)
    >               reduce using rule 55 (expression -> ZEROS ( expression ) .)
    )               reduce using rule 55 (expression -> ZEROS ( expression ) .)
    ]               reduce using rule 55 (expression -> ZEROS ( expression ) .)
    :               reduce using rule 55 (expression -> ZEROS ( expression ) .)
    {               reduce using rule 55 (expression -> ZEROS ( expression ) .)
    IF              reduce using rule 55 (expression -> ZEROS ( expression ) .)
    FOR             reduce using rule 55 (expression -> ZEROS ( expression ) .)
    WHILE           reduce using rule 55 (expression -> ZEROS ( expression ) .)
    BREAK           reduce using rule 55 (expression -> ZEROS ( expression ) .)
    CONTINUE        reduce using rule 55 (expression -> ZEROS ( expression ) .)
    RETURN          reduce using rule 55 (expression -> ZEROS ( expression ) .)
    PRINT           reduce using rule 55 (expression -> ZEROS ( expression ) .)
    ID              reduce using rule 55 (expression -> ZEROS ( expression ) .)


state 102

    (56) expression -> ZEROS ( expression , . expression )
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 109
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 103

    (57) expression -> ONES ( expression ) .

    +               reduce using rule 57 (expression -> ONES ( expression ) .)
    -               reduce using rule 57 (expression -> ONES ( expression ) .)
    *               reduce using rule 57 (expression -> ONES ( expression ) .)
    /               reduce using rule 57 (expression -> ONES ( expression ) .)
    DOTADD          reduce using rule 57 (expression -> ONES ( expression ) .)
    DOTSUB          reduce using rule 57 (expression -> ONES ( expression ) .)
    DOTMUL          reduce using rule 57 (expression -> ONES ( expression ) .)
    DOTDIV          reduce using rule 57 (expression -> ONES ( expression ) .)
    '               reduce using rule 57 (expression -> ONES ( expression ) .)
    ;               reduce using rule 57 (expression -> ONES ( expression ) .)
    ,               reduce using rule 57 (expression -> ONES ( expression ) .)
    EQ              reduce using rule 57 (expression -> ONES ( expression ) .)
    NEQ             reduce using rule 57 (expression -> ONES ( expression ) .)
    LTE             reduce using rule 57 (expression -> ONES ( expression ) .)
    GTE             reduce using rule 57 (expression -> ONES ( expression ) .)
    <               reduce using rule 57 (expression -> ONES ( expression ) .)
    >               reduce using rule 57 (expression -> ONES ( expression ) .)
    )               reduce using rule 57 (expression -> ONES ( expression ) .)
    ]               reduce using rule 57 (expression -> ONES ( expression ) .)
    :               reduce using rule 57 (expression -> ONES ( expression ) .)
    {               reduce using rule 57 (expression -> ONES ( expression ) .)
    IF              reduce using rule 57 (expression -> ONES ( expression ) .)
    FOR             reduce using rule 57 (expression -> ONES ( expression ) .)
    WHILE           reduce using rule 57 (expression -> ONES ( expression ) .)
    BREAK           reduce using rule 57 (expression -> ONES ( expression ) .)
    CONTINUE        reduce using rule 57 (expression -> ONES ( expression ) .)
    RETURN          reduce using rule 57 (expression -> ONES ( expression ) .)
    PRINT           reduce using rule 57 (expression -> ONES ( expression ) .)
    ID              reduce using rule 57 (expression -> ONES ( expression ) .)


state 104

    (58) expression -> ONES ( expression , . expression )
    (32) expression -> . expression + expression
    (33) expression -> . expression - expression
    (34) expression -> . expression * expression
    (35) expression -> . expression / expression
    (36) expression -> . expression DOTADD expression
    (37) expression -> . expression DOTSUB expression
    (38) expression -> . expression DOTMUL expression
    (39) expression -> . expression DOTDIV expression
    (40) expression -> . - expression
    (41) expression -> . expression '
    (42) expression -> . ( expression )
    (43) expression -> . lvalue
    (44) expression -> . INTNUM
    (45) expression -> . FLOATNUM
    (46) expression -> . STRING
    (50) expression -> . [ matrix_rows ]
    (53) expression -> . EYE ( expression )
    (54) expression -> . EYE ( expression , expression )
    (55) expression -> . ZEROS ( expression )
    (56) expression -> . ZEROS ( expression , expression )
    (57) expression -> . ONES ( expression )
    (58) expression -> . ONES ( expression , expression )
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 26
    FLOATNUM        shift and go to state 27
    STRING          shift and go to state 28
    [               shift and go to state 29
    EYE             shift and go to state 30
    ZEROS           shift and go to state 31
    ONES            shift and go to state 32
    ID              shift and go to state 15

    expression                     shift and go to state 110
    lvalue                         shift and go to state 25
    variable                       shift and go to state 7

state 105

    (6) instruction -> IF ( condition ) instruction ELSE . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . IF ( condition ) instruction
    (6) instruction -> . IF ( condition ) instruction ELSE instruction
    (7) instruction -> . FOR variable = range instruction
    (8) instruction -> . WHILE ( condition ) instruction
    (18) instruction -> . statement ;
    (19) statement -> . BREAK
    (20) statement -> . CONTINUE
    (21) statement -> . RETURN
    (22) statement -> . RETURN expression
    (23) statement -> . PRINT expression_list
    (24) statement -> . lvalue assignment_operator expression
    (25) lvalue -> . variable
    (26) lvalue -> . variable [ expression , expression ]
    (16) variable -> . ID

    {               shift and go to state 4
    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 15

    instruction                    shift and go to state 111
    variable                       shift and go to state 7
    statement                      shift and go to state 9
    lvalue                         shift and go to state 14

state 106

    (17) range -> expression : expression .
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    {               reduce using rule 17 (range -> expression : expression .)
    IF              reduce using rule 17 (range -> expression : expression .)
    FOR             reduce using rule 17 (range -> expression : expression .)
    WHILE           reduce using rule 17 (range -> expression : expression .)
    BREAK           reduce using rule 17 (range -> expression : expression .)
    CONTINUE        reduce using rule 17 (range -> expression : expression .)
    RETURN          reduce using rule 17 (range -> expression : expression .)
    PRINT           reduce using rule 17 (range -> expression : expression .)
    ID              reduce using rule 17 (range -> expression : expression .)
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55


state 107

    (26) lvalue -> variable [ expression , expression ] .

    =               reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    ADDASSIGN       reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    SUBASSIGN       reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    MULASSIGN       reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    DIVASSIGN       reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    +               reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    -               reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    *               reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    /               reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    DOTADD          reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    DOTSUB          reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    DOTMUL          reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    DOTDIV          reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    '               reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    ;               reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    ,               reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    EQ              reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    NEQ             reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    LTE             reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    GTE             reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    <               reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    >               reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    )               reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    ]               reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    :               reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    {               reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    IF              reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    FOR             reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    WHILE           reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    BREAK           reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    CONTINUE        reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    RETURN          reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    PRINT           reduce using rule 26 (lvalue -> variable [ expression , expression ] .)
    ID              reduce using rule 26 (lvalue -> variable [ expression , expression ] .)


state 108

    (54) expression -> EYE ( expression , expression . )
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    )               shift and go to state 112
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55


state 109

    (56) expression -> ZEROS ( expression , expression . )
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    )               shift and go to state 113
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55


state 110

    (58) expression -> ONES ( expression , expression . )
    (32) expression -> expression . + expression
    (33) expression -> expression . - expression
    (34) expression -> expression . * expression
    (35) expression -> expression . / expression
    (36) expression -> expression . DOTADD expression
    (37) expression -> expression . DOTSUB expression
    (38) expression -> expression . DOTMUL expression
    (39) expression -> expression . DOTDIV expression
    (41) expression -> expression . '

    )               shift and go to state 114
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55


state 111

    (6) instruction -> IF ( condition ) instruction ELSE instruction .

    {               reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    IF              reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    FOR             reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    WHILE           reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    BREAK           reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    CONTINUE        reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    RETURN          reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    PRINT           reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    ID              reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    $end            reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    }               reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    ELSE            reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)


state 112

    (54) expression -> EYE ( expression , expression ) .

    +               reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    -               reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    *               reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    /               reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    DOTADD          reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    DOTSUB          reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    DOTMUL          reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    DOTDIV          reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    '               reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    ;               reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    ,               reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    EQ              reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    NEQ             reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    LTE             reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    GTE             reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    <               reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    >               reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    )               reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    ]               reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    :               reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    {               reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    IF              reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    FOR             reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    WHILE           reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    BREAK           reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    CONTINUE        reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    RETURN          reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    PRINT           reduce using rule 54 (expression -> EYE ( expression , expression ) .)
    ID              reduce using rule 54 (expression -> EYE ( expression , expression ) .)


state 113

    (56) expression -> ZEROS ( expression , expression ) .

    +               reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    -               reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    *               reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    /               reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    DOTADD          reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    DOTSUB          reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    DOTMUL          reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    DOTDIV          reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    '               reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    ;               reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    ,               reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    EQ              reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    NEQ             reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    LTE             reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    GTE             reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    <               reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    >               reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    )               reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    ]               reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    :               reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    {               reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    IF              reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    FOR             reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    WHILE           reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    BREAK           reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    CONTINUE        reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    RETURN          reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    PRINT           reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)
    ID              reduce using rule 56 (expression -> ZEROS ( expression , expression ) .)


state 114

    (58) expression -> ONES ( expression , expression ) .

    +               reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    -               reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    *               reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    /               reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    DOTADD          reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    DOTSUB          reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    DOTMUL          reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    DOTDIV          reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    '               reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    ;               reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    ,               reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    EQ              reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    NEQ             reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    LTE             reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    GTE             reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    <               reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    >               reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    )               reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    ]               reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    :               reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    {               reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    IF              reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    FOR             reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    WHILE           reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    BREAK           reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    CONTINUE        reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    RETURN          reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    PRINT           reduce using rule 58 (expression -> ONES ( expression , expression ) .)
    ID              reduce using rule 58 (expression -> ONES ( expression , expression ) .)

