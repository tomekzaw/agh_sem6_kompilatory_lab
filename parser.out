Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions
Rule 2     instructions -> instructions instruction
Rule 3     instructions -> <empty>
Rule 4     instruction -> { instructions }
Rule 5     instruction -> IF ( condition ) instruction
Rule 6     instruction -> IF ( condition ) instruction ELSE instruction
Rule 7     instruction -> FOR variable = range instruction
Rule 8     instruction -> WHILE ( condition ) instruction
Rule 9     condition -> expression EQ expression
Rule 10    condition -> expression NEQ expression
Rule 11    condition -> expression LTE expression
Rule 12    condition -> expression GTE expression
Rule 13    condition -> expression < expression
Rule 14    condition -> expression > expression
Rule 15    variable -> ID
Rule 16    range -> expression : expression
Rule 17    instruction -> statement ;
Rule 18    statement -> BREAK
Rule 19    statement -> CONTINUE
Rule 20    statement -> RETURN
Rule 21    statement -> RETURN expression
Rule 22    statement -> PRINT expression_list
Rule 23    statement -> lvalue = expression
Rule 24    statement -> lvalue ADDASSIGN expression
Rule 25    statement -> lvalue SUBASSIGN expression
Rule 26    statement -> lvalue MULASSIGN expression
Rule 27    statement -> lvalue DIVASSIGN expression
Rule 28    lvalue -> variable
Rule 29    lvalue -> variable [ expression_list ]
Rule 30    expression -> expression + expression
Rule 31    expression -> expression - expression
Rule 32    expression -> expression * expression
Rule 33    expression -> expression / expression
Rule 34    expression -> expression DOTADD expression
Rule 35    expression -> expression DOTSUB expression
Rule 36    expression -> expression DOTMUL expression
Rule 37    expression -> expression DOTDIV expression
Rule 38    expression -> - expression
Rule 39    expression -> expression '
Rule 40    expression -> ( expression )
Rule 41    expression -> lvalue
Rule 42    expression -> range
Rule 43    expression -> INTNUM
Rule 44    expression -> FLOATNUM
Rule 45    expression -> STRING
Rule 46    expression_list -> expression_list , expression
Rule 47    expression_list -> expression
Rule 48    expression_list -> <empty>
Rule 49    expression -> [ expression_list ]
Rule 50    expression -> EYE ( expression )
Rule 51    expression -> EYE ( expression , expression )
Rule 52    expression -> ZEROS ( expression )
Rule 53    expression -> ZEROS ( expression , expression )
Rule 54    expression -> ONES ( expression )
Rule 55    expression -> ONES ( expression , expression )

Terminals, with rules where they appear

'                    : 39
(                    : 5 6 8 40 50 51 52 53 54 55
)                    : 5 6 8 40 50 51 52 53 54 55
*                    : 32
+                    : 30
,                    : 46 51 53 55
-                    : 31 38
/                    : 33
:                    : 16
;                    : 17
<                    : 13
=                    : 7 23
>                    : 14
ADDASSIGN            : 24
BREAK                : 18
CONTINUE             : 19
DIVASSIGN            : 27
DOTADD               : 34
DOTDIV               : 37
DOTMUL               : 36
DOTSUB               : 35
ELSE                 : 6
EQ                   : 9
EYE                  : 50 51
FLOATNUM             : 44
FOR                  : 7
GTE                  : 12
ID                   : 15
IF                   : 5 6
INTNUM               : 43
LTE                  : 11
MULASSIGN            : 26
NEQ                  : 10
ONES                 : 54 55
PRINT                : 22
RETURN               : 20 21
STRING               : 45
SUBASSIGN            : 25
WHILE                : 8
ZEROS                : 52 53
[                    : 29 49
]                    : 29 49
error                : 
{                    : 4
}                    : 4

Nonterminals, with rules where they appear

condition            : 5 6 8
expression           : 9 9 10 10 11 11 12 12 13 13 14 14 16 16 21 23 24 25 26 27 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 39 40 46 47 50 51 51 52 53 53 54 55 55
expression_list      : 22 29 46 49
instruction          : 2 5 6 6 7 8
instructions         : 1 2 4
lvalue               : 23 24 25 26 27 41
program              : 0
range                : 7 42
statement            : 17
variable             : 7 28 29

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions
    (2) instructions -> . instructions instruction
    (3) instructions -> .

    {               reduce using rule 3 (instructions -> .)
    IF              reduce using rule 3 (instructions -> .)
    FOR             reduce using rule 3 (instructions -> .)
    WHILE           reduce using rule 3 (instructions -> .)
    BREAK           reduce using rule 3 (instructions -> .)
    CONTINUE        reduce using rule 3 (instructions -> .)
    RETURN          reduce using rule 3 (instructions -> .)
    PRINT           reduce using rule 3 (instructions -> .)
    ID              reduce using rule 3 (instructions -> .)
    $end            reduce using rule 3 (instructions -> .)

    program                        shift and go to state 1
    instructions                   shift and go to state 2

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions .
    (2) instructions -> instructions . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . IF ( condition ) instruction
    (6) instruction -> . IF ( condition ) instruction ELSE instruction
    (7) instruction -> . FOR variable = range instruction
    (8) instruction -> . WHILE ( condition ) instruction
    (17) instruction -> . statement ;
    (18) statement -> . BREAK
    (19) statement -> . CONTINUE
    (20) statement -> . RETURN
    (21) statement -> . RETURN expression
    (22) statement -> . PRINT expression_list
    (23) statement -> . lvalue = expression
    (24) statement -> . lvalue ADDASSIGN expression
    (25) statement -> . lvalue SUBASSIGN expression
    (26) statement -> . lvalue MULASSIGN expression
    (27) statement -> . lvalue DIVASSIGN expression
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    $end            reduce using rule 1 (program -> instructions .)
    {               shift and go to state 4
    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 15

    instruction                    shift and go to state 3
    variable                       shift and go to state 7
    statement                      shift and go to state 9
    lvalue                         shift and go to state 14

state 3

    (2) instructions -> instructions instruction .

    {               reduce using rule 2 (instructions -> instructions instruction .)
    IF              reduce using rule 2 (instructions -> instructions instruction .)
    FOR             reduce using rule 2 (instructions -> instructions instruction .)
    WHILE           reduce using rule 2 (instructions -> instructions instruction .)
    BREAK           reduce using rule 2 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 2 (instructions -> instructions instruction .)
    RETURN          reduce using rule 2 (instructions -> instructions instruction .)
    PRINT           reduce using rule 2 (instructions -> instructions instruction .)
    ID              reduce using rule 2 (instructions -> instructions instruction .)
    $end            reduce using rule 2 (instructions -> instructions instruction .)
    }               reduce using rule 2 (instructions -> instructions instruction .)


state 4

    (4) instruction -> { . instructions }
    (2) instructions -> . instructions instruction
    (3) instructions -> .

    }               reduce using rule 3 (instructions -> .)
    {               reduce using rule 3 (instructions -> .)
    IF              reduce using rule 3 (instructions -> .)
    FOR             reduce using rule 3 (instructions -> .)
    WHILE           reduce using rule 3 (instructions -> .)
    BREAK           reduce using rule 3 (instructions -> .)
    CONTINUE        reduce using rule 3 (instructions -> .)
    RETURN          reduce using rule 3 (instructions -> .)
    PRINT           reduce using rule 3 (instructions -> .)
    ID              reduce using rule 3 (instructions -> .)

    instructions                   shift and go to state 16

state 5

    (5) instruction -> IF . ( condition ) instruction
    (6) instruction -> IF . ( condition ) instruction ELSE instruction

    (               shift and go to state 17


state 6

    (7) instruction -> FOR . variable = range instruction
    (15) variable -> . ID

    ID              shift and go to state 15

    variable                       shift and go to state 18

state 7

    (28) lvalue -> variable .
    (29) lvalue -> variable . [ expression_list ]

    =               reduce using rule 28 (lvalue -> variable .)
    ADDASSIGN       reduce using rule 28 (lvalue -> variable .)
    SUBASSIGN       reduce using rule 28 (lvalue -> variable .)
    MULASSIGN       reduce using rule 28 (lvalue -> variable .)
    DIVASSIGN       reduce using rule 28 (lvalue -> variable .)
    +               reduce using rule 28 (lvalue -> variable .)
    -               reduce using rule 28 (lvalue -> variable .)
    *               reduce using rule 28 (lvalue -> variable .)
    /               reduce using rule 28 (lvalue -> variable .)
    DOTADD          reduce using rule 28 (lvalue -> variable .)
    DOTSUB          reduce using rule 28 (lvalue -> variable .)
    DOTMUL          reduce using rule 28 (lvalue -> variable .)
    DOTDIV          reduce using rule 28 (lvalue -> variable .)
    '               reduce using rule 28 (lvalue -> variable .)
    :               reduce using rule 28 (lvalue -> variable .)
    ;               reduce using rule 28 (lvalue -> variable .)
    ,               reduce using rule 28 (lvalue -> variable .)
    EQ              reduce using rule 28 (lvalue -> variable .)
    NEQ             reduce using rule 28 (lvalue -> variable .)
    LTE             reduce using rule 28 (lvalue -> variable .)
    GTE             reduce using rule 28 (lvalue -> variable .)
    <               reduce using rule 28 (lvalue -> variable .)
    >               reduce using rule 28 (lvalue -> variable .)
    ]               reduce using rule 28 (lvalue -> variable .)
    )               reduce using rule 28 (lvalue -> variable .)
    {               reduce using rule 28 (lvalue -> variable .)
    IF              reduce using rule 28 (lvalue -> variable .)
    FOR             reduce using rule 28 (lvalue -> variable .)
    WHILE           reduce using rule 28 (lvalue -> variable .)
    BREAK           reduce using rule 28 (lvalue -> variable .)
    CONTINUE        reduce using rule 28 (lvalue -> variable .)
    RETURN          reduce using rule 28 (lvalue -> variable .)
    PRINT           reduce using rule 28 (lvalue -> variable .)
    ID              reduce using rule 28 (lvalue -> variable .)
    [               shift and go to state 19


state 8

    (8) instruction -> WHILE . ( condition ) instruction

    (               shift and go to state 20


state 9

    (17) instruction -> statement . ;

    ;               shift and go to state 21


state 10

    (18) statement -> BREAK .

    ;               reduce using rule 18 (statement -> BREAK .)


state 11

    (19) statement -> CONTINUE .

    ;               reduce using rule 19 (statement -> CONTINUE .)


state 12

    (20) statement -> RETURN .
    (21) statement -> RETURN . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    ;               reduce using rule 20 (statement -> RETURN .)
    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 22
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 13

    (22) statement -> PRINT . expression_list
    (46) expression_list -> . expression_list , expression
    (47) expression_list -> . expression
    (48) expression_list -> .
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    ,               reduce using rule 48 (expression_list -> .)
    ;               reduce using rule 48 (expression_list -> .)
    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression_list                shift and go to state 34
    expression                     shift and go to state 35
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 14

    (23) statement -> lvalue . = expression
    (24) statement -> lvalue . ADDASSIGN expression
    (25) statement -> lvalue . SUBASSIGN expression
    (26) statement -> lvalue . MULASSIGN expression
    (27) statement -> lvalue . DIVASSIGN expression

    =               shift and go to state 36
    ADDASSIGN       shift and go to state 37
    SUBASSIGN       shift and go to state 38
    MULASSIGN       shift and go to state 39
    DIVASSIGN       shift and go to state 40


state 15

    (15) variable -> ID .

    [               reduce using rule 15 (variable -> ID .)
    =               reduce using rule 15 (variable -> ID .)
    ADDASSIGN       reduce using rule 15 (variable -> ID .)
    SUBASSIGN       reduce using rule 15 (variable -> ID .)
    MULASSIGN       reduce using rule 15 (variable -> ID .)
    DIVASSIGN       reduce using rule 15 (variable -> ID .)
    +               reduce using rule 15 (variable -> ID .)
    -               reduce using rule 15 (variable -> ID .)
    *               reduce using rule 15 (variable -> ID .)
    /               reduce using rule 15 (variable -> ID .)
    DOTADD          reduce using rule 15 (variable -> ID .)
    DOTSUB          reduce using rule 15 (variable -> ID .)
    DOTMUL          reduce using rule 15 (variable -> ID .)
    DOTDIV          reduce using rule 15 (variable -> ID .)
    '               reduce using rule 15 (variable -> ID .)
    :               reduce using rule 15 (variable -> ID .)
    ;               reduce using rule 15 (variable -> ID .)
    ,               reduce using rule 15 (variable -> ID .)
    EQ              reduce using rule 15 (variable -> ID .)
    NEQ             reduce using rule 15 (variable -> ID .)
    LTE             reduce using rule 15 (variable -> ID .)
    GTE             reduce using rule 15 (variable -> ID .)
    <               reduce using rule 15 (variable -> ID .)
    >               reduce using rule 15 (variable -> ID .)
    ]               reduce using rule 15 (variable -> ID .)
    )               reduce using rule 15 (variable -> ID .)
    {               reduce using rule 15 (variable -> ID .)
    IF              reduce using rule 15 (variable -> ID .)
    FOR             reduce using rule 15 (variable -> ID .)
    WHILE           reduce using rule 15 (variable -> ID .)
    BREAK           reduce using rule 15 (variable -> ID .)
    CONTINUE        reduce using rule 15 (variable -> ID .)
    RETURN          reduce using rule 15 (variable -> ID .)
    PRINT           reduce using rule 15 (variable -> ID .)
    ID              reduce using rule 15 (variable -> ID .)


state 16

    (4) instruction -> { instructions . }
    (2) instructions -> instructions . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . IF ( condition ) instruction
    (6) instruction -> . IF ( condition ) instruction ELSE instruction
    (7) instruction -> . FOR variable = range instruction
    (8) instruction -> . WHILE ( condition ) instruction
    (17) instruction -> . statement ;
    (18) statement -> . BREAK
    (19) statement -> . CONTINUE
    (20) statement -> . RETURN
    (21) statement -> . RETURN expression
    (22) statement -> . PRINT expression_list
    (23) statement -> . lvalue = expression
    (24) statement -> . lvalue ADDASSIGN expression
    (25) statement -> . lvalue SUBASSIGN expression
    (26) statement -> . lvalue MULASSIGN expression
    (27) statement -> . lvalue DIVASSIGN expression
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    }               shift and go to state 41
    {               shift and go to state 4
    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 15

    instruction                    shift and go to state 3
    variable                       shift and go to state 7
    statement                      shift and go to state 9
    lvalue                         shift and go to state 14

state 17

    (5) instruction -> IF ( . condition ) instruction
    (6) instruction -> IF ( . condition ) instruction ELSE instruction
    (9) condition -> . expression EQ expression
    (10) condition -> . expression NEQ expression
    (11) condition -> . expression LTE expression
    (12) condition -> . expression GTE expression
    (13) condition -> . expression < expression
    (14) condition -> . expression > expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    condition                      shift and go to state 42
    expression                     shift and go to state 43
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 18

    (7) instruction -> FOR variable . = range instruction

    =               shift and go to state 44


state 19

    (29) lvalue -> variable [ . expression_list ]
    (46) expression_list -> . expression_list , expression
    (47) expression_list -> . expression
    (48) expression_list -> .
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    ]               reduce using rule 48 (expression_list -> .)
    ,               reduce using rule 48 (expression_list -> .)
    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    variable                       shift and go to state 7
    expression_list                shift and go to state 45
    expression                     shift and go to state 35
    lvalue                         shift and go to state 25
    range                          shift and go to state 26

state 20

    (8) instruction -> WHILE ( . condition ) instruction
    (9) condition -> . expression EQ expression
    (10) condition -> . expression NEQ expression
    (11) condition -> . expression LTE expression
    (12) condition -> . expression GTE expression
    (13) condition -> . expression < expression
    (14) condition -> . expression > expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    condition                      shift and go to state 46
    expression                     shift and go to state 43
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 21

    (17) instruction -> statement ; .

    {               reduce using rule 17 (instruction -> statement ; .)
    IF              reduce using rule 17 (instruction -> statement ; .)
    FOR             reduce using rule 17 (instruction -> statement ; .)
    WHILE           reduce using rule 17 (instruction -> statement ; .)
    BREAK           reduce using rule 17 (instruction -> statement ; .)
    CONTINUE        reduce using rule 17 (instruction -> statement ; .)
    RETURN          reduce using rule 17 (instruction -> statement ; .)
    PRINT           reduce using rule 17 (instruction -> statement ; .)
    ID              reduce using rule 17 (instruction -> statement ; .)
    $end            reduce using rule 17 (instruction -> statement ; .)
    }               reduce using rule 17 (instruction -> statement ; .)
    ELSE            reduce using rule 17 (instruction -> statement ; .)


state 22

    (21) statement -> RETURN expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    ;               reduce using rule 21 (statement -> RETURN expression .)
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55
    :               shift and go to state 56


state 23

    (38) expression -> - . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 57
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 24

    (40) expression -> ( . expression )
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 58
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 25

    (41) expression -> lvalue .

    +               reduce using rule 41 (expression -> lvalue .)
    -               reduce using rule 41 (expression -> lvalue .)
    *               reduce using rule 41 (expression -> lvalue .)
    /               reduce using rule 41 (expression -> lvalue .)
    DOTADD          reduce using rule 41 (expression -> lvalue .)
    DOTSUB          reduce using rule 41 (expression -> lvalue .)
    DOTMUL          reduce using rule 41 (expression -> lvalue .)
    DOTDIV          reduce using rule 41 (expression -> lvalue .)
    '               reduce using rule 41 (expression -> lvalue .)
    :               reduce using rule 41 (expression -> lvalue .)
    ;               reduce using rule 41 (expression -> lvalue .)
    ,               reduce using rule 41 (expression -> lvalue .)
    EQ              reduce using rule 41 (expression -> lvalue .)
    NEQ             reduce using rule 41 (expression -> lvalue .)
    LTE             reduce using rule 41 (expression -> lvalue .)
    GTE             reduce using rule 41 (expression -> lvalue .)
    <               reduce using rule 41 (expression -> lvalue .)
    >               reduce using rule 41 (expression -> lvalue .)
    ]               reduce using rule 41 (expression -> lvalue .)
    )               reduce using rule 41 (expression -> lvalue .)
    {               reduce using rule 41 (expression -> lvalue .)
    IF              reduce using rule 41 (expression -> lvalue .)
    FOR             reduce using rule 41 (expression -> lvalue .)
    WHILE           reduce using rule 41 (expression -> lvalue .)
    BREAK           reduce using rule 41 (expression -> lvalue .)
    CONTINUE        reduce using rule 41 (expression -> lvalue .)
    RETURN          reduce using rule 41 (expression -> lvalue .)
    PRINT           reduce using rule 41 (expression -> lvalue .)
    ID              reduce using rule 41 (expression -> lvalue .)


state 26

    (42) expression -> range .

    +               reduce using rule 42 (expression -> range .)
    -               reduce using rule 42 (expression -> range .)
    *               reduce using rule 42 (expression -> range .)
    /               reduce using rule 42 (expression -> range .)
    DOTADD          reduce using rule 42 (expression -> range .)
    DOTSUB          reduce using rule 42 (expression -> range .)
    DOTMUL          reduce using rule 42 (expression -> range .)
    DOTDIV          reduce using rule 42 (expression -> range .)
    '               reduce using rule 42 (expression -> range .)
    :               reduce using rule 42 (expression -> range .)
    ;               reduce using rule 42 (expression -> range .)
    ,               reduce using rule 42 (expression -> range .)
    EQ              reduce using rule 42 (expression -> range .)
    NEQ             reduce using rule 42 (expression -> range .)
    LTE             reduce using rule 42 (expression -> range .)
    GTE             reduce using rule 42 (expression -> range .)
    <               reduce using rule 42 (expression -> range .)
    >               reduce using rule 42 (expression -> range .)
    ]               reduce using rule 42 (expression -> range .)
    )               reduce using rule 42 (expression -> range .)
    {               reduce using rule 42 (expression -> range .)
    IF              reduce using rule 42 (expression -> range .)
    FOR             reduce using rule 42 (expression -> range .)
    WHILE           reduce using rule 42 (expression -> range .)
    BREAK           reduce using rule 42 (expression -> range .)
    CONTINUE        reduce using rule 42 (expression -> range .)
    RETURN          reduce using rule 42 (expression -> range .)
    PRINT           reduce using rule 42 (expression -> range .)
    ID              reduce using rule 42 (expression -> range .)


state 27

    (43) expression -> INTNUM .

    +               reduce using rule 43 (expression -> INTNUM .)
    -               reduce using rule 43 (expression -> INTNUM .)
    *               reduce using rule 43 (expression -> INTNUM .)
    /               reduce using rule 43 (expression -> INTNUM .)
    DOTADD          reduce using rule 43 (expression -> INTNUM .)
    DOTSUB          reduce using rule 43 (expression -> INTNUM .)
    DOTMUL          reduce using rule 43 (expression -> INTNUM .)
    DOTDIV          reduce using rule 43 (expression -> INTNUM .)
    '               reduce using rule 43 (expression -> INTNUM .)
    :               reduce using rule 43 (expression -> INTNUM .)
    ;               reduce using rule 43 (expression -> INTNUM .)
    ,               reduce using rule 43 (expression -> INTNUM .)
    EQ              reduce using rule 43 (expression -> INTNUM .)
    NEQ             reduce using rule 43 (expression -> INTNUM .)
    LTE             reduce using rule 43 (expression -> INTNUM .)
    GTE             reduce using rule 43 (expression -> INTNUM .)
    <               reduce using rule 43 (expression -> INTNUM .)
    >               reduce using rule 43 (expression -> INTNUM .)
    ]               reduce using rule 43 (expression -> INTNUM .)
    )               reduce using rule 43 (expression -> INTNUM .)
    {               reduce using rule 43 (expression -> INTNUM .)
    IF              reduce using rule 43 (expression -> INTNUM .)
    FOR             reduce using rule 43 (expression -> INTNUM .)
    WHILE           reduce using rule 43 (expression -> INTNUM .)
    BREAK           reduce using rule 43 (expression -> INTNUM .)
    CONTINUE        reduce using rule 43 (expression -> INTNUM .)
    RETURN          reduce using rule 43 (expression -> INTNUM .)
    PRINT           reduce using rule 43 (expression -> INTNUM .)
    ID              reduce using rule 43 (expression -> INTNUM .)


state 28

    (44) expression -> FLOATNUM .

    +               reduce using rule 44 (expression -> FLOATNUM .)
    -               reduce using rule 44 (expression -> FLOATNUM .)
    *               reduce using rule 44 (expression -> FLOATNUM .)
    /               reduce using rule 44 (expression -> FLOATNUM .)
    DOTADD          reduce using rule 44 (expression -> FLOATNUM .)
    DOTSUB          reduce using rule 44 (expression -> FLOATNUM .)
    DOTMUL          reduce using rule 44 (expression -> FLOATNUM .)
    DOTDIV          reduce using rule 44 (expression -> FLOATNUM .)
    '               reduce using rule 44 (expression -> FLOATNUM .)
    :               reduce using rule 44 (expression -> FLOATNUM .)
    ;               reduce using rule 44 (expression -> FLOATNUM .)
    ,               reduce using rule 44 (expression -> FLOATNUM .)
    EQ              reduce using rule 44 (expression -> FLOATNUM .)
    NEQ             reduce using rule 44 (expression -> FLOATNUM .)
    LTE             reduce using rule 44 (expression -> FLOATNUM .)
    GTE             reduce using rule 44 (expression -> FLOATNUM .)
    <               reduce using rule 44 (expression -> FLOATNUM .)
    >               reduce using rule 44 (expression -> FLOATNUM .)
    ]               reduce using rule 44 (expression -> FLOATNUM .)
    )               reduce using rule 44 (expression -> FLOATNUM .)
    {               reduce using rule 44 (expression -> FLOATNUM .)
    IF              reduce using rule 44 (expression -> FLOATNUM .)
    FOR             reduce using rule 44 (expression -> FLOATNUM .)
    WHILE           reduce using rule 44 (expression -> FLOATNUM .)
    BREAK           reduce using rule 44 (expression -> FLOATNUM .)
    CONTINUE        reduce using rule 44 (expression -> FLOATNUM .)
    RETURN          reduce using rule 44 (expression -> FLOATNUM .)
    PRINT           reduce using rule 44 (expression -> FLOATNUM .)
    ID              reduce using rule 44 (expression -> FLOATNUM .)


state 29

    (45) expression -> STRING .

    +               reduce using rule 45 (expression -> STRING .)
    -               reduce using rule 45 (expression -> STRING .)
    *               reduce using rule 45 (expression -> STRING .)
    /               reduce using rule 45 (expression -> STRING .)
    DOTADD          reduce using rule 45 (expression -> STRING .)
    DOTSUB          reduce using rule 45 (expression -> STRING .)
    DOTMUL          reduce using rule 45 (expression -> STRING .)
    DOTDIV          reduce using rule 45 (expression -> STRING .)
    '               reduce using rule 45 (expression -> STRING .)
    :               reduce using rule 45 (expression -> STRING .)
    ;               reduce using rule 45 (expression -> STRING .)
    ,               reduce using rule 45 (expression -> STRING .)
    EQ              reduce using rule 45 (expression -> STRING .)
    NEQ             reduce using rule 45 (expression -> STRING .)
    LTE             reduce using rule 45 (expression -> STRING .)
    GTE             reduce using rule 45 (expression -> STRING .)
    <               reduce using rule 45 (expression -> STRING .)
    >               reduce using rule 45 (expression -> STRING .)
    ]               reduce using rule 45 (expression -> STRING .)
    )               reduce using rule 45 (expression -> STRING .)
    {               reduce using rule 45 (expression -> STRING .)
    IF              reduce using rule 45 (expression -> STRING .)
    FOR             reduce using rule 45 (expression -> STRING .)
    WHILE           reduce using rule 45 (expression -> STRING .)
    BREAK           reduce using rule 45 (expression -> STRING .)
    CONTINUE        reduce using rule 45 (expression -> STRING .)
    RETURN          reduce using rule 45 (expression -> STRING .)
    PRINT           reduce using rule 45 (expression -> STRING .)
    ID              reduce using rule 45 (expression -> STRING .)


state 30

    (49) expression -> [ . expression_list ]
    (46) expression_list -> . expression_list , expression
    (47) expression_list -> . expression
    (48) expression_list -> .
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    ]               reduce using rule 48 (expression_list -> .)
    ,               reduce using rule 48 (expression_list -> .)
    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression_list                shift and go to state 59
    expression                     shift and go to state 35
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 31

    (50) expression -> EYE . ( expression )
    (51) expression -> EYE . ( expression , expression )

    (               shift and go to state 60


state 32

    (52) expression -> ZEROS . ( expression )
    (53) expression -> ZEROS . ( expression , expression )

    (               shift and go to state 61


state 33

    (54) expression -> ONES . ( expression )
    (55) expression -> ONES . ( expression , expression )

    (               shift and go to state 62


state 34

    (22) statement -> PRINT expression_list .
    (46) expression_list -> expression_list . , expression

    ;               reduce using rule 22 (statement -> PRINT expression_list .)
    ,               shift and go to state 63


state 35

    (47) expression_list -> expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    ,               reduce using rule 47 (expression_list -> expression .)
    ;               reduce using rule 47 (expression_list -> expression .)
    ]               reduce using rule 47 (expression_list -> expression .)
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55
    :               shift and go to state 56


state 36

    (23) statement -> lvalue = . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    lvalue                         shift and go to state 25
    expression                     shift and go to state 64
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 37

    (24) statement -> lvalue ADDASSIGN . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    lvalue                         shift and go to state 25
    expression                     shift and go to state 65
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 38

    (25) statement -> lvalue SUBASSIGN . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    lvalue                         shift and go to state 25
    expression                     shift and go to state 66
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 39

    (26) statement -> lvalue MULASSIGN . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    lvalue                         shift and go to state 25
    expression                     shift and go to state 67
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 40

    (27) statement -> lvalue DIVASSIGN . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    lvalue                         shift and go to state 25
    expression                     shift and go to state 68
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 41

    (4) instruction -> { instructions } .

    {               reduce using rule 4 (instruction -> { instructions } .)
    IF              reduce using rule 4 (instruction -> { instructions } .)
    FOR             reduce using rule 4 (instruction -> { instructions } .)
    WHILE           reduce using rule 4 (instruction -> { instructions } .)
    BREAK           reduce using rule 4 (instruction -> { instructions } .)
    CONTINUE        reduce using rule 4 (instruction -> { instructions } .)
    RETURN          reduce using rule 4 (instruction -> { instructions } .)
    PRINT           reduce using rule 4 (instruction -> { instructions } .)
    ID              reduce using rule 4 (instruction -> { instructions } .)
    $end            reduce using rule 4 (instruction -> { instructions } .)
    }               reduce using rule 4 (instruction -> { instructions } .)
    ELSE            reduce using rule 4 (instruction -> { instructions } .)


state 42

    (5) instruction -> IF ( condition . ) instruction
    (6) instruction -> IF ( condition . ) instruction ELSE instruction

    )               shift and go to state 69


state 43

    (9) condition -> expression . EQ expression
    (10) condition -> expression . NEQ expression
    (11) condition -> expression . LTE expression
    (12) condition -> expression . GTE expression
    (13) condition -> expression . < expression
    (14) condition -> expression . > expression
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    EQ              shift and go to state 70
    NEQ             shift and go to state 71
    LTE             shift and go to state 72
    GTE             shift and go to state 73
    <               shift and go to state 74
    >               shift and go to state 75
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55
    :               shift and go to state 56


state 44

    (7) instruction -> FOR variable = . range instruction
    (16) range -> . expression : expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    variable                       shift and go to state 7
    range                          shift and go to state 76
    expression                     shift and go to state 77
    lvalue                         shift and go to state 25

state 45

    (29) lvalue -> variable [ expression_list . ]
    (46) expression_list -> expression_list . , expression

    ]               shift and go to state 78
    ,               shift and go to state 63


state 46

    (8) instruction -> WHILE ( condition . ) instruction

    )               shift and go to state 79


state 47

    (30) expression -> expression + . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 80
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 48

    (31) expression -> expression - . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 81
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 49

    (32) expression -> expression * . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 82
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 50

    (33) expression -> expression / . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 83
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 51

    (34) expression -> expression DOTADD . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 84
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 52

    (35) expression -> expression DOTSUB . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 85
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 53

    (36) expression -> expression DOTMUL . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 86
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 54

    (37) expression -> expression DOTDIV . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 87
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 55

    (39) expression -> expression ' .

    +               reduce using rule 39 (expression -> expression ' .)
    -               reduce using rule 39 (expression -> expression ' .)
    *               reduce using rule 39 (expression -> expression ' .)
    /               reduce using rule 39 (expression -> expression ' .)
    DOTADD          reduce using rule 39 (expression -> expression ' .)
    DOTSUB          reduce using rule 39 (expression -> expression ' .)
    DOTMUL          reduce using rule 39 (expression -> expression ' .)
    DOTDIV          reduce using rule 39 (expression -> expression ' .)
    '               reduce using rule 39 (expression -> expression ' .)
    :               reduce using rule 39 (expression -> expression ' .)
    ;               reduce using rule 39 (expression -> expression ' .)
    ,               reduce using rule 39 (expression -> expression ' .)
    EQ              reduce using rule 39 (expression -> expression ' .)
    NEQ             reduce using rule 39 (expression -> expression ' .)
    LTE             reduce using rule 39 (expression -> expression ' .)
    GTE             reduce using rule 39 (expression -> expression ' .)
    <               reduce using rule 39 (expression -> expression ' .)
    >               reduce using rule 39 (expression -> expression ' .)
    ]               reduce using rule 39 (expression -> expression ' .)
    )               reduce using rule 39 (expression -> expression ' .)
    {               reduce using rule 39 (expression -> expression ' .)
    IF              reduce using rule 39 (expression -> expression ' .)
    FOR             reduce using rule 39 (expression -> expression ' .)
    WHILE           reduce using rule 39 (expression -> expression ' .)
    BREAK           reduce using rule 39 (expression -> expression ' .)
    CONTINUE        reduce using rule 39 (expression -> expression ' .)
    RETURN          reduce using rule 39 (expression -> expression ' .)
    PRINT           reduce using rule 39 (expression -> expression ' .)
    ID              reduce using rule 39 (expression -> expression ' .)


state 56

    (16) range -> expression : . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 88
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 57

    (38) expression -> - expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    +               reduce using rule 38 (expression -> - expression .)
    -               reduce using rule 38 (expression -> - expression .)
    *               reduce using rule 38 (expression -> - expression .)
    /               reduce using rule 38 (expression -> - expression .)
    DOTADD          reduce using rule 38 (expression -> - expression .)
    DOTSUB          reduce using rule 38 (expression -> - expression .)
    DOTMUL          reduce using rule 38 (expression -> - expression .)
    DOTDIV          reduce using rule 38 (expression -> - expression .)
    :               reduce using rule 38 (expression -> - expression .)
    ;               reduce using rule 38 (expression -> - expression .)
    ,               reduce using rule 38 (expression -> - expression .)
    EQ              reduce using rule 38 (expression -> - expression .)
    NEQ             reduce using rule 38 (expression -> - expression .)
    LTE             reduce using rule 38 (expression -> - expression .)
    GTE             reduce using rule 38 (expression -> - expression .)
    <               reduce using rule 38 (expression -> - expression .)
    >               reduce using rule 38 (expression -> - expression .)
    ]               reduce using rule 38 (expression -> - expression .)
    )               reduce using rule 38 (expression -> - expression .)
    {               reduce using rule 38 (expression -> - expression .)
    IF              reduce using rule 38 (expression -> - expression .)
    FOR             reduce using rule 38 (expression -> - expression .)
    WHILE           reduce using rule 38 (expression -> - expression .)
    BREAK           reduce using rule 38 (expression -> - expression .)
    CONTINUE        reduce using rule 38 (expression -> - expression .)
    RETURN          reduce using rule 38 (expression -> - expression .)
    PRINT           reduce using rule 38 (expression -> - expression .)
    ID              reduce using rule 38 (expression -> - expression .)
    '               shift and go to state 55

  ! '               [ reduce using rule 38 (expression -> - expression .) ]
  ! +               [ shift and go to state 47 ]
  ! -               [ shift and go to state 48 ]
  ! *               [ shift and go to state 49 ]
  ! /               [ shift and go to state 50 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! DOTMUL          [ shift and go to state 53 ]
  ! DOTDIV          [ shift and go to state 54 ]
  ! :               [ shift and go to state 56 ]


state 58

    (40) expression -> ( expression . )
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    )               shift and go to state 89
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55
    :               shift and go to state 56


state 59

    (49) expression -> [ expression_list . ]
    (46) expression_list -> expression_list . , expression

    ]               shift and go to state 90
    ,               shift and go to state 63


state 60

    (50) expression -> EYE ( . expression )
    (51) expression -> EYE ( . expression , expression )
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 91
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 61

    (52) expression -> ZEROS ( . expression )
    (53) expression -> ZEROS ( . expression , expression )
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 92
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 62

    (54) expression -> ONES ( . expression )
    (55) expression -> ONES ( . expression , expression )
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 93
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 63

    (46) expression_list -> expression_list , . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 94
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 64

    (23) statement -> lvalue = expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    ;               reduce using rule 23 (statement -> lvalue = expression .)
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55
    :               shift and go to state 56


state 65

    (24) statement -> lvalue ADDASSIGN expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    ;               reduce using rule 24 (statement -> lvalue ADDASSIGN expression .)
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55
    :               shift and go to state 56


state 66

    (25) statement -> lvalue SUBASSIGN expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    ;               reduce using rule 25 (statement -> lvalue SUBASSIGN expression .)
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55
    :               shift and go to state 56


state 67

    (26) statement -> lvalue MULASSIGN expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    ;               reduce using rule 26 (statement -> lvalue MULASSIGN expression .)
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55
    :               shift and go to state 56


state 68

    (27) statement -> lvalue DIVASSIGN expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    ;               reduce using rule 27 (statement -> lvalue DIVASSIGN expression .)
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55
    :               shift and go to state 56


state 69

    (5) instruction -> IF ( condition ) . instruction
    (6) instruction -> IF ( condition ) . instruction ELSE instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . IF ( condition ) instruction
    (6) instruction -> . IF ( condition ) instruction ELSE instruction
    (7) instruction -> . FOR variable = range instruction
    (8) instruction -> . WHILE ( condition ) instruction
    (17) instruction -> . statement ;
    (18) statement -> . BREAK
    (19) statement -> . CONTINUE
    (20) statement -> . RETURN
    (21) statement -> . RETURN expression
    (22) statement -> . PRINT expression_list
    (23) statement -> . lvalue = expression
    (24) statement -> . lvalue ADDASSIGN expression
    (25) statement -> . lvalue SUBASSIGN expression
    (26) statement -> . lvalue MULASSIGN expression
    (27) statement -> . lvalue DIVASSIGN expression
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    {               shift and go to state 4
    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 15

    instruction                    shift and go to state 95
    variable                       shift and go to state 7
    statement                      shift and go to state 9
    lvalue                         shift and go to state 14

state 70

    (9) condition -> expression EQ . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 96
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 71

    (10) condition -> expression NEQ . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 97
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 72

    (11) condition -> expression LTE . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 98
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 73

    (12) condition -> expression GTE . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 99
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 74

    (13) condition -> expression < . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 100
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 75

    (14) condition -> expression > . expression
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 101
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 76

    (7) instruction -> FOR variable = range . instruction
    (42) expression -> range .
    (4) instruction -> . { instructions }
    (5) instruction -> . IF ( condition ) instruction
    (6) instruction -> . IF ( condition ) instruction ELSE instruction
    (7) instruction -> . FOR variable = range instruction
    (8) instruction -> . WHILE ( condition ) instruction
    (17) instruction -> . statement ;
    (18) statement -> . BREAK
    (19) statement -> . CONTINUE
    (20) statement -> . RETURN
    (21) statement -> . RETURN expression
    (22) statement -> . PRINT expression_list
    (23) statement -> . lvalue = expression
    (24) statement -> . lvalue ADDASSIGN expression
    (25) statement -> . lvalue SUBASSIGN expression
    (26) statement -> . lvalue MULASSIGN expression
    (27) statement -> . lvalue DIVASSIGN expression
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    :               reduce using rule 42 (expression -> range .)
    +               reduce using rule 42 (expression -> range .)
    -               reduce using rule 42 (expression -> range .)
    *               reduce using rule 42 (expression -> range .)
    /               reduce using rule 42 (expression -> range .)
    DOTADD          reduce using rule 42 (expression -> range .)
    DOTSUB          reduce using rule 42 (expression -> range .)
    DOTMUL          reduce using rule 42 (expression -> range .)
    DOTDIV          reduce using rule 42 (expression -> range .)
    '               reduce using rule 42 (expression -> range .)
    {               shift and go to state 4
    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 15

    variable                       shift and go to state 7
    instruction                    shift and go to state 102
    statement                      shift and go to state 9
    lvalue                         shift and go to state 14

state 77

    (16) range -> expression . : expression
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '

    :               shift and go to state 56
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55


state 78

    (29) lvalue -> variable [ expression_list ] .

    =               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    ADDASSIGN       reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    SUBASSIGN       reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    MULASSIGN       reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    DIVASSIGN       reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    +               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    -               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    *               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    /               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    DOTADD          reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    DOTSUB          reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    DOTMUL          reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    DOTDIV          reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    '               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    :               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    ;               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    ,               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    EQ              reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    NEQ             reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    LTE             reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    GTE             reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    <               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    >               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    ]               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    )               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    {               reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    IF              reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    FOR             reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    WHILE           reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    BREAK           reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    CONTINUE        reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    RETURN          reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    PRINT           reduce using rule 29 (lvalue -> variable [ expression_list ] .)
    ID              reduce using rule 29 (lvalue -> variable [ expression_list ] .)


state 79

    (8) instruction -> WHILE ( condition ) . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . IF ( condition ) instruction
    (6) instruction -> . IF ( condition ) instruction ELSE instruction
    (7) instruction -> . FOR variable = range instruction
    (8) instruction -> . WHILE ( condition ) instruction
    (17) instruction -> . statement ;
    (18) statement -> . BREAK
    (19) statement -> . CONTINUE
    (20) statement -> . RETURN
    (21) statement -> . RETURN expression
    (22) statement -> . PRINT expression_list
    (23) statement -> . lvalue = expression
    (24) statement -> . lvalue ADDASSIGN expression
    (25) statement -> . lvalue SUBASSIGN expression
    (26) statement -> . lvalue MULASSIGN expression
    (27) statement -> . lvalue DIVASSIGN expression
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    {               shift and go to state 4
    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 15

    instruction                    shift and go to state 103
    variable                       shift and go to state 7
    statement                      shift and go to state 9
    lvalue                         shift and go to state 14

state 80

    (30) expression -> expression + expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    +               reduce using rule 30 (expression -> expression + expression .)
    -               reduce using rule 30 (expression -> expression + expression .)
    DOTADD          reduce using rule 30 (expression -> expression + expression .)
    DOTSUB          reduce using rule 30 (expression -> expression + expression .)
    :               reduce using rule 30 (expression -> expression + expression .)
    ;               reduce using rule 30 (expression -> expression + expression .)
    ,               reduce using rule 30 (expression -> expression + expression .)
    EQ              reduce using rule 30 (expression -> expression + expression .)
    NEQ             reduce using rule 30 (expression -> expression + expression .)
    LTE             reduce using rule 30 (expression -> expression + expression .)
    GTE             reduce using rule 30 (expression -> expression + expression .)
    <               reduce using rule 30 (expression -> expression + expression .)
    >               reduce using rule 30 (expression -> expression + expression .)
    ]               reduce using rule 30 (expression -> expression + expression .)
    )               reduce using rule 30 (expression -> expression + expression .)
    {               reduce using rule 30 (expression -> expression + expression .)
    IF              reduce using rule 30 (expression -> expression + expression .)
    FOR             reduce using rule 30 (expression -> expression + expression .)
    WHILE           reduce using rule 30 (expression -> expression + expression .)
    BREAK           reduce using rule 30 (expression -> expression + expression .)
    CONTINUE        reduce using rule 30 (expression -> expression + expression .)
    RETURN          reduce using rule 30 (expression -> expression + expression .)
    PRINT           reduce using rule 30 (expression -> expression + expression .)
    ID              reduce using rule 30 (expression -> expression + expression .)
    *               shift and go to state 49
    /               shift and go to state 50
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55

  ! *               [ reduce using rule 30 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 30 (expression -> expression + expression .) ]
  ! DOTMUL          [ reduce using rule 30 (expression -> expression + expression .) ]
  ! DOTDIV          [ reduce using rule 30 (expression -> expression + expression .) ]
  ! '               [ reduce using rule 30 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 47 ]
  ! -               [ shift and go to state 48 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! :               [ shift and go to state 56 ]


state 81

    (31) expression -> expression - expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    +               reduce using rule 31 (expression -> expression - expression .)
    -               reduce using rule 31 (expression -> expression - expression .)
    DOTADD          reduce using rule 31 (expression -> expression - expression .)
    DOTSUB          reduce using rule 31 (expression -> expression - expression .)
    :               reduce using rule 31 (expression -> expression - expression .)
    ;               reduce using rule 31 (expression -> expression - expression .)
    ,               reduce using rule 31 (expression -> expression - expression .)
    EQ              reduce using rule 31 (expression -> expression - expression .)
    NEQ             reduce using rule 31 (expression -> expression - expression .)
    LTE             reduce using rule 31 (expression -> expression - expression .)
    GTE             reduce using rule 31 (expression -> expression - expression .)
    <               reduce using rule 31 (expression -> expression - expression .)
    >               reduce using rule 31 (expression -> expression - expression .)
    ]               reduce using rule 31 (expression -> expression - expression .)
    )               reduce using rule 31 (expression -> expression - expression .)
    {               reduce using rule 31 (expression -> expression - expression .)
    IF              reduce using rule 31 (expression -> expression - expression .)
    FOR             reduce using rule 31 (expression -> expression - expression .)
    WHILE           reduce using rule 31 (expression -> expression - expression .)
    BREAK           reduce using rule 31 (expression -> expression - expression .)
    CONTINUE        reduce using rule 31 (expression -> expression - expression .)
    RETURN          reduce using rule 31 (expression -> expression - expression .)
    PRINT           reduce using rule 31 (expression -> expression - expression .)
    ID              reduce using rule 31 (expression -> expression - expression .)
    *               shift and go to state 49
    /               shift and go to state 50
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55

  ! *               [ reduce using rule 31 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 31 (expression -> expression - expression .) ]
  ! DOTMUL          [ reduce using rule 31 (expression -> expression - expression .) ]
  ! DOTDIV          [ reduce using rule 31 (expression -> expression - expression .) ]
  ! '               [ reduce using rule 31 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 47 ]
  ! -               [ shift and go to state 48 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! :               [ shift and go to state 56 ]


state 82

    (32) expression -> expression * expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    +               reduce using rule 32 (expression -> expression * expression .)
    -               reduce using rule 32 (expression -> expression * expression .)
    *               reduce using rule 32 (expression -> expression * expression .)
    /               reduce using rule 32 (expression -> expression * expression .)
    DOTADD          reduce using rule 32 (expression -> expression * expression .)
    DOTSUB          reduce using rule 32 (expression -> expression * expression .)
    DOTMUL          reduce using rule 32 (expression -> expression * expression .)
    DOTDIV          reduce using rule 32 (expression -> expression * expression .)
    :               reduce using rule 32 (expression -> expression * expression .)
    ;               reduce using rule 32 (expression -> expression * expression .)
    ,               reduce using rule 32 (expression -> expression * expression .)
    EQ              reduce using rule 32 (expression -> expression * expression .)
    NEQ             reduce using rule 32 (expression -> expression * expression .)
    LTE             reduce using rule 32 (expression -> expression * expression .)
    GTE             reduce using rule 32 (expression -> expression * expression .)
    <               reduce using rule 32 (expression -> expression * expression .)
    >               reduce using rule 32 (expression -> expression * expression .)
    ]               reduce using rule 32 (expression -> expression * expression .)
    )               reduce using rule 32 (expression -> expression * expression .)
    {               reduce using rule 32 (expression -> expression * expression .)
    IF              reduce using rule 32 (expression -> expression * expression .)
    FOR             reduce using rule 32 (expression -> expression * expression .)
    WHILE           reduce using rule 32 (expression -> expression * expression .)
    BREAK           reduce using rule 32 (expression -> expression * expression .)
    CONTINUE        reduce using rule 32 (expression -> expression * expression .)
    RETURN          reduce using rule 32 (expression -> expression * expression .)
    PRINT           reduce using rule 32 (expression -> expression * expression .)
    ID              reduce using rule 32 (expression -> expression * expression .)
    '               shift and go to state 55

  ! '               [ reduce using rule 32 (expression -> expression * expression .) ]
  ! +               [ shift and go to state 47 ]
  ! -               [ shift and go to state 48 ]
  ! *               [ shift and go to state 49 ]
  ! /               [ shift and go to state 50 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! DOTMUL          [ shift and go to state 53 ]
  ! DOTDIV          [ shift and go to state 54 ]
  ! :               [ shift and go to state 56 ]


state 83

    (33) expression -> expression / expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    +               reduce using rule 33 (expression -> expression / expression .)
    -               reduce using rule 33 (expression -> expression / expression .)
    *               reduce using rule 33 (expression -> expression / expression .)
    /               reduce using rule 33 (expression -> expression / expression .)
    DOTADD          reduce using rule 33 (expression -> expression / expression .)
    DOTSUB          reduce using rule 33 (expression -> expression / expression .)
    DOTMUL          reduce using rule 33 (expression -> expression / expression .)
    DOTDIV          reduce using rule 33 (expression -> expression / expression .)
    :               reduce using rule 33 (expression -> expression / expression .)
    ;               reduce using rule 33 (expression -> expression / expression .)
    ,               reduce using rule 33 (expression -> expression / expression .)
    EQ              reduce using rule 33 (expression -> expression / expression .)
    NEQ             reduce using rule 33 (expression -> expression / expression .)
    LTE             reduce using rule 33 (expression -> expression / expression .)
    GTE             reduce using rule 33 (expression -> expression / expression .)
    <               reduce using rule 33 (expression -> expression / expression .)
    >               reduce using rule 33 (expression -> expression / expression .)
    ]               reduce using rule 33 (expression -> expression / expression .)
    )               reduce using rule 33 (expression -> expression / expression .)
    {               reduce using rule 33 (expression -> expression / expression .)
    IF              reduce using rule 33 (expression -> expression / expression .)
    FOR             reduce using rule 33 (expression -> expression / expression .)
    WHILE           reduce using rule 33 (expression -> expression / expression .)
    BREAK           reduce using rule 33 (expression -> expression / expression .)
    CONTINUE        reduce using rule 33 (expression -> expression / expression .)
    RETURN          reduce using rule 33 (expression -> expression / expression .)
    PRINT           reduce using rule 33 (expression -> expression / expression .)
    ID              reduce using rule 33 (expression -> expression / expression .)
    '               shift and go to state 55

  ! '               [ reduce using rule 33 (expression -> expression / expression .) ]
  ! +               [ shift and go to state 47 ]
  ! -               [ shift and go to state 48 ]
  ! *               [ shift and go to state 49 ]
  ! /               [ shift and go to state 50 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! DOTMUL          [ shift and go to state 53 ]
  ! DOTDIV          [ shift and go to state 54 ]
  ! :               [ shift and go to state 56 ]


state 84

    (34) expression -> expression DOTADD expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    +               reduce using rule 34 (expression -> expression DOTADD expression .)
    -               reduce using rule 34 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 34 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 34 (expression -> expression DOTADD expression .)
    :               reduce using rule 34 (expression -> expression DOTADD expression .)
    ;               reduce using rule 34 (expression -> expression DOTADD expression .)
    ,               reduce using rule 34 (expression -> expression DOTADD expression .)
    EQ              reduce using rule 34 (expression -> expression DOTADD expression .)
    NEQ             reduce using rule 34 (expression -> expression DOTADD expression .)
    LTE             reduce using rule 34 (expression -> expression DOTADD expression .)
    GTE             reduce using rule 34 (expression -> expression DOTADD expression .)
    <               reduce using rule 34 (expression -> expression DOTADD expression .)
    >               reduce using rule 34 (expression -> expression DOTADD expression .)
    ]               reduce using rule 34 (expression -> expression DOTADD expression .)
    )               reduce using rule 34 (expression -> expression DOTADD expression .)
    {               reduce using rule 34 (expression -> expression DOTADD expression .)
    IF              reduce using rule 34 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 34 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 34 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 34 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 34 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 34 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 34 (expression -> expression DOTADD expression .)
    ID              reduce using rule 34 (expression -> expression DOTADD expression .)
    *               shift and go to state 49
    /               shift and go to state 50
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55

  ! *               [ reduce using rule 34 (expression -> expression DOTADD expression .) ]
  ! /               [ reduce using rule 34 (expression -> expression DOTADD expression .) ]
  ! DOTMUL          [ reduce using rule 34 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 34 (expression -> expression DOTADD expression .) ]
  ! '               [ reduce using rule 34 (expression -> expression DOTADD expression .) ]
  ! +               [ shift and go to state 47 ]
  ! -               [ shift and go to state 48 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! :               [ shift and go to state 56 ]


state 85

    (35) expression -> expression DOTSUB expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    +               reduce using rule 35 (expression -> expression DOTSUB expression .)
    -               reduce using rule 35 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 35 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 35 (expression -> expression DOTSUB expression .)
    :               reduce using rule 35 (expression -> expression DOTSUB expression .)
    ;               reduce using rule 35 (expression -> expression DOTSUB expression .)
    ,               reduce using rule 35 (expression -> expression DOTSUB expression .)
    EQ              reduce using rule 35 (expression -> expression DOTSUB expression .)
    NEQ             reduce using rule 35 (expression -> expression DOTSUB expression .)
    LTE             reduce using rule 35 (expression -> expression DOTSUB expression .)
    GTE             reduce using rule 35 (expression -> expression DOTSUB expression .)
    <               reduce using rule 35 (expression -> expression DOTSUB expression .)
    >               reduce using rule 35 (expression -> expression DOTSUB expression .)
    ]               reduce using rule 35 (expression -> expression DOTSUB expression .)
    )               reduce using rule 35 (expression -> expression DOTSUB expression .)
    {               reduce using rule 35 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 35 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 35 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 35 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 35 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 35 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 35 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 35 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 35 (expression -> expression DOTSUB expression .)
    *               shift and go to state 49
    /               shift and go to state 50
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55

  ! *               [ reduce using rule 35 (expression -> expression DOTSUB expression .) ]
  ! /               [ reduce using rule 35 (expression -> expression DOTSUB expression .) ]
  ! DOTMUL          [ reduce using rule 35 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 35 (expression -> expression DOTSUB expression .) ]
  ! '               [ reduce using rule 35 (expression -> expression DOTSUB expression .) ]
  ! +               [ shift and go to state 47 ]
  ! -               [ shift and go to state 48 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! :               [ shift and go to state 56 ]


state 86

    (36) expression -> expression DOTMUL expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    +               reduce using rule 36 (expression -> expression DOTMUL expression .)
    -               reduce using rule 36 (expression -> expression DOTMUL expression .)
    *               reduce using rule 36 (expression -> expression DOTMUL expression .)
    /               reduce using rule 36 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 36 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 36 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 36 (expression -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 36 (expression -> expression DOTMUL expression .)
    :               reduce using rule 36 (expression -> expression DOTMUL expression .)
    ;               reduce using rule 36 (expression -> expression DOTMUL expression .)
    ,               reduce using rule 36 (expression -> expression DOTMUL expression .)
    EQ              reduce using rule 36 (expression -> expression DOTMUL expression .)
    NEQ             reduce using rule 36 (expression -> expression DOTMUL expression .)
    LTE             reduce using rule 36 (expression -> expression DOTMUL expression .)
    GTE             reduce using rule 36 (expression -> expression DOTMUL expression .)
    <               reduce using rule 36 (expression -> expression DOTMUL expression .)
    >               reduce using rule 36 (expression -> expression DOTMUL expression .)
    ]               reduce using rule 36 (expression -> expression DOTMUL expression .)
    )               reduce using rule 36 (expression -> expression DOTMUL expression .)
    {               reduce using rule 36 (expression -> expression DOTMUL expression .)
    IF              reduce using rule 36 (expression -> expression DOTMUL expression .)
    FOR             reduce using rule 36 (expression -> expression DOTMUL expression .)
    WHILE           reduce using rule 36 (expression -> expression DOTMUL expression .)
    BREAK           reduce using rule 36 (expression -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 36 (expression -> expression DOTMUL expression .)
    RETURN          reduce using rule 36 (expression -> expression DOTMUL expression .)
    PRINT           reduce using rule 36 (expression -> expression DOTMUL expression .)
    ID              reduce using rule 36 (expression -> expression DOTMUL expression .)
    '               shift and go to state 55

  ! '               [ reduce using rule 36 (expression -> expression DOTMUL expression .) ]
  ! +               [ shift and go to state 47 ]
  ! -               [ shift and go to state 48 ]
  ! *               [ shift and go to state 49 ]
  ! /               [ shift and go to state 50 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! DOTMUL          [ shift and go to state 53 ]
  ! DOTDIV          [ shift and go to state 54 ]
  ! :               [ shift and go to state 56 ]


state 87

    (37) expression -> expression DOTDIV expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    +               reduce using rule 37 (expression -> expression DOTDIV expression .)
    -               reduce using rule 37 (expression -> expression DOTDIV expression .)
    *               reduce using rule 37 (expression -> expression DOTDIV expression .)
    /               reduce using rule 37 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 37 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 37 (expression -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 37 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 37 (expression -> expression DOTDIV expression .)
    :               reduce using rule 37 (expression -> expression DOTDIV expression .)
    ;               reduce using rule 37 (expression -> expression DOTDIV expression .)
    ,               reduce using rule 37 (expression -> expression DOTDIV expression .)
    EQ              reduce using rule 37 (expression -> expression DOTDIV expression .)
    NEQ             reduce using rule 37 (expression -> expression DOTDIV expression .)
    LTE             reduce using rule 37 (expression -> expression DOTDIV expression .)
    GTE             reduce using rule 37 (expression -> expression DOTDIV expression .)
    <               reduce using rule 37 (expression -> expression DOTDIV expression .)
    >               reduce using rule 37 (expression -> expression DOTDIV expression .)
    ]               reduce using rule 37 (expression -> expression DOTDIV expression .)
    )               reduce using rule 37 (expression -> expression DOTDIV expression .)
    {               reduce using rule 37 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 37 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 37 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 37 (expression -> expression DOTDIV expression .)
    BREAK           reduce using rule 37 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 37 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 37 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 37 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 37 (expression -> expression DOTDIV expression .)
    '               shift and go to state 55

  ! '               [ reduce using rule 37 (expression -> expression DOTDIV expression .) ]
  ! +               [ shift and go to state 47 ]
  ! -               [ shift and go to state 48 ]
  ! *               [ shift and go to state 49 ]
  ! /               [ shift and go to state 50 ]
  ! DOTADD          [ shift and go to state 51 ]
  ! DOTSUB          [ shift and go to state 52 ]
  ! DOTMUL          [ shift and go to state 53 ]
  ! DOTDIV          [ shift and go to state 54 ]
  ! :               [ shift and go to state 56 ]


state 88

    (16) range -> expression : expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    :               reduce using rule 16 (range -> expression : expression .)
    ;               reduce using rule 16 (range -> expression : expression .)
    ,               reduce using rule 16 (range -> expression : expression .)
    EQ              reduce using rule 16 (range -> expression : expression .)
    NEQ             reduce using rule 16 (range -> expression : expression .)
    LTE             reduce using rule 16 (range -> expression : expression .)
    GTE             reduce using rule 16 (range -> expression : expression .)
    <               reduce using rule 16 (range -> expression : expression .)
    >               reduce using rule 16 (range -> expression : expression .)
    ]               reduce using rule 16 (range -> expression : expression .)
    )               reduce using rule 16 (range -> expression : expression .)
    {               reduce using rule 16 (range -> expression : expression .)
    IF              reduce using rule 16 (range -> expression : expression .)
    FOR             reduce using rule 16 (range -> expression : expression .)
    WHILE           reduce using rule 16 (range -> expression : expression .)
    BREAK           reduce using rule 16 (range -> expression : expression .)
    CONTINUE        reduce using rule 16 (range -> expression : expression .)
    RETURN          reduce using rule 16 (range -> expression : expression .)
    PRINT           reduce using rule 16 (range -> expression : expression .)
    ID              reduce using rule 16 (range -> expression : expression .)
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55

  ! +               [ reduce using rule 16 (range -> expression : expression .) ]
  ! -               [ reduce using rule 16 (range -> expression : expression .) ]
  ! *               [ reduce using rule 16 (range -> expression : expression .) ]
  ! /               [ reduce using rule 16 (range -> expression : expression .) ]
  ! DOTADD          [ reduce using rule 16 (range -> expression : expression .) ]
  ! DOTSUB          [ reduce using rule 16 (range -> expression : expression .) ]
  ! DOTMUL          [ reduce using rule 16 (range -> expression : expression .) ]
  ! DOTDIV          [ reduce using rule 16 (range -> expression : expression .) ]
  ! '               [ reduce using rule 16 (range -> expression : expression .) ]
  ! :               [ shift and go to state 56 ]


state 89

    (40) expression -> ( expression ) .

    +               reduce using rule 40 (expression -> ( expression ) .)
    -               reduce using rule 40 (expression -> ( expression ) .)
    *               reduce using rule 40 (expression -> ( expression ) .)
    /               reduce using rule 40 (expression -> ( expression ) .)
    DOTADD          reduce using rule 40 (expression -> ( expression ) .)
    DOTSUB          reduce using rule 40 (expression -> ( expression ) .)
    DOTMUL          reduce using rule 40 (expression -> ( expression ) .)
    DOTDIV          reduce using rule 40 (expression -> ( expression ) .)
    '               reduce using rule 40 (expression -> ( expression ) .)
    :               reduce using rule 40 (expression -> ( expression ) .)
    ;               reduce using rule 40 (expression -> ( expression ) .)
    ,               reduce using rule 40 (expression -> ( expression ) .)
    EQ              reduce using rule 40 (expression -> ( expression ) .)
    NEQ             reduce using rule 40 (expression -> ( expression ) .)
    LTE             reduce using rule 40 (expression -> ( expression ) .)
    GTE             reduce using rule 40 (expression -> ( expression ) .)
    <               reduce using rule 40 (expression -> ( expression ) .)
    >               reduce using rule 40 (expression -> ( expression ) .)
    ]               reduce using rule 40 (expression -> ( expression ) .)
    )               reduce using rule 40 (expression -> ( expression ) .)
    {               reduce using rule 40 (expression -> ( expression ) .)
    IF              reduce using rule 40 (expression -> ( expression ) .)
    FOR             reduce using rule 40 (expression -> ( expression ) .)
    WHILE           reduce using rule 40 (expression -> ( expression ) .)
    BREAK           reduce using rule 40 (expression -> ( expression ) .)
    CONTINUE        reduce using rule 40 (expression -> ( expression ) .)
    RETURN          reduce using rule 40 (expression -> ( expression ) .)
    PRINT           reduce using rule 40 (expression -> ( expression ) .)
    ID              reduce using rule 40 (expression -> ( expression ) .)


state 90

    (49) expression -> [ expression_list ] .

    +               reduce using rule 49 (expression -> [ expression_list ] .)
    -               reduce using rule 49 (expression -> [ expression_list ] .)
    *               reduce using rule 49 (expression -> [ expression_list ] .)
    /               reduce using rule 49 (expression -> [ expression_list ] .)
    DOTADD          reduce using rule 49 (expression -> [ expression_list ] .)
    DOTSUB          reduce using rule 49 (expression -> [ expression_list ] .)
    DOTMUL          reduce using rule 49 (expression -> [ expression_list ] .)
    DOTDIV          reduce using rule 49 (expression -> [ expression_list ] .)
    '               reduce using rule 49 (expression -> [ expression_list ] .)
    :               reduce using rule 49 (expression -> [ expression_list ] .)
    ;               reduce using rule 49 (expression -> [ expression_list ] .)
    ,               reduce using rule 49 (expression -> [ expression_list ] .)
    EQ              reduce using rule 49 (expression -> [ expression_list ] .)
    NEQ             reduce using rule 49 (expression -> [ expression_list ] .)
    LTE             reduce using rule 49 (expression -> [ expression_list ] .)
    GTE             reduce using rule 49 (expression -> [ expression_list ] .)
    <               reduce using rule 49 (expression -> [ expression_list ] .)
    >               reduce using rule 49 (expression -> [ expression_list ] .)
    ]               reduce using rule 49 (expression -> [ expression_list ] .)
    )               reduce using rule 49 (expression -> [ expression_list ] .)
    {               reduce using rule 49 (expression -> [ expression_list ] .)
    IF              reduce using rule 49 (expression -> [ expression_list ] .)
    FOR             reduce using rule 49 (expression -> [ expression_list ] .)
    WHILE           reduce using rule 49 (expression -> [ expression_list ] .)
    BREAK           reduce using rule 49 (expression -> [ expression_list ] .)
    CONTINUE        reduce using rule 49 (expression -> [ expression_list ] .)
    RETURN          reduce using rule 49 (expression -> [ expression_list ] .)
    PRINT           reduce using rule 49 (expression -> [ expression_list ] .)
    ID              reduce using rule 49 (expression -> [ expression_list ] .)


state 91

    (50) expression -> EYE ( expression . )
    (51) expression -> EYE ( expression . , expression )
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    )               shift and go to state 104
    ,               shift and go to state 105
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55
    :               shift and go to state 56


state 92

    (52) expression -> ZEROS ( expression . )
    (53) expression -> ZEROS ( expression . , expression )
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    )               shift and go to state 106
    ,               shift and go to state 107
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55
    :               shift and go to state 56


state 93

    (54) expression -> ONES ( expression . )
    (55) expression -> ONES ( expression . , expression )
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    )               shift and go to state 108
    ,               shift and go to state 109
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55
    :               shift and go to state 56


state 94

    (46) expression_list -> expression_list , expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    ,               reduce using rule 46 (expression_list -> expression_list , expression .)
    ;               reduce using rule 46 (expression_list -> expression_list , expression .)
    ]               reduce using rule 46 (expression_list -> expression_list , expression .)
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55
    :               shift and go to state 56


state 95

    (5) instruction -> IF ( condition ) instruction .
    (6) instruction -> IF ( condition ) instruction . ELSE instruction

    {               reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    IF              reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    FOR             reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    WHILE           reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    BREAK           reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    CONTINUE        reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    RETURN          reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    PRINT           reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    ID              reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    $end            reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    }               reduce using rule 5 (instruction -> IF ( condition ) instruction .)
    ELSE            shift and go to state 110

  ! ELSE            [ reduce using rule 5 (instruction -> IF ( condition ) instruction .) ]


state 96

    (9) condition -> expression EQ expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    )               reduce using rule 9 (condition -> expression EQ expression .)
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55
    :               shift and go to state 56


state 97

    (10) condition -> expression NEQ expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    )               reduce using rule 10 (condition -> expression NEQ expression .)
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55
    :               shift and go to state 56


state 98

    (11) condition -> expression LTE expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    )               reduce using rule 11 (condition -> expression LTE expression .)
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55
    :               shift and go to state 56


state 99

    (12) condition -> expression GTE expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    )               reduce using rule 12 (condition -> expression GTE expression .)
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55
    :               shift and go to state 56


state 100

    (13) condition -> expression < expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    )               reduce using rule 13 (condition -> expression < expression .)
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55
    :               shift and go to state 56


state 101

    (14) condition -> expression > expression .
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    )               reduce using rule 14 (condition -> expression > expression .)
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55
    :               shift and go to state 56


state 102

    (7) instruction -> FOR variable = range instruction .

    {               reduce using rule 7 (instruction -> FOR variable = range instruction .)
    IF              reduce using rule 7 (instruction -> FOR variable = range instruction .)
    FOR             reduce using rule 7 (instruction -> FOR variable = range instruction .)
    WHILE           reduce using rule 7 (instruction -> FOR variable = range instruction .)
    BREAK           reduce using rule 7 (instruction -> FOR variable = range instruction .)
    CONTINUE        reduce using rule 7 (instruction -> FOR variable = range instruction .)
    RETURN          reduce using rule 7 (instruction -> FOR variable = range instruction .)
    PRINT           reduce using rule 7 (instruction -> FOR variable = range instruction .)
    ID              reduce using rule 7 (instruction -> FOR variable = range instruction .)
    $end            reduce using rule 7 (instruction -> FOR variable = range instruction .)
    }               reduce using rule 7 (instruction -> FOR variable = range instruction .)
    ELSE            reduce using rule 7 (instruction -> FOR variable = range instruction .)


state 103

    (8) instruction -> WHILE ( condition ) instruction .

    {               reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    IF              reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    FOR             reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    WHILE           reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    BREAK           reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    CONTINUE        reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    RETURN          reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    PRINT           reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    ID              reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    $end            reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    }               reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)
    ELSE            reduce using rule 8 (instruction -> WHILE ( condition ) instruction .)


state 104

    (50) expression -> EYE ( expression ) .

    +               reduce using rule 50 (expression -> EYE ( expression ) .)
    -               reduce using rule 50 (expression -> EYE ( expression ) .)
    *               reduce using rule 50 (expression -> EYE ( expression ) .)
    /               reduce using rule 50 (expression -> EYE ( expression ) .)
    DOTADD          reduce using rule 50 (expression -> EYE ( expression ) .)
    DOTSUB          reduce using rule 50 (expression -> EYE ( expression ) .)
    DOTMUL          reduce using rule 50 (expression -> EYE ( expression ) .)
    DOTDIV          reduce using rule 50 (expression -> EYE ( expression ) .)
    '               reduce using rule 50 (expression -> EYE ( expression ) .)
    :               reduce using rule 50 (expression -> EYE ( expression ) .)
    ;               reduce using rule 50 (expression -> EYE ( expression ) .)
    ,               reduce using rule 50 (expression -> EYE ( expression ) .)
    EQ              reduce using rule 50 (expression -> EYE ( expression ) .)
    NEQ             reduce using rule 50 (expression -> EYE ( expression ) .)
    LTE             reduce using rule 50 (expression -> EYE ( expression ) .)
    GTE             reduce using rule 50 (expression -> EYE ( expression ) .)
    <               reduce using rule 50 (expression -> EYE ( expression ) .)
    >               reduce using rule 50 (expression -> EYE ( expression ) .)
    ]               reduce using rule 50 (expression -> EYE ( expression ) .)
    )               reduce using rule 50 (expression -> EYE ( expression ) .)
    {               reduce using rule 50 (expression -> EYE ( expression ) .)
    IF              reduce using rule 50 (expression -> EYE ( expression ) .)
    FOR             reduce using rule 50 (expression -> EYE ( expression ) .)
    WHILE           reduce using rule 50 (expression -> EYE ( expression ) .)
    BREAK           reduce using rule 50 (expression -> EYE ( expression ) .)
    CONTINUE        reduce using rule 50 (expression -> EYE ( expression ) .)
    RETURN          reduce using rule 50 (expression -> EYE ( expression ) .)
    PRINT           reduce using rule 50 (expression -> EYE ( expression ) .)
    ID              reduce using rule 50 (expression -> EYE ( expression ) .)


state 105

    (51) expression -> EYE ( expression , . expression )
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 111
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 106

    (52) expression -> ZEROS ( expression ) .

    +               reduce using rule 52 (expression -> ZEROS ( expression ) .)
    -               reduce using rule 52 (expression -> ZEROS ( expression ) .)
    *               reduce using rule 52 (expression -> ZEROS ( expression ) .)
    /               reduce using rule 52 (expression -> ZEROS ( expression ) .)
    DOTADD          reduce using rule 52 (expression -> ZEROS ( expression ) .)
    DOTSUB          reduce using rule 52 (expression -> ZEROS ( expression ) .)
    DOTMUL          reduce using rule 52 (expression -> ZEROS ( expression ) .)
    DOTDIV          reduce using rule 52 (expression -> ZEROS ( expression ) .)
    '               reduce using rule 52 (expression -> ZEROS ( expression ) .)
    :               reduce using rule 52 (expression -> ZEROS ( expression ) .)
    ;               reduce using rule 52 (expression -> ZEROS ( expression ) .)
    ,               reduce using rule 52 (expression -> ZEROS ( expression ) .)
    EQ              reduce using rule 52 (expression -> ZEROS ( expression ) .)
    NEQ             reduce using rule 52 (expression -> ZEROS ( expression ) .)
    LTE             reduce using rule 52 (expression -> ZEROS ( expression ) .)
    GTE             reduce using rule 52 (expression -> ZEROS ( expression ) .)
    <               reduce using rule 52 (expression -> ZEROS ( expression ) .)
    >               reduce using rule 52 (expression -> ZEROS ( expression ) .)
    ]               reduce using rule 52 (expression -> ZEROS ( expression ) .)
    )               reduce using rule 52 (expression -> ZEROS ( expression ) .)
    {               reduce using rule 52 (expression -> ZEROS ( expression ) .)
    IF              reduce using rule 52 (expression -> ZEROS ( expression ) .)
    FOR             reduce using rule 52 (expression -> ZEROS ( expression ) .)
    WHILE           reduce using rule 52 (expression -> ZEROS ( expression ) .)
    BREAK           reduce using rule 52 (expression -> ZEROS ( expression ) .)
    CONTINUE        reduce using rule 52 (expression -> ZEROS ( expression ) .)
    RETURN          reduce using rule 52 (expression -> ZEROS ( expression ) .)
    PRINT           reduce using rule 52 (expression -> ZEROS ( expression ) .)
    ID              reduce using rule 52 (expression -> ZEROS ( expression ) .)


state 107

    (53) expression -> ZEROS ( expression , . expression )
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 112
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 108

    (54) expression -> ONES ( expression ) .

    +               reduce using rule 54 (expression -> ONES ( expression ) .)
    -               reduce using rule 54 (expression -> ONES ( expression ) .)
    *               reduce using rule 54 (expression -> ONES ( expression ) .)
    /               reduce using rule 54 (expression -> ONES ( expression ) .)
    DOTADD          reduce using rule 54 (expression -> ONES ( expression ) .)
    DOTSUB          reduce using rule 54 (expression -> ONES ( expression ) .)
    DOTMUL          reduce using rule 54 (expression -> ONES ( expression ) .)
    DOTDIV          reduce using rule 54 (expression -> ONES ( expression ) .)
    '               reduce using rule 54 (expression -> ONES ( expression ) .)
    :               reduce using rule 54 (expression -> ONES ( expression ) .)
    ;               reduce using rule 54 (expression -> ONES ( expression ) .)
    ,               reduce using rule 54 (expression -> ONES ( expression ) .)
    EQ              reduce using rule 54 (expression -> ONES ( expression ) .)
    NEQ             reduce using rule 54 (expression -> ONES ( expression ) .)
    LTE             reduce using rule 54 (expression -> ONES ( expression ) .)
    GTE             reduce using rule 54 (expression -> ONES ( expression ) .)
    <               reduce using rule 54 (expression -> ONES ( expression ) .)
    >               reduce using rule 54 (expression -> ONES ( expression ) .)
    ]               reduce using rule 54 (expression -> ONES ( expression ) .)
    )               reduce using rule 54 (expression -> ONES ( expression ) .)
    {               reduce using rule 54 (expression -> ONES ( expression ) .)
    IF              reduce using rule 54 (expression -> ONES ( expression ) .)
    FOR             reduce using rule 54 (expression -> ONES ( expression ) .)
    WHILE           reduce using rule 54 (expression -> ONES ( expression ) .)
    BREAK           reduce using rule 54 (expression -> ONES ( expression ) .)
    CONTINUE        reduce using rule 54 (expression -> ONES ( expression ) .)
    RETURN          reduce using rule 54 (expression -> ONES ( expression ) .)
    PRINT           reduce using rule 54 (expression -> ONES ( expression ) .)
    ID              reduce using rule 54 (expression -> ONES ( expression ) .)


state 109

    (55) expression -> ONES ( expression , . expression )
    (30) expression -> . expression + expression
    (31) expression -> . expression - expression
    (32) expression -> . expression * expression
    (33) expression -> . expression / expression
    (34) expression -> . expression DOTADD expression
    (35) expression -> . expression DOTSUB expression
    (36) expression -> . expression DOTMUL expression
    (37) expression -> . expression DOTDIV expression
    (38) expression -> . - expression
    (39) expression -> . expression '
    (40) expression -> . ( expression )
    (41) expression -> . lvalue
    (42) expression -> . range
    (43) expression -> . INTNUM
    (44) expression -> . FLOATNUM
    (45) expression -> . STRING
    (49) expression -> . [ expression_list ]
    (50) expression -> . EYE ( expression )
    (51) expression -> . EYE ( expression , expression )
    (52) expression -> . ZEROS ( expression )
    (53) expression -> . ZEROS ( expression , expression )
    (54) expression -> . ONES ( expression )
    (55) expression -> . ONES ( expression , expression )
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (16) range -> . expression : expression
    (15) variable -> . ID

    -               shift and go to state 23
    (               shift and go to state 24
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28
    STRING          shift and go to state 29
    [               shift and go to state 30
    EYE             shift and go to state 31
    ZEROS           shift and go to state 32
    ONES            shift and go to state 33
    ID              shift and go to state 15

    expression                     shift and go to state 113
    lvalue                         shift and go to state 25
    range                          shift and go to state 26
    variable                       shift and go to state 7

state 110

    (6) instruction -> IF ( condition ) instruction ELSE . instruction
    (4) instruction -> . { instructions }
    (5) instruction -> . IF ( condition ) instruction
    (6) instruction -> . IF ( condition ) instruction ELSE instruction
    (7) instruction -> . FOR variable = range instruction
    (8) instruction -> . WHILE ( condition ) instruction
    (17) instruction -> . statement ;
    (18) statement -> . BREAK
    (19) statement -> . CONTINUE
    (20) statement -> . RETURN
    (21) statement -> . RETURN expression
    (22) statement -> . PRINT expression_list
    (23) statement -> . lvalue = expression
    (24) statement -> . lvalue ADDASSIGN expression
    (25) statement -> . lvalue SUBASSIGN expression
    (26) statement -> . lvalue MULASSIGN expression
    (27) statement -> . lvalue DIVASSIGN expression
    (28) lvalue -> . variable
    (29) lvalue -> . variable [ expression_list ]
    (15) variable -> . ID

    {               shift and go to state 4
    IF              shift and go to state 5
    FOR             shift and go to state 6
    WHILE           shift and go to state 8
    BREAK           shift and go to state 10
    CONTINUE        shift and go to state 11
    RETURN          shift and go to state 12
    PRINT           shift and go to state 13
    ID              shift and go to state 15

    instruction                    shift and go to state 114
    variable                       shift and go to state 7
    statement                      shift and go to state 9
    lvalue                         shift and go to state 14

state 111

    (51) expression -> EYE ( expression , expression . )
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    )               shift and go to state 115
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55
    :               shift and go to state 56


state 112

    (53) expression -> ZEROS ( expression , expression . )
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    )               shift and go to state 116
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55
    :               shift and go to state 56


state 113

    (55) expression -> ONES ( expression , expression . )
    (30) expression -> expression . + expression
    (31) expression -> expression . - expression
    (32) expression -> expression . * expression
    (33) expression -> expression . / expression
    (34) expression -> expression . DOTADD expression
    (35) expression -> expression . DOTSUB expression
    (36) expression -> expression . DOTMUL expression
    (37) expression -> expression . DOTDIV expression
    (39) expression -> expression . '
    (16) range -> expression . : expression

    )               shift and go to state 117
    +               shift and go to state 47
    -               shift and go to state 48
    *               shift and go to state 49
    /               shift and go to state 50
    DOTADD          shift and go to state 51
    DOTSUB          shift and go to state 52
    DOTMUL          shift and go to state 53
    DOTDIV          shift and go to state 54
    '               shift and go to state 55
    :               shift and go to state 56


state 114

    (6) instruction -> IF ( condition ) instruction ELSE instruction .

    {               reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    IF              reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    FOR             reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    WHILE           reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    BREAK           reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    CONTINUE        reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    RETURN          reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    PRINT           reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    ID              reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    $end            reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    }               reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)
    ELSE            reduce using rule 6 (instruction -> IF ( condition ) instruction ELSE instruction .)


state 115

    (51) expression -> EYE ( expression , expression ) .

    +               reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    -               reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    *               reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    /               reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    DOTADD          reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    DOTSUB          reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    DOTMUL          reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    DOTDIV          reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    '               reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    :               reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    ;               reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    ,               reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    EQ              reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    NEQ             reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    LTE             reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    GTE             reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    <               reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    >               reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    ]               reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    )               reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    {               reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    IF              reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    FOR             reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    WHILE           reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    BREAK           reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    CONTINUE        reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    RETURN          reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    PRINT           reduce using rule 51 (expression -> EYE ( expression , expression ) .)
    ID              reduce using rule 51 (expression -> EYE ( expression , expression ) .)


state 116

    (53) expression -> ZEROS ( expression , expression ) .

    +               reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    -               reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    *               reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    /               reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    DOTADD          reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    DOTSUB          reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    DOTMUL          reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    DOTDIV          reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    '               reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    :               reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    ;               reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    ,               reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    EQ              reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    NEQ             reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    LTE             reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    GTE             reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    <               reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    >               reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    ]               reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    )               reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    {               reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    IF              reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    FOR             reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    WHILE           reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    BREAK           reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    CONTINUE        reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    RETURN          reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    PRINT           reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)
    ID              reduce using rule 53 (expression -> ZEROS ( expression , expression ) .)


state 117

    (55) expression -> ONES ( expression , expression ) .

    +               reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    -               reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    *               reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    /               reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    DOTADD          reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    DOTSUB          reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    DOTMUL          reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    DOTDIV          reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    '               reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    :               reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    ;               reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    ,               reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    EQ              reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    NEQ             reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    LTE             reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    GTE             reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    <               reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    >               reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    ]               reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    )               reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    {               reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    IF              reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    FOR             reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    WHILE           reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    BREAK           reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    CONTINUE        reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    RETURN          reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    PRINT           reduce using rule 55 (expression -> ONES ( expression , expression ) .)
    ID              reduce using rule 55 (expression -> ONES ( expression , expression ) .)

