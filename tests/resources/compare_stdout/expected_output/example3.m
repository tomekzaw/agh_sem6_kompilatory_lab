(3): ID(N)
(3): =(=)
(3): INTNUM(10)
(3): ;(;)
(4): ID(M)
(4): =(=)
(4): INTNUM(20)
(4): ;(;)
(6): IF(if)
(6): ((()
(6): ID(N)
(6): EQ(==)
(6): INTNUM(10)
(6): )())
(7): PRINT(print)
(7): STRING(N==10)
(7): ;(;)
(8): ELSE(else)
(8): IF(if)
(8): ((()
(8): ID(N)
(8): NEQ(!=)
(8): INTNUM(10)
(8): )())
(9): PRINT(print)
(9): STRING(N!=10)
(9): ;(;)
(12): IF(if)
(12): ((()
(12): ID(N)
(12): >(>)
(12): INTNUM(5)
(12): )())
(12): {({)
(13): PRINT(print)
(13): STRING(N>5)
(13): ;(;)
(14): }(})
(15): ELSE(else)
(15): IF(if)
(15): ((()
(15): ID(N)
(15): GTE(>=)
(15): INTNUM(0)
(15): )())
(15): {({)
(16): PRINT(print)
(16): STRING(N>=0)
(16): ;(;)
(17): }(})
(19): IF(if)
(19): ((()
(19): ID(N)
(19): <(<)
(19): INTNUM(10)
(19): )())
(19): {({)
(20): PRINT(print)
(20): STRING(N<10)
(20): ;(;)
(21): }(})
(22): ELSE(else)
(22): IF(if)
(22): ((()
(22): ID(N)
(22): LTE(<=)
(22): INTNUM(15)
(22): )())
(23): PRINT(print)
(23): STRING(N<=15)
(23): ;(;)
(25): ID(k)
(25): =(=)
(25): INTNUM(10)
(25): ;(;)
(26): WHILE(while)
(26): ((()
(26): ID(k)
(26): >(>)
(26): INTNUM(0)
(26): )())
(27): ID(k)
(27): =(=)
(27): ID(k)
(27): -(-)
(27): INTNUM(1)
(27): ;(;)
(29): WHILE(while)
(29): ((()
(29): ID(k)
(29): >(>)
(29): INTNUM(0)
(29): )())
(29): {({)
(30): IF(if)
(30): ((()
(30): ID(k)
(30): <(<)
(30): INTNUM(5)
(30): )())
(31): ID(i)
(31): =(=)
(31): INTNUM(1)
(31): ;(;)
(32): ELSE(else)
(32): IF(if)
(32): ((()
(32): ID(k)
(32): <(<)
(32): INTNUM(10)
(32): )())
(33): ID(i)
(33): =(=)
(33): INTNUM(2)
(33): ;(;)
(34): ELSE(else)
(35): ID(i)
(35): =(=)
(35): INTNUM(3)
(35): ;(;)
(37): ID(k)
(37): =(=)
(37): ID(k)
(37): -(-)
(37): INTNUM(1)
(37): ;(;)
(38): }(})
(41): FOR(for)
(41): ID(i)
(41): =(=)
(41): INTNUM(1)
(41): :(:)
(41): ID(N)
(42): FOR(for)
(42): ID(j)
(42): =(=)
(42): ID(i)
(42): :(:)
(42): ID(M)
(43): PRINT(print)
(43): ID(i)
(43): ,(,)
(43): ID(j)
(43): ;(;)
(46): FOR(for)
(46): ID(i)
(46): =(=)
(46): INTNUM(1)
(46): :(:)
(46): ID(N)
(46): {({)
(47): IF(if)
(47): ((()
(47): ID(i)
(47): LTE(<=)
(47): ID(N)
(47): /(/)
(47): INTNUM(16)
(47): )())
(48): PRINT(print)
(48): ID(i)
(48): ;(;)
(49): ELSE(else)
(49): IF(if)
(49): ((()
(49): ID(i)
(49): LTE(<=)
(49): ID(N)
(49): /(/)
(49): INTNUM(8)
(49): )())
(50): BREAK(break)
(50): ;(;)
(51): ELSE(else)
(51): IF(if)
(51): ((()
(51): ID(i)
(51): LTE(<=)
(51): ID(N)
(51): /(/)
(51): INTNUM(4)
(51): )())
(52): CONTINUE(continue)
(52): ;(;)
(53): ELSE(else)
(53): IF(if)
(53): ((()
(53): ID(i)
(53): LTE(<=)
(53): ID(N)
(53): /(/)
(53): INTNUM(2)
(53): )())
(54): RETURN(return)
(54): INTNUM(0)
(54): ;(;)
(55): }(})
(58): {({)
(59): ID(N)
(59): =(=)
(59): INTNUM(100)
(59): ;(;)
(60): ID(M)
(60): =(=)
(60): INTNUM(200)
(60): ;(;)
(61): }(})
